---
/**
 * Button component.
 * A flexible button component with multiple variants, sizes, and states.
 * Supports `primary`, `secondary`, `accent`, `outline`, `ghost`, and `destructive` variants.
 * Available sizes: `sm`, `md`, `lg`, `xl`.
 *
 * @prop {string} [variant="primary"] - The style variant of the button.
 * @prop {string} [size="md"] - The size of the button.
 * @prop {boolean} [fullWidth=false] - Whether the button should take full width.
 * @prop {boolean} [loading=false] - Shows a loading state.
 * @prop {string} [class] - Additional CSS classes to apply to the button.
 */
import type { HTMLAttributes } from "astro/types";
import { cn } from "@/lib/utils";

export interface Props extends HTMLAttributes<"button"> {
	variant?:
		| "primary"
		| "secondary"
		| "accent"
		| "outline"
		| "ghost"
		| "destructive";
	size?: "sm" | "md" | "lg" | "xl";
	fullWidth?: boolean;
	loading?: boolean;
	class?: string;
}

const {
	variant = "primary",
	size = "md",
	fullWidth = false,
	loading = false,
	type = "button",
	class: className,
	...attrs
} = Astro.props;

const variantStyles = {
	primary:
		"bg-brand-accent text-white hover:bg-brand-accent/90 dark:hover:bg-brand-accent/80 focus-visible:ring-brand-accent",
	secondary:
		"bg-background-secondary text-foreground hover:bg-background-secondary/80 dark:hover:bg-background-secondary/60 border border-border focus-visible:ring-foreground",
	accent:
		"bg-green-600 text-white hover:bg-green-700 dark:bg-green-700 dark:hover:bg-green-600 focus-visible:ring-green-600",
	outline:
		"border-2 border-brand-accent text-brand-accent bg-transparent hover:bg-brand-accent hover:text-white dark:hover:text-background focus-visible:ring-brand-accent",
	ghost:
		"text-foreground hover:bg-background-secondary dark:hover:bg-background-secondary/50 focus-visible:ring-foreground",
	destructive:
		"bg-red-600 text-white hover:bg-red-700 dark:bg-red-700 dark:hover:bg-red-600 focus-visible:ring-red-600",
};

const sizeStyles = {
	sm: "h-8 px-3 py-1.5 text-xs gap-1",
	md: "h-10 px-5 py-2.5 text-sm gap-1.5",
	lg: "h-12 px-6 py-3 text-base gap-2",
	xl: "h-14 px-8 py-4 text-lg gap-2.5",
};

const classes = cn(
	// Base styles
	"inline-flex justify-center items-center rounded-md font-medium",
	"transition-all duration-300 ease-in-out",
	"focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2",
	"disabled:opacity-50 disabled:cursor-not-allowed disabled:pointer-events-none",
	"cursor-pointer select-none",
	// Variant styles
	variantStyles[variant],
	// Size styles
	sizeStyles[size],
	// Full width
	fullWidth ? "w-full" : "w-max",
	// Loading state
	loading && "opacity-70 cursor-wait",
	// Custom classes
	className,
);
---

<button
	class={classes}
	type={type}
	disabled={loading || attrs.disabled}
	aria-busy={loading}
	{...attrs}
>
	{loading && (
		<svg
			class="animate-spin h-4 w-4"
			xmlns="http://www.w3.org/2000/svg"
			fill="none"
			viewBox="0 0 24 24"
		>
			<circle
				class="opacity-25"
				cx="12"
				cy="12"
				r="10"
				stroke="currentColor"
				stroke-width="4"
			></circle>
			<path
				class="opacity-75"
				fill="currentColor"
				d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
			></path>
		</svg>
	)}
	<slot />
</button>
