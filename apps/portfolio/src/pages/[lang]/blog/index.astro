---


import PageHeadline from "@/components/atoms/PageHeadline.astro";
import BlogGridContainer from "@/components/molecules/BlogGridContainer.astro";
import Pagination from "@/components/molecules/Pagination.astro";
import Footer from "@/components/organisms/Footer.astro";
import { getArticles } from "@/core/article";
import { getExternalArticles } from "@/core/external-article";
import { type Lang, LOCALES, useTranslations } from "@/i18n";
import Layout from "@/layouts/Layout.astro";
import type { BlogPost } from "@/lib/blog-post.utils";

// Get locale from params
const { lang } = Astro.params;
const currentLocale = lang as Lang;
const t = useTranslations(currentLocale);

// Get and sort articles and external articles for the current language
const allArticles = await getArticles();
const allExternalArticles = await getExternalArticles();

// Combine both types and filter by language
const allBlogPosts: BlogPost[] = [
	...allArticles.filter((post) => post.id.split("/")[0] === currentLocale),
	...allExternalArticles.filter(
		(post) => post.id.split("/")[0] === currentLocale,
	),
];

// Sort by date (newest first)
const sortedArticles = allBlogPosts.sort(
	(a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf(),
);

const title = t("blog.title");

export const getStaticPaths = () =>
	Object.keys(LOCALES).map((lang) => ({
		params: { lang },
	}));

const postsPerPage = 16;
const totalPages = Math.ceil(sortedArticles.length / postsPerPage);
const basePath = `/${currentLocale}/blog/page`;
const indexUrl = `/${currentLocale}/blog`;
---

<Layout {title}>
	<div class="container mx-auto px-4 pt-24">
		<PageHeadline {title}>
			<p class="text-xl">
				{
					t({
						en: "Stay updated with the latest insights and developments",
						es: "Mantente actualizado con las Ãºltimas novedades y desarrollos",
					})
				}
			</p>
		</PageHeadline>
		<BlogGridContainer posts={sortedArticles.slice(0, postsPerPage)} />
		<Pagination
			currentPage={1}
			lastPage={totalPages}
			urlPrev={null}
			urlNext={totalPages > 1 ? `${basePath}/2` : null}
			basePath={basePath}
			maxDisplayedPages={5}
			firstPageUrl={indexUrl}
		/>
	</div>
	<Footer />
</Layout>
