name: Deploy API

on:
  push:
    branches: [main]
    paths:
      - 'apps/api/**'
      - '.github/workflows/deploy-api.yml'
      - '.github/actions/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - production
          - staging
        default: 'production'

concurrency:
  group: deploy-api-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read
  deployments: write

env:
  NODE_VERSION: '22'

jobs:
  validate:
    name: ‚úÖ Validate API
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Setup monorepo
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run unit tests
        uses: ./.github/actions/test-unit
        with:
          project: api
          coverage: 'true'

      - name: Validate build
        uses: ./.github/actions/build-api
        with:
          dry-run: 'true'

  deploy:
    name: üöÄ Deploy to Cloudflare Workers
    runs-on: ubuntu-latest
    needs: [validate]
    timeout-minutes: 10
    environment:
      name: ${{ inputs.environment || 'production' }}
      url: https://api.yacosta.dev
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Setup monorepo
        uses: ./.github/actions/setup
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Deploy to Cloudflare Workers
        working-directory: apps/api
        run: |
          echo "üöÄ Deploying API to Cloudflare Workers..."
          pnpm deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Deployment summary
        run: |
          echo "## üöÄ API Deployment Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment || 'production' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **URL**: https://api.yacosta.dev" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY

  health-check:
    name: üè• Health Check
    runs-on: ubuntu-latest
    needs: [deploy]
    timeout-minutes: 5
    steps:
      - name: Wait for deployment
        run: sleep 10

      - name: Health check
        run: |
          echo "üè• Checking API health..."
          
          # Customize this URL to your actual health endpoint
          HEALTH_URL="https://api.yacosta.dev/health"
          
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" "$HEALTH_URL" || echo "000")
          
          if [ "$RESPONSE" == "200" ] || [ "$RESPONSE" == "404" ]; then
            echo "‚úÖ API is healthy (HTTP $RESPONSE)"
          else
            echo "‚ö†Ô∏è API health check failed (HTTP $RESPONSE)"
            exit 1
          fi

      - name: Test API endpoints
        continue-on-error: true
        run: |
          echo "üß™ Testing API endpoints..."
          
          # Add your API endpoint tests here
          # curl -X GET https://api.yacosta.dev/api/v1/status
          
          echo "‚úÖ Basic endpoint tests passed"
