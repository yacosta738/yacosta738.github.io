name: Playwright E2E Tests

# Explicit least-privilege permissions for E2E testing
permissions:
  contents: read
  actions: read
  pull-requests: read

on:
  push:
    branches: [main, develop, feature/*]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'specs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE/**'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'specs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE/**'

# Cancel in-progress E2E test runs for the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: E2E Tests - ${{ matrix.project }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v6
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Ensure pnpm is available
        shell: bash
        run: |
          PNPM_VERSION=10
          echo "ðŸ”§ Ensuring pnpm is available (requested version: $PNPM_VERSION)"
          if command -v pnpm >/dev/null 2>&1; then
            echo "pnpm already present -> $(pnpm --version)"
            exit 0
          fi
          if command -v corepack >/dev/null 2>&1; then
            corepack enable || true
            corepack prepare pnpm@${PNPM_VERSION} --activate || true
          fi
          if ! command -v pnpm >/dev/null 2>&1; then
            if command -v npm >/dev/null 2>&1; then
              npm i -g pnpm@${PNPM_VERSION} || true
              NGLOBAL=$(npm bin -g 2>/dev/null || echo "/usr/local/bin")
              echo "$NGLOBAL" >> $GITHUB_PATH
            fi
          fi
          if command -v pnpm >/dev/null 2>&1; then
            echo "pnpm available: $(pnpm --version)"
          else
            echo "ERROR: pnpm not found after attempts; subsequent steps may fail"
            exit 1
          fi
      
      - name: Get Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm list @playwright/test --json | jq -r '.[0].devDependencies["@playwright/test"].version')
          echo "version=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT
        working-directory: apps/portfolio
      
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}-${{ matrix.project }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}-
            ${{ runner.os }}-playwright-
      
      - name: Install Playwright browsers (with retry)
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: cd apps/portfolio && pnpm exec playwright install --with-deps ${{ matrix.project }}
      
      - name: Install browser dependencies (cached scenario)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps ${{ matrix.project }}
        working-directory: apps/portfolio
      
      - name: Run Playwright tests
        run: pnpm test:e2e --project=${{ matrix.project }}
        working-directory: apps/portfolio
        env:
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: playwright-results-${{ matrix.project }}
          path: apps/portfolio/playwright-report/
          retention-days: 30
      
      - name: Upload test traces
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: playwright-traces-${{ matrix.project }}
          path: apps/portfolio/test-results/
          retention-days: 30
  
  report:
    name: Publish Test Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v5
        with:
          path: all-reports
        continue-on-error: true

      - name: Publish Test Report
        uses: dorny/test-reporter@v2.1.1
        with:
          name: Playwright Tests
          path: "all-reports/**/results.xml"
          reporter: jest-junit
