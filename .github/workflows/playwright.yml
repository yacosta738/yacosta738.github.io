name: Playwright E2E Tests

permissions:
  contents: read

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: E2E Tests - ${{ matrix.project }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: '10.18.2'
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps ${{ matrix.project }}
        working-directory: apps/portfolio
      
      - name: Run Playwright tests
        run: pnpm test:e2e --project=${{ matrix.project }}
        working-directory: apps/portfolio
        env:
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.project }}
          path: apps/portfolio/playwright-report/
          retention-days: 30
      
      - name: Upload test traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-${{ matrix.project }}
          path: apps/portfolio/test-results/
          retention-days: 30
  
  report:
    name: Publish Test Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports
        continue-on-error: true

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          name: Playwright Tests
          path: "all-reports/**/results.xml"
          reporter: jest-junit
