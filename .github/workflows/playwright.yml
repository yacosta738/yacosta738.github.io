name: Playwright E2E Tests

permissions:
  contents: read

on:
  push:
    branches: [main, develop, feature/*]
  pull_request:
    branches: [main, develop]

# Cancel in-progress E2E test runs for the same ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: E2E Tests - ${{ matrix.project }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    strategy:
      fail-fast: false
      matrix:
        project: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - uses: ./.github/actions/setup
      
      - name: Get Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm list @playwright/test --json | jq -r '.[0].devDependencies["@playwright/test"].version')
          echo "version=$PLAYWRIGHT_VERSION" >> $GITHUB_OUTPUT
        working-directory: apps/portfolio
      
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}-${{ matrix.project }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ steps.playwright-version.outputs.version }}-
            ${{ runner.os }}-playwright-
      
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps ${{ matrix.project }}
        working-directory: apps/portfolio
      
      - name: Install browser dependencies (cached scenario)
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps ${{ matrix.project }}
        working-directory: apps/portfolio
      
      - name: Run Playwright tests
        run: pnpm test:e2e --project=${{ matrix.project }}
        working-directory: apps/portfolio
        env:
          CI: true
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.project }}
          path: apps/portfolio/playwright-report/
          retention-days: 30
      
      - name: Upload test traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-${{ matrix.project }}
          path: apps/portfolio/test-results/
          retention-days: 30
  
  report:
    name: Publish Test Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports
        continue-on-error: true

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        with:
          name: Playwright Tests
          path: "all-reports/**/results.xml"
          reporter: jest-junit
  
  collect-metrics:
    name: Collect E2E Metrics
    needs: [test, report]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v5
      
      - name: Collect and report metrics
        run: |
          chmod +x .github/scripts/collect-metrics.sh
          .github/scripts/collect-metrics.sh --workflow=playwright.yml --format=table
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
