name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm (via Corepack)
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lint & checks
        run: pnpm run check

      - name: Create .dev.vars for tests
        env:
          CONTACT_WEBHOOK_URL: ${{ secrets.CONTACT_WEBHOOK_URL }}
          NEWSLETTER_WEBHOOK_URL: ${{ secrets.NEWSLETTER_WEBHOOK_URL }}
          WEBHOOK_AUTH_TOKEN: ${{ secrets.WEBHOOK_AUTH_TOKEN }}
          WEBHOOK_FORM_TOKEN_ID: ${{ secrets.WEBHOOK_FORM_TOKEN_ID }}
          HCAPTCHA_SITE_KEY: ${{ secrets.HCAPTCHA_SITE_KEY }}
          HCAPTCHA_SECRET: ${{ secrets.HCAPTCHA_SECRET }}
        run: |
          cat > .dev.vars <<'EOF'
          CONTACT_WEBHOOK_URL=${CONTACT_WEBHOOK_URL}
          NEWSLETTER_WEBHOOK_URL=${NEWSLETTER_WEBHOOK_URL}
          WEBHOOK_AUTH_TOKEN=${WEBHOOK_AUTH_TOKEN}
          WEBHOOK_FORM_TOKEN_ID=${WEBHOOK_FORM_TOKEN_ID}
          HCAPTCHA_SITE_KEY=${HCAPTCHA_SITE_KEY}
          HCAPTCHA_SECRET=${HCAPTCHA_SECRET}
          EOF

          # Also place a copy in apps/api so package-local test runners find it
          mkdir -p apps/api
          cat > apps/api/.dev.vars <<'EOF'
          CONTACT_WEBHOOK_URL=${CONTACT_WEBHOOK_URL}
          NEWSLETTER_WEBHOOK_URL=${NEWSLETTER_WEBHOOK_URL}
          WEBHOOK_AUTH_TOKEN=${WEBHOOK_AUTH_TOKEN}
          WEBHOOK_FORM_TOKEN_ID=${WEBHOOK_FORM_TOKEN_ID}
          HCAPTCHA_SITE_KEY=${HCAPTCHA_SITE_KEY}
          HCAPTCHA_SECRET=${HCAPTCHA_SECRET}
          EOF

      - name: Run tests
        run: pnpm -w test

      - name: Audit for high vulnerabilities
        run: pnpm -w audit --audit-level=high
