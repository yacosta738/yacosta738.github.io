name: CI

# Explicit least-privilege permissions for security
permissions:
  contents: read
  actions: read
  pull-requests: read

on:
  push:
    branches: ["main"]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'specs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE/**'
  pull_request:
    branches: ["main"]
    paths-ignore:
      - 'docs/**'
      - '**.md'
      - 'specs/**'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE/**'

# Cancel in-progress runs for the same workflow and ref
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-changes:
    # No dependencies; runs first to determine which jobs should execute
    name: Detect Changed Files
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
    outputs:
      lint: ${{ steps.detect.outputs.lint }}
      test: ${{ steps.detect.outputs.test }}
      security: ${{ steps.detect.outputs.security }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Detect changes and determine jobs to run
        id: detect
        run: |
          chmod +x .github/scripts/detect-changes.sh
          .github/scripts/detect-changes.sh | tee changes.json
          
          chmod +x .github/scripts/should-run-job.sh
          
          # Check each job type and set outputs
          LINT_RESULT=$(.github/scripts/should-run-job.sh lint changes.json)
          TEST_RESULT=$(.github/scripts/should-run-job.sh test changes.json)
          SECURITY_RESULT=$(.github/scripts/should-run-job.sh security changes.json)
          
          echo "lint=$(echo "$LINT_RESULT" | jq -r '.should_run')" >> $GITHUB_OUTPUT
          echo "test=$(echo "$TEST_RESULT" | jq -r '.should_run')" >> $GITHUB_OUTPUT
          echo "security=$(echo "$SECURITY_RESULT" | jq -r '.should_run')" >> $GITHUB_OUTPUT
          
          # Log reasoning
          echo "Lint: $(echo "$LINT_RESULT" | jq -r '.reason')"
          echo "Test: $(echo "$TEST_RESULT" | jq -r '.reason')"
          echo "Security: $(echo "$SECURITY_RESULT" | jq -r '.reason')"

  lint:
    # Depends on detect-changes to only run if lint-relevant files changed
    name: Lint & Format Check
    needs: detect-changes
    if: needs.detect-changes.outputs.lint == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Run lint & checks (with retry)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: pnpm run check

  test:
    # Depends on detect-changes to only run if test-relevant files changed
    name: Unit & Integration Tests
    needs: detect-changes
    if: needs.detect-changes.outputs.test == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Run tests (with retry)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: pnpm -w test
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/lcov.info

  security-audit:
    # Depends on detect-changes to only run if security-relevant files changed
    name: Security Audit
    needs: detect-changes
    if: needs.detect-changes.outputs.security == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Audit for high vulnerabilities (with retry)
        uses: nick-fields/retry@v3
        with:
          timeout_minutes: 10
          max_attempts: 3
          command: pnpm -w audit --audit-level=high
  
  collect-metrics:
    # Depends on all jobs to collect metrics regardless of success/failure
    name: Collect Pipeline Metrics
    needs: [detect-changes, lint, test, security-audit]
    if: always()
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      actions: read
    steps:
      - uses: actions/checkout@v4
      
      - name: Collect and report metrics
        run: |
          chmod +x .github/scripts/collect-metrics.sh
          .github/scripts/collect-metrics.sh --workflow=ci.yml --format=table
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
