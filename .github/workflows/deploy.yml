name: Release, Build & Deploy

on:
  # Trigger on push to main branch
  push:
    branches: [ main ]
  # Allows manual workflow execution
  workflow_dispatch:

# Comprehensive permissions for release, build, and deployment
permissions:
  actions: read
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  repository-projects: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTACT_FORM: ${{ secrets.CONTACT_FORM }}
  PBOT_GITHUB_TOKEN: ${{ secrets.PBOT_GITHUB_TOKEN }}
  RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
  CONTACT_FORM_TOKEN: ${{ secrets.CONTACT_FORM_TOKEN }}
  
jobs:
  release-and-build:
    name: Release & Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for semantic-release

      - name: Install Tools & Dependencies
        uses: ./.github/actions/install
      
      - name: Setup GitHub Token (fallback)
        if: env.PBOT_GITHUB_TOKEN == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "PBOT_GITHUB_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: ðŸš€ Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ env.PBOT_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Build & Upload Astro Site
        uses: withastro/action@v3
        with:
          package-manager: pnpm@10.0.0
        env:
          CONTACT_FORM: ${{ secrets.CONTACT_FORM }}     

  deploy:
    name: Deploy to GitHub Pages
    needs: release-and-build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        env:
          CONTACT_FORM: ${{ secrets.CONTACT_FORM }}
  
  deploy-container-image:
    name: Build & Push Container Image
    needs: release-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
    
      - name: Install Tools & Dependencies
        uses: ./.github/actions/install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: |
            n4t5u/yacosta738.github.io
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            type=sha,format=long
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.authors=${{ github.actor }}

      - name: Build Astro site
        run: pnpm run build     

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.10.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
