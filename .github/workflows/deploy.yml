name: Release, Build & Deploy

on:
  # Trigger on push to main branch
  push:
    branches: [ main ]
  # Allows manual workflow execution
  workflow_dispatch:

# Comprehensive permissions for release, build, and deployment
permissions:
  contents: write
  pages: write
  id-token: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BRAND_NAME: ${{ secrets.BRAND_NAME }}
  SITE_TITLE: ${{ secrets.SITE_TITLE }}
  SITE_DESCRIPTION_EN: ${{ secrets.SITE_DESCRIPTION_EN }}
  SITE_DESCRIPTION_ES: ${{ secrets.SITE_DESCRIPTION_ES }}
  X_ACCOUNT: ${{ secrets.X_ACCOUNT }}
  NOT_TRANSLATED_CAUTION_EN: ${{ secrets.NOT_TRANSLATED_CAUTION_EN }}
  NOT_TRANSLATED_CAUTION_ES: ${{ secrets.NOT_TRANSLATED_CAUTION_ES }}
  API_URL: ${{ secrets.API_URL }}
  HCAPTCHA_SITE_KEY: ${{ secrets.HCAPTCHA_SITE_KEY }}
  AHREFS_KEY: ${{ secrets.AHREFS_KEY }}
  WEBHOOK_AUTH_TOKEN: ${{ secrets.WEBHOOK_AUTH_TOKEN }}
  WEBHOOK_FORM_TOKEN_ID: ${{ secrets.WEBHOOK_FORM_TOKEN_ID }}
  CONTACT_WEBHOOK_URL: ${{ secrets.CONTACT_WEBHOOK_URL }}
  NEWSLETTER_WEBHOOK_URL: ${{ secrets.NEWSLETTER_WEBHOOK_URL }}
  ALLOWED_ORIGINS: "https://yacosta738.github.io,https://www.yunielacosta.com,https://yunielacosta.com,https://v4.yunielacosta.com,https://www.v4.yunielacosta.com"
  HCAPTCHA_SECRET_KEY: ${{ secrets.HCAPTCHA_SECRET_KEY }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for semantic-release
      - uses: ./.github/actions/setup
      - name: ðŸš€ Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.PBOT_GITHUB_TOKEN || secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-astro:
    name: Build Astro Site
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Build & Upload Astro Site
        uses: withastro/action@v3
        with:
          package-manager: pnpm@10.0.0

  deploy-pages:
    name: Deploy to GitHub Pages
    needs: build-astro
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-docker:
    name: Build Docker Image
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.6.1
        with:
          images: |
            n4t5u/yacosta738.github.io
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            type=sha,format=long
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.authors=${{ github.actor }}
      - name: Build Astro site
        run: pnpm run build
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
