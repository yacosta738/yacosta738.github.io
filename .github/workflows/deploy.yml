name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branch’s name
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  actions: read
  contents: write
  pages: write
  id-token: write
  pull-requests: write
  repository-projects: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTACT_FORM: ${{ secrets.CONTACT_FORM }}
  PBOT_GITHUB_TOKEN: ${{ secrets.PBOT_GITHUB_TOKEN }}
  RECAPTCHA_SITE_KEY: ${{ secrets.RECAPTCHA_SITE_KEY }}
  CONTACT_FORM_TOKEN: ${{ secrets.CONTACT_FORM_TOKEN }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4

      - name: Install Tools & Dependencies
        uses: ./.github/actions/install
      
      - name: 🔍 PBOT_GITHUB_TOKEN
        if: env.PBOT_GITHUB_TOKEN == ''
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "PBOT_GITHUB_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV

      - name: 🚀 🟣 Release to GitHub
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ env.PBOT_GITHUB_TOKEN }}
          
      - name: Install, build, and upload your site
        uses: withastro/action@v3
        with:
          package-manager: pnpm@10.0.0
        env:
          CONTACT_FORM: ${{ secrets.CONTACT_FORM }}
    outputs:
        revnumber: ${{ env.revnumber }}     

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        env:
          CONTACT_FORM: ${{ secrets.CONTACT_FORM }}
  
  deploy-container-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4
    
      - name: Install Tools & Dependencies
        uses: ./.github/actions/install

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.PBOT_GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: |
            n4t5u/yacosta738.github.io
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            latest
            ${{ github.sha }}
            ${{ github.sha }}-${{ github.run_number }}
          labels: |
            org.opencontainers.image.source= ${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.run_id }}
            org.opencontainers.image.authors=${{ github.actor }}


      - name: Build the container image
        run: pnpm run build # build:docker     

      - name: Build and push Docker image
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
