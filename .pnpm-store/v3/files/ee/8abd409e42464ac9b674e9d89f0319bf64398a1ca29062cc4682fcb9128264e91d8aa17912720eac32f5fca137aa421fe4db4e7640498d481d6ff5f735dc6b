import { PathsOutput } from "fdir";
import ts from "typescript";
export interface FileToGenerate {
    path: string;
    source: string;
}
export declare const isLocale: (code: string) => boolean;
export declare const doesStringIncludeFrontmatter: (source: string) => boolean;
export declare const extractFrontmatterFromAstroSource: (source: string) => string;
export declare const overwriteAstroFrontmatter: (source: string, frontmatter: string) => string;
export declare const addDepthToRelativePath: (relativePath: string, depth?: number) => string;
/**
 * parse frontmatter using typescript compiler
 *
 * @param source
 */
export declare const parseFrontmatter: (source: string) => ts.SourceFile;
export declare const generateLocalizedFrontmatter: (tsNode: ts.SourceFile, language: string, fileDepth: number) => string;
/**
 * Crawls pages directory and returns all Astro pages
 * except for locale folders and excluded pages / directories (starting with underscore).
 * (https://docs.astro.build/en/core-concepts/routing/#excluding-pages)
 *
 * @param pagesDirectoryPath
 */
export declare const getAstroPagesPath: (pagesDirectoryPath: string) => PathsOutput;
export declare const createFiles: (filesToGenerate: FileToGenerate[]) => void;
