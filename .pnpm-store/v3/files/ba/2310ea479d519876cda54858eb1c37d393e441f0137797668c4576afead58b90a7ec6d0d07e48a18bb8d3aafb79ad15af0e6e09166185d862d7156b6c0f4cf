"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _styledBase = _interopRequireDefault(require("@emotion/styled-base"));

var _react = _interopRequireDefault(require("react"));

var _reactSelect = _interopRequireDefault(require("react-select"));

var _isHotkey = _interopRequireDefault(require("is-hotkey"));

var _netlifyCmsUiDefault = require("netlify-cms-ui-default");

var _SettingsButton = _interopRequireDefault(require("./SettingsButton"));

var _languageSelectStyles = _interopRequireDefault(require("./languageSelectStyles"));

var _core = require("@emotion/core");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

const SettingsPaneContainer = (0, _styledBase.default)("div", {
  target: "e17zz1uv0",
  label: "SettingsPaneContainer"
})("position:absolute;right:0;width:200px;z-index:", _netlifyCmsUiDefault.zIndex.zIndex10, ";height:100%;background-color:#fff;overflow:hidden;overflow-y:scroll;padding:12px;border-radius:0 3px 3px 0;", _netlifyCmsUiDefault.shadows.drop, ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZXR0aW5nc1BhbmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBU3dDIiwiZmlsZSI6Ii4uLy4uL3NyYy9TZXR0aW5nc1BhbmUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdyZWFjdC1zZWxlY3QnO1xuaW1wb3J0IGlzSG90a2V5IGZyb20gJ2lzLWhvdGtleSc7XG5pbXBvcnQgeyB0ZXh0LCBzaGFkb3dzLCB6SW5kZXggfSBmcm9tICduZXRsaWZ5LWNtcy11aS1kZWZhdWx0JztcblxuaW1wb3J0IFNldHRpbmdzQnV0dG9uIGZyb20gJy4vU2V0dGluZ3NCdXR0b24nO1xuaW1wb3J0IGxhbmd1YWdlU2VsZWN0U3R5bGVzIGZyb20gJy4vbGFuZ3VhZ2VTZWxlY3RTdHlsZXMnO1xuXG5jb25zdCBTZXR0aW5nc1BhbmVDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB3aWR0aDogMjAwcHg7XG4gIHotaW5kZXg6ICR7ekluZGV4LnpJbmRleDEwfTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGJvcmRlci1yYWRpdXM6IDAgM3B4IDNweCAwO1xuICAke3NoYWRvd3MuZHJvcH07XG5gO1xuXG5jb25zdCBTZXR0aW5nc0ZpZWxkTGFiZWwgPSBzdHlsZWQubGFiZWxgXG4gICR7dGV4dC5maWVsZExhYmVsfTtcbiAgZm9udC1zaXplOiAxMXB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXRvcDogOHB4O1xuICBtYXJnaW4tYm90dG9tOiAycHg7XG5gO1xuXG5jb25zdCBTZXR0aW5nc1NlY3Rpb25UaXRsZSA9IHN0eWxlZC5oM2BcbiAgZm9udC1zaXplOiAxNHB4O1xuICBtYXJnaW4tdG9wOiAxNHB4O1xuICBtYXJnaW4tYm90dG9tOiAwO1xuXG4gICY6Zmlyc3Qtb2YtdHlwZSB7XG4gICAgbWFyZ2luLXRvcDogNHB4O1xuICB9XG5gO1xuXG5mdW5jdGlvbiBTZXR0aW5nc1NlbGVjdCh7IHZhbHVlLCBvcHRpb25zLCBvbkNoYW5nZSwgZm9ySUQsIHR5cGUsIGF1dG9Gb2N1cyB9KSB7XG4gIHJldHVybiAoXG4gICAgPFNlbGVjdFxuICAgICAgaW5wdXRJZD17YCR7Zm9ySUR9LXNlbGVjdC0ke3R5cGV9YH1cbiAgICAgIHN0eWxlcz17bGFuZ3VhZ2VTZWxlY3RTdHlsZXN9XG4gICAgICB2YWx1ZT17dmFsdWV9XG4gICAgICBvcHRpb25zPXtvcHRpb25zfVxuICAgICAgb25DaGFuZ2U9e29wdCA9PiBvbkNoYW5nZShvcHQudmFsdWUpfVxuICAgICAgbWVudVBsYWNlbWVudD1cImF1dG9cIlxuICAgICAgY2FwdHVyZU1lbnVTY3JvbGw9e2ZhbHNlfVxuICAgICAgYXV0b0ZvY3VzPXthdXRvRm9jdXN9XG4gICAgLz5cbiAgKTtcbn1cblxuZnVuY3Rpb24gU2V0dGluZ3NQYW5lKHtcbiAgaGlkZVNldHRpbmdzLFxuICBmb3JJRCxcbiAgbW9kZXMsXG4gIG1vZGUsXG4gIHRoZW1lLFxuICB0aGVtZXMsXG4gIGtleU1hcCxcbiAga2V5TWFwcyxcbiAgYWxsb3dMYW5ndWFnZVNlbGVjdGlvbixcbiAgb25DaGFuZ2VMYW5nLFxuICBvbkNoYW5nZVRoZW1lLFxuICBvbkNoYW5nZUtleU1hcCxcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8U2V0dGluZ3NQYW5lQ29udGFpbmVyIG9uS2V5RG93bj17ZSA9PiBpc0hvdGtleSgnZXNjJywgZSkgJiYgaGlkZVNldHRpbmdzKCl9PlxuICAgICAgPFNldHRpbmdzQnV0dG9uIG9uQ2xpY2s9e2hpZGVTZXR0aW5nc30gc2hvd0Nsb3NlPXt0cnVlfSAvPlxuICAgICAge2FsbG93TGFuZ3VhZ2VTZWxlY3Rpb24gJiYgKFxuICAgICAgICA8PlxuICAgICAgICAgIDxTZXR0aW5nc1NlY3Rpb25UaXRsZT5GaWVsZCBTZXR0aW5nczwvU2V0dGluZ3NTZWN0aW9uVGl0bGU+XG4gICAgICAgICAgPFNldHRpbmdzRmllbGRMYWJlbCBodG1sRm9yPXtgJHtmb3JJRH0tc2VsZWN0LW1vZGVgfT5Nb2RlPC9TZXR0aW5nc0ZpZWxkTGFiZWw+XG4gICAgICAgICAgPFNldHRpbmdzU2VsZWN0XG4gICAgICAgICAgICB0eXBlPVwibW9kZVwiXG4gICAgICAgICAgICBmb3JJRD17Zm9ySUR9XG4gICAgICAgICAgICB2YWx1ZT17bW9kZX1cbiAgICAgICAgICAgIG9wdGlvbnM9e21vZGVzfVxuICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlTGFuZ31cbiAgICAgICAgICAgIGF1dG9Gb2N1c1xuICAgICAgICAgIC8+XG4gICAgICAgIDwvPlxuICAgICAgKX1cbiAgICAgIDw+XG4gICAgICAgIDxTZXR0aW5nc1NlY3Rpb25UaXRsZT5HbG9iYWwgU2V0dGluZ3M8L1NldHRpbmdzU2VjdGlvblRpdGxlPlxuICAgICAgICB7dGhlbWVzICYmIChcbiAgICAgICAgICA8PlxuICAgICAgICAgICAgPFNldHRpbmdzRmllbGRMYWJlbCBodG1sRm9yPXtgJHtmb3JJRH0tc2VsZWN0LXRoZW1lYH0+VGhlbWU8L1NldHRpbmdzRmllbGRMYWJlbD5cbiAgICAgICAgICAgIDxTZXR0aW5nc1NlbGVjdFxuICAgICAgICAgICAgICB0eXBlPVwidGhlbWVcIlxuICAgICAgICAgICAgICBmb3JJRD17Zm9ySUR9XG4gICAgICAgICAgICAgIHZhbHVlPXt7IHZhbHVlOiB0aGVtZSwgbGFiZWw6IHRoZW1lIH19XG4gICAgICAgICAgICAgIG9wdGlvbnM9e3RoZW1lcy5tYXAodCA9PiAoeyB2YWx1ZTogdCwgbGFiZWw6IHQgfSkpfVxuICAgICAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2VUaGVtZX1cbiAgICAgICAgICAgICAgYXV0b0ZvY3VzPXshYWxsb3dMYW5ndWFnZVNlbGVjdGlvbn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC8+XG4gICAgICAgICl9XG4gICAgICAgIDxTZXR0aW5nc0ZpZWxkTGFiZWwgaHRtbEZvcj17YCR7Zm9ySUR9LXNlbGVjdC1rZXltYXBgfT5LZXlNYXA8L1NldHRpbmdzRmllbGRMYWJlbD5cbiAgICAgICAgPFNldHRpbmdzU2VsZWN0XG4gICAgICAgICAgdHlwZT1cImtleW1hcFwiXG4gICAgICAgICAgZm9ySUQ9e2ZvcklEfVxuICAgICAgICAgIHZhbHVlPXtrZXlNYXB9XG4gICAgICAgICAgb3B0aW9ucz17a2V5TWFwc31cbiAgICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2VLZXlNYXB9XG4gICAgICAgIC8+XG4gICAgICA8Lz5cbiAgICA8L1NldHRpbmdzUGFuZUNvbnRhaW5lcj5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgU2V0dGluZ3NQYW5lO1xuIl19 */"));
const SettingsFieldLabel = (0, _styledBase.default)("label", {
  target: "e17zz1uv1",
  label: "SettingsFieldLabel"
})(_netlifyCmsUiDefault.text.fieldLabel, ";font-size:11px;display:block;margin-top:8px;margin-bottom:2px;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZXR0aW5nc1BhbmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUJ1QyIsImZpbGUiOiIuLi8uLi9zcmMvU2V0dGluZ3NQYW5lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCBTZWxlY3QgZnJvbSAncmVhY3Qtc2VsZWN0JztcbmltcG9ydCBpc0hvdGtleSBmcm9tICdpcy1ob3RrZXknO1xuaW1wb3J0IHsgdGV4dCwgc2hhZG93cywgekluZGV4IH0gZnJvbSAnbmV0bGlmeS1jbXMtdWktZGVmYXVsdCc7XG5cbmltcG9ydCBTZXR0aW5nc0J1dHRvbiBmcm9tICcuL1NldHRpbmdzQnV0dG9uJztcbmltcG9ydCBsYW5ndWFnZVNlbGVjdFN0eWxlcyBmcm9tICcuL2xhbmd1YWdlU2VsZWN0U3R5bGVzJztcblxuY29uc3QgU2V0dGluZ3NQYW5lQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDIwMHB4O1xuICB6LWluZGV4OiAke3pJbmRleC56SW5kZXgxMH07XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBwYWRkaW5nOiAxMnB4O1xuICBib3JkZXItcmFkaXVzOiAwIDNweCAzcHggMDtcbiAgJHtzaGFkb3dzLmRyb3B9O1xuYDtcblxuY29uc3QgU2V0dGluZ3NGaWVsZExhYmVsID0gc3R5bGVkLmxhYmVsYFxuICAke3RleHQuZmllbGRMYWJlbH07XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IDhweDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xuYDtcblxuY29uc3QgU2V0dGluZ3NTZWN0aW9uVGl0bGUgPSBzdHlsZWQuaDNgXG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLXRvcDogMTRweDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAmOmZpcnN0LW9mLXR5cGUge1xuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgfVxuYDtcblxuZnVuY3Rpb24gU2V0dGluZ3NTZWxlY3QoeyB2YWx1ZSwgb3B0aW9ucywgb25DaGFuZ2UsIGZvcklELCB0eXBlLCBhdXRvRm9jdXMgfSkge1xuICByZXR1cm4gKFxuICAgIDxTZWxlY3RcbiAgICAgIGlucHV0SWQ9e2Ake2ZvcklEfS1zZWxlY3QtJHt0eXBlfWB9XG4gICAgICBzdHlsZXM9e2xhbmd1YWdlU2VsZWN0U3R5bGVzfVxuICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgb3B0aW9ucz17b3B0aW9uc31cbiAgICAgIG9uQ2hhbmdlPXtvcHQgPT4gb25DaGFuZ2Uob3B0LnZhbHVlKX1cbiAgICAgIG1lbnVQbGFjZW1lbnQ9XCJhdXRvXCJcbiAgICAgIGNhcHR1cmVNZW51U2Nyb2xsPXtmYWxzZX1cbiAgICAgIGF1dG9Gb2N1cz17YXV0b0ZvY3VzfVxuICAgIC8+XG4gICk7XG59XG5cbmZ1bmN0aW9uIFNldHRpbmdzUGFuZSh7XG4gIGhpZGVTZXR0aW5ncyxcbiAgZm9ySUQsXG4gIG1vZGVzLFxuICBtb2RlLFxuICB0aGVtZSxcbiAgdGhlbWVzLFxuICBrZXlNYXAsXG4gIGtleU1hcHMsXG4gIGFsbG93TGFuZ3VhZ2VTZWxlY3Rpb24sXG4gIG9uQ2hhbmdlTGFuZyxcbiAgb25DaGFuZ2VUaGVtZSxcbiAgb25DaGFuZ2VLZXlNYXAsXG59KSB7XG4gIHJldHVybiAoXG4gICAgPFNldHRpbmdzUGFuZUNvbnRhaW5lciBvbktleURvd249e2UgPT4gaXNIb3RrZXkoJ2VzYycsIGUpICYmIGhpZGVTZXR0aW5ncygpfT5cbiAgICAgIDxTZXR0aW5nc0J1dHRvbiBvbkNsaWNrPXtoaWRlU2V0dGluZ3N9IHNob3dDbG9zZT17dHJ1ZX0gLz5cbiAgICAgIHthbGxvd0xhbmd1YWdlU2VsZWN0aW9uICYmIChcbiAgICAgICAgPD5cbiAgICAgICAgICA8U2V0dGluZ3NTZWN0aW9uVGl0bGU+RmllbGQgU2V0dGluZ3M8L1NldHRpbmdzU2VjdGlvblRpdGxlPlxuICAgICAgICAgIDxTZXR0aW5nc0ZpZWxkTGFiZWwgaHRtbEZvcj17YCR7Zm9ySUR9LXNlbGVjdC1tb2RlYH0+TW9kZTwvU2V0dGluZ3NGaWVsZExhYmVsPlxuICAgICAgICAgIDxTZXR0aW5nc1NlbGVjdFxuICAgICAgICAgICAgdHlwZT1cIm1vZGVcIlxuICAgICAgICAgICAgZm9ySUQ9e2ZvcklEfVxuICAgICAgICAgICAgdmFsdWU9e21vZGV9XG4gICAgICAgICAgICBvcHRpb25zPXttb2Rlc31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZUxhbmd9XG4gICAgICAgICAgICBhdXRvRm9jdXNcbiAgICAgICAgICAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgICA8PlxuICAgICAgICA8U2V0dGluZ3NTZWN0aW9uVGl0bGU+R2xvYmFsIFNldHRpbmdzPC9TZXR0aW5nc1NlY3Rpb25UaXRsZT5cbiAgICAgICAge3RoZW1lcyAmJiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDxTZXR0aW5nc0ZpZWxkTGFiZWwgaHRtbEZvcj17YCR7Zm9ySUR9LXNlbGVjdC10aGVtZWB9PlRoZW1lPC9TZXR0aW5nc0ZpZWxkTGFiZWw+XG4gICAgICAgICAgICA8U2V0dGluZ3NTZWxlY3RcbiAgICAgICAgICAgICAgdHlwZT1cInRoZW1lXCJcbiAgICAgICAgICAgICAgZm9ySUQ9e2ZvcklEfVxuICAgICAgICAgICAgICB2YWx1ZT17eyB2YWx1ZTogdGhlbWUsIGxhYmVsOiB0aGVtZSB9fVxuICAgICAgICAgICAgICBvcHRpb25zPXt0aGVtZXMubWFwKHQgPT4gKHsgdmFsdWU6IHQsIGxhYmVsOiB0IH0pKX1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlVGhlbWV9XG4gICAgICAgICAgICAgIGF1dG9Gb2N1cz17IWFsbG93TGFuZ3VhZ2VTZWxlY3Rpb259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvPlxuICAgICAgICApfVxuICAgICAgICA8U2V0dGluZ3NGaWVsZExhYmVsIGh0bWxGb3I9e2Ake2ZvcklEfS1zZWxlY3Qta2V5bWFwYH0+S2V5TWFwPC9TZXR0aW5nc0ZpZWxkTGFiZWw+XG4gICAgICAgIDxTZXR0aW5nc1NlbGVjdFxuICAgICAgICAgIHR5cGU9XCJrZXltYXBcIlxuICAgICAgICAgIGZvcklEPXtmb3JJRH1cbiAgICAgICAgICB2YWx1ZT17a2V5TWFwfVxuICAgICAgICAgIG9wdGlvbnM9e2tleU1hcHN9XG4gICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlS2V5TWFwfVxuICAgICAgICAvPlxuICAgICAgPC8+XG4gICAgPC9TZXR0aW5nc1BhbmVDb250YWluZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNldHRpbmdzUGFuZTtcbiJdfQ== */"));
const SettingsSectionTitle = (0, _styledBase.default)("h3", {
  target: "e17zz1uv2",
  label: "SettingsSectionTitle"
})(process.env.NODE_ENV === "production" ? {
  name: "punfmt",
  styles: "font-size:14px;margin-top:14px;margin-bottom:0;&:first-of-type{margin-top:4px;}"
} : {
  name: "punfmt",
  styles: "font-size:14px;margin-top:14px;margin-bottom:0;&:first-of-type{margin-top:4px;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZXR0aW5nc1BhbmUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0JzQyIsImZpbGUiOiIuLi8uLi9zcmMvU2V0dGluZ3NQYW5lLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcbmltcG9ydCBTZWxlY3QgZnJvbSAncmVhY3Qtc2VsZWN0JztcbmltcG9ydCBpc0hvdGtleSBmcm9tICdpcy1ob3RrZXknO1xuaW1wb3J0IHsgdGV4dCwgc2hhZG93cywgekluZGV4IH0gZnJvbSAnbmV0bGlmeS1jbXMtdWktZGVmYXVsdCc7XG5cbmltcG9ydCBTZXR0aW5nc0J1dHRvbiBmcm9tICcuL1NldHRpbmdzQnV0dG9uJztcbmltcG9ydCBsYW5ndWFnZVNlbGVjdFN0eWxlcyBmcm9tICcuL2xhbmd1YWdlU2VsZWN0U3R5bGVzJztcblxuY29uc3QgU2V0dGluZ3NQYW5lQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMDtcbiAgd2lkdGg6IDIwMHB4O1xuICB6LWluZGV4OiAke3pJbmRleC56SW5kZXgxMH07XG4gIGhlaWdodDogMTAwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBwYWRkaW5nOiAxMnB4O1xuICBib3JkZXItcmFkaXVzOiAwIDNweCAzcHggMDtcbiAgJHtzaGFkb3dzLmRyb3B9O1xuYDtcblxuY29uc3QgU2V0dGluZ3NGaWVsZExhYmVsID0gc3R5bGVkLmxhYmVsYFxuICAke3RleHQuZmllbGRMYWJlbH07XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi10b3A6IDhweDtcbiAgbWFyZ2luLWJvdHRvbTogMnB4O1xuYDtcblxuY29uc3QgU2V0dGluZ3NTZWN0aW9uVGl0bGUgPSBzdHlsZWQuaDNgXG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgbWFyZ2luLXRvcDogMTRweDtcbiAgbWFyZ2luLWJvdHRvbTogMDtcblxuICAmOmZpcnN0LW9mLXR5cGUge1xuICAgIG1hcmdpbi10b3A6IDRweDtcbiAgfVxuYDtcblxuZnVuY3Rpb24gU2V0dGluZ3NTZWxlY3QoeyB2YWx1ZSwgb3B0aW9ucywgb25DaGFuZ2UsIGZvcklELCB0eXBlLCBhdXRvRm9jdXMgfSkge1xuICByZXR1cm4gKFxuICAgIDxTZWxlY3RcbiAgICAgIGlucHV0SWQ9e2Ake2ZvcklEfS1zZWxlY3QtJHt0eXBlfWB9XG4gICAgICBzdHlsZXM9e2xhbmd1YWdlU2VsZWN0U3R5bGVzfVxuICAgICAgdmFsdWU9e3ZhbHVlfVxuICAgICAgb3B0aW9ucz17b3B0aW9uc31cbiAgICAgIG9uQ2hhbmdlPXtvcHQgPT4gb25DaGFuZ2Uob3B0LnZhbHVlKX1cbiAgICAgIG1lbnVQbGFjZW1lbnQ9XCJhdXRvXCJcbiAgICAgIGNhcHR1cmVNZW51U2Nyb2xsPXtmYWxzZX1cbiAgICAgIGF1dG9Gb2N1cz17YXV0b0ZvY3VzfVxuICAgIC8+XG4gICk7XG59XG5cbmZ1bmN0aW9uIFNldHRpbmdzUGFuZSh7XG4gIGhpZGVTZXR0aW5ncyxcbiAgZm9ySUQsXG4gIG1vZGVzLFxuICBtb2RlLFxuICB0aGVtZSxcbiAgdGhlbWVzLFxuICBrZXlNYXAsXG4gIGtleU1hcHMsXG4gIGFsbG93TGFuZ3VhZ2VTZWxlY3Rpb24sXG4gIG9uQ2hhbmdlTGFuZyxcbiAgb25DaGFuZ2VUaGVtZSxcbiAgb25DaGFuZ2VLZXlNYXAsXG59KSB7XG4gIHJldHVybiAoXG4gICAgPFNldHRpbmdzUGFuZUNvbnRhaW5lciBvbktleURvd249e2UgPT4gaXNIb3RrZXkoJ2VzYycsIGUpICYmIGhpZGVTZXR0aW5ncygpfT5cbiAgICAgIDxTZXR0aW5nc0J1dHRvbiBvbkNsaWNrPXtoaWRlU2V0dGluZ3N9IHNob3dDbG9zZT17dHJ1ZX0gLz5cbiAgICAgIHthbGxvd0xhbmd1YWdlU2VsZWN0aW9uICYmIChcbiAgICAgICAgPD5cbiAgICAgICAgICA8U2V0dGluZ3NTZWN0aW9uVGl0bGU+RmllbGQgU2V0dGluZ3M8L1NldHRpbmdzU2VjdGlvblRpdGxlPlxuICAgICAgICAgIDxTZXR0aW5nc0ZpZWxkTGFiZWwgaHRtbEZvcj17YCR7Zm9ySUR9LXNlbGVjdC1tb2RlYH0+TW9kZTwvU2V0dGluZ3NGaWVsZExhYmVsPlxuICAgICAgICAgIDxTZXR0aW5nc1NlbGVjdFxuICAgICAgICAgICAgdHlwZT1cIm1vZGVcIlxuICAgICAgICAgICAgZm9ySUQ9e2ZvcklEfVxuICAgICAgICAgICAgdmFsdWU9e21vZGV9XG4gICAgICAgICAgICBvcHRpb25zPXttb2Rlc31cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtvbkNoYW5nZUxhbmd9XG4gICAgICAgICAgICBhdXRvRm9jdXNcbiAgICAgICAgICAvPlxuICAgICAgICA8Lz5cbiAgICAgICl9XG4gICAgICA8PlxuICAgICAgICA8U2V0dGluZ3NTZWN0aW9uVGl0bGU+R2xvYmFsIFNldHRpbmdzPC9TZXR0aW5nc1NlY3Rpb25UaXRsZT5cbiAgICAgICAge3RoZW1lcyAmJiAoXG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDxTZXR0aW5nc0ZpZWxkTGFiZWwgaHRtbEZvcj17YCR7Zm9ySUR9LXNlbGVjdC10aGVtZWB9PlRoZW1lPC9TZXR0aW5nc0ZpZWxkTGFiZWw+XG4gICAgICAgICAgICA8U2V0dGluZ3NTZWxlY3RcbiAgICAgICAgICAgICAgdHlwZT1cInRoZW1lXCJcbiAgICAgICAgICAgICAgZm9ySUQ9e2ZvcklEfVxuICAgICAgICAgICAgICB2YWx1ZT17eyB2YWx1ZTogdGhlbWUsIGxhYmVsOiB0aGVtZSB9fVxuICAgICAgICAgICAgICBvcHRpb25zPXt0aGVtZXMubWFwKHQgPT4gKHsgdmFsdWU6IHQsIGxhYmVsOiB0IH0pKX1cbiAgICAgICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlVGhlbWV9XG4gICAgICAgICAgICAgIGF1dG9Gb2N1cz17IWFsbG93TGFuZ3VhZ2VTZWxlY3Rpb259XG4gICAgICAgICAgICAvPlxuICAgICAgICAgIDwvPlxuICAgICAgICApfVxuICAgICAgICA8U2V0dGluZ3NGaWVsZExhYmVsIGh0bWxGb3I9e2Ake2ZvcklEfS1zZWxlY3Qta2V5bWFwYH0+S2V5TWFwPC9TZXR0aW5nc0ZpZWxkTGFiZWw+XG4gICAgICAgIDxTZXR0aW5nc1NlbGVjdFxuICAgICAgICAgIHR5cGU9XCJrZXltYXBcIlxuICAgICAgICAgIGZvcklEPXtmb3JJRH1cbiAgICAgICAgICB2YWx1ZT17a2V5TWFwfVxuICAgICAgICAgIG9wdGlvbnM9e2tleU1hcHN9XG4gICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlS2V5TWFwfVxuICAgICAgICAvPlxuICAgICAgPC8+XG4gICAgPC9TZXR0aW5nc1BhbmVDb250YWluZXI+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNldHRpbmdzUGFuZTtcbiJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

function SettingsSelect(_ref) {
  let {
    value,
    options,
    onChange,
    forID,
    type,
    autoFocus
  } = _ref;
  return (0, _core.jsx)(_reactSelect.default, {
    inputId: `${forID}-select-${type}`,
    styles: _languageSelectStyles.default,
    value: value,
    options: options,
    onChange: opt => onChange(opt.value),
    menuPlacement: "auto",
    captureMenuScroll: false,
    autoFocus: autoFocus
  });
}

function SettingsPane(_ref2) {
  let {
    hideSettings,
    forID,
    modes,
    mode,
    theme,
    themes,
    keyMap,
    keyMaps,
    allowLanguageSelection,
    onChangeLang,
    onChangeTheme,
    onChangeKeyMap
  } = _ref2;
  return (0, _core.jsx)(SettingsPaneContainer, {
    onKeyDown: e => (0, _isHotkey.default)('esc', e) && hideSettings()
  }, (0, _core.jsx)(_SettingsButton.default, {
    onClick: hideSettings,
    showClose: true
  }), allowLanguageSelection && (0, _core.jsx)(_react.default.Fragment, null, (0, _core.jsx)(SettingsSectionTitle, null, "Field Settings"), (0, _core.jsx)(SettingsFieldLabel, {
    htmlFor: `${forID}-select-mode`
  }, "Mode"), (0, _core.jsx)(SettingsSelect, {
    type: "mode",
    forID: forID,
    value: mode,
    options: modes,
    onChange: onChangeLang,
    autoFocus: true
  })), (0, _core.jsx)(_react.default.Fragment, null, (0, _core.jsx)(SettingsSectionTitle, null, "Global Settings"), themes && (0, _core.jsx)(_react.default.Fragment, null, (0, _core.jsx)(SettingsFieldLabel, {
    htmlFor: `${forID}-select-theme`
  }, "Theme"), (0, _core.jsx)(SettingsSelect, {
    type: "theme",
    forID: forID,
    value: {
      value: theme,
      label: theme
    },
    options: themes.map(t => ({
      value: t,
      label: t
    })),
    onChange: onChangeTheme,
    autoFocus: !allowLanguageSelection
  })), (0, _core.jsx)(SettingsFieldLabel, {
    htmlFor: `${forID}-select-keymap`
  }, "KeyMap"), (0, _core.jsx)(SettingsSelect, {
    type: "keymap",
    forID: forID,
    value: keyMap,
    options: keyMaps,
    onChange: onChangeKeyMap
  })));
}

var _default = SettingsPane;
exports.default = _default;