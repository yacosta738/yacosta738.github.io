import { Ancestor, Annotation, Mark, Node, Text } from '../..';
import { SchemaRule, SchemaCheck } from './rule';
/**
 * Check an annotation object.
 */
export declare const checkAnnotation: (annotation: Annotation, key: string, check: SchemaCheck) => AnnotationInvalidError | AnnotationObjectInvalidError | AnnotationPropertyInvalidError | ChildInvalidError | ChildMaxInvalidError | ChildMinInvalidError | ChildObjectInvalidError | ChildOverflowError | ChildPropertyInvalidError | FirstChildInvalidError | FirstChildObjectInvalidError | FirstChildPropertyInvalidError | LastChildInvalidError | LastChildObjectInvalidError | LastChildPropertyInvalidError | MarkInvalidError | MarkObjectInvalidError | MarkPropertyInvalidError | NextSiblingInvalidError | NextSiblingObjectInvalidError | NextSiblingPropertyInvalidError | NodeInvalidError | NodeObjectInvalidError | NodePropertyInvalidError | NodeTextInvalidError | ParentInvalidError | ParentObjectInvalidError | ParentPropertyInvalidError | PreviousSiblingInvalidError | PreviousSiblingObjectInvalidError | PreviousSiblingPropertyInvalidError | undefined;
/**
 * Check a mark object.
 */
export declare const checkMark: (mark: Mark, index: number, node: Text, path: number[], check: SchemaCheck) => AnnotationInvalidError | AnnotationObjectInvalidError | AnnotationPropertyInvalidError | ChildInvalidError | ChildMaxInvalidError | ChildMinInvalidError | ChildObjectInvalidError | ChildOverflowError | ChildPropertyInvalidError | FirstChildInvalidError | FirstChildObjectInvalidError | FirstChildPropertyInvalidError | LastChildInvalidError | LastChildObjectInvalidError | LastChildPropertyInvalidError | MarkInvalidError | MarkObjectInvalidError | MarkPropertyInvalidError | NextSiblingInvalidError | NextSiblingObjectInvalidError | NextSiblingPropertyInvalidError | NodeInvalidError | NodeObjectInvalidError | NodePropertyInvalidError | NodeTextInvalidError | ParentInvalidError | ParentObjectInvalidError | ParentPropertyInvalidError | PreviousSiblingInvalidError | PreviousSiblingObjectInvalidError | PreviousSiblingPropertyInvalidError | undefined;
/**
 * Check a node object.
 */
export declare const checkNode: (node: Node, path: number[], check: SchemaCheck, rules: SchemaRule[]) => AnnotationInvalidError | AnnotationObjectInvalidError | AnnotationPropertyInvalidError | ChildInvalidError | ChildMaxInvalidError | ChildMinInvalidError | ChildObjectInvalidError | ChildOverflowError | ChildPropertyInvalidError | FirstChildInvalidError | FirstChildObjectInvalidError | FirstChildPropertyInvalidError | LastChildInvalidError | LastChildObjectInvalidError | LastChildPropertyInvalidError | MarkInvalidError | MarkObjectInvalidError | MarkPropertyInvalidError | NextSiblingInvalidError | NextSiblingObjectInvalidError | NextSiblingPropertyInvalidError | NodeInvalidError | NodeObjectInvalidError | NodePropertyInvalidError | NodeTextInvalidError | ParentInvalidError | ParentObjectInvalidError | ParentPropertyInvalidError | PreviousSiblingInvalidError | PreviousSiblingObjectInvalidError | PreviousSiblingPropertyInvalidError | undefined;
/**
 * Check an ancestor object.
 */
export declare const checkAncestor: (node: Ancestor, path: number[], check: SchemaCheck, rules: SchemaRule[]) => AnnotationInvalidError | AnnotationObjectInvalidError | AnnotationPropertyInvalidError | ChildInvalidError | ChildMaxInvalidError | ChildMinInvalidError | ChildObjectInvalidError | ChildOverflowError | ChildPropertyInvalidError | FirstChildInvalidError | FirstChildObjectInvalidError | FirstChildPropertyInvalidError | LastChildInvalidError | LastChildObjectInvalidError | LastChildPropertyInvalidError | MarkInvalidError | MarkObjectInvalidError | MarkPropertyInvalidError | NextSiblingInvalidError | NextSiblingObjectInvalidError | NextSiblingPropertyInvalidError | NodeInvalidError | NodeObjectInvalidError | NodePropertyInvalidError | NodeTextInvalidError | ParentInvalidError | ParentObjectInvalidError | ParentPropertyInvalidError | PreviousSiblingInvalidError | PreviousSiblingObjectInvalidError | PreviousSiblingPropertyInvalidError | undefined;
//# sourceMappingURL=checkers.d.ts.map