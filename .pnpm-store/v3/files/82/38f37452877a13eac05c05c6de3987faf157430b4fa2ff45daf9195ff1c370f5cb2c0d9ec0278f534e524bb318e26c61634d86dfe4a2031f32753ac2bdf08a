{"version":3,"file":"slate-react.es.js","sources":["../src/constants/event-handlers.js","../src/constants/other-handlers.js","../src/constants/data-attributes.js","../src/constants/selectors.js","../src/utils/offset-key.js","../src/components/leaf.js","../src/components/text.js","../src/components/void.js","../src/components/node.js","../src/utils/scroll-to-selection.js","../src/utils/remove-all-ranges.js","../src/components/content.js","../src/plugins/react/editor-props.js","../src/plugins/react/rendering.js","../src/plugins/react/commands.js","../src/plugins/react/queries.js","../src/plugins/android/diff-text.js","../src/plugins/android/composition-manager.js","../src/plugins/android/index.js","../src/plugins/debug/noop.js","../src/constants/transfer-types.js","../src/utils/clone-fragment.js","../src/utils/get-event-transfer.js","../src/utils/set-event-transfer.js","../src/plugins/dom/after.js","../src/plugins/dom/before.js","../src/plugins/dom/index.js","../src/plugins/react/restore-dom.js","../src/plugins/debug/stringify-event.js","../src/plugins/debug/debug-events.js","../src/plugins/debug/debug-batch-events.js","../src/plugins/debug/debug-mutations.js","../src/plugins/react/index.js","../src/components/editor.js","../src/utils/find-dom-node.js","../src/utils/find-dom-point.js","../src/utils/find-dom-range.js","../src/utils/find-node.js","../src/utils/find-path.js","../src/utils/find-point.js","../src/utils/find-range.js","../src/utils/get-event-range.js","../src/index.js"],"sourcesContent":["/**\n * Event handlers used by Slate plugins.\n *\n * @type {Array}\n */\n\nconst EVENT_HANDLERS = [\n  'onBeforeInput',\n  'onBlur',\n  'onClick',\n  'onContextMenu',\n  'onCompositionEnd',\n  'onCompositionStart',\n  'onCopy',\n  'onCut',\n  'onDragEnd',\n  'onDragEnter',\n  'onDragExit',\n  'onDragLeave',\n  'onDragOver',\n  'onDragStart',\n  'onDrop',\n  'onInput',\n  'onFocus',\n  'onKeyDown',\n  'onKeyUp',\n  'onMouseDown',\n  'onMouseUp',\n  'onPaste',\n  'onSelect',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default EVENT_HANDLERS\n","/**\n * Other handlers used by Slate plugins.\n *\n * @type {Array}\n */\n\nconst OTHER_HANDLERS = [\n  'decorateNode',\n  'renderAnnotation',\n  'renderBlock',\n  'renderDecoration',\n  'renderDocument',\n  'renderEditor',\n  'renderInline',\n  'renderMark',\n]\n\n/**\n * Export.\n *\n * @type {Array}\n */\n\nexport default OTHER_HANDLERS\n","/**\n * DOM data attribute strings that refer to Slate concepts.\n *\n * @type {String}\n */\n\nexport default {\n  EDITOR: 'data-slate-editor',\n  FRAGMENT: 'data-slate-fragment',\n  KEY: 'data-key',\n  LEAF: 'data-slate-leaf',\n  LENGTH: 'data-slate-length',\n  OBJECT: 'data-slate-object',\n  OFFSET_KEY: 'data-offset-key',\n  SPACER: 'data-slate-spacer',\n  STRING: 'data-slate-string',\n  TEXT: 'data-slate-object',\n  VOID: 'data-slate-void',\n  ZERO_WIDTH: 'data-slate-zero-width',\n}\n","import DATA_ATTRS from './data-attributes'\n\n/**\n * DOM selector strings that refer to Slate concepts.\n *\n * @type {String}\n */\n\nexport default {\n  BLOCK: `[${DATA_ATTRS.OBJECT}=\"block\"]`,\n  EDITOR: `[${DATA_ATTRS.EDITOR}]`,\n  INLINE: `[${DATA_ATTRS.OBJECT}=\"inline\"]`,\n  KEY: `[${DATA_ATTRS.KEY}]`,\n  LEAF: `[${DATA_ATTRS.LEAF}]`,\n  OBJECT: `[${DATA_ATTRS.OBJECT}]`,\n  STRING: `[${DATA_ATTRS.STRING}]`,\n  TEXT: `[${DATA_ATTRS.OBJECT}=\"text\"]`,\n  VOID: `[${DATA_ATTRS.VOID}]`,\n  ZERO_WIDTH: `[${DATA_ATTRS.ZERO_WIDTH}]`,\n}\n","/**\n * Offset key parser regex.\n *\n * @type {RegExp}\n */\n\nconst PARSER = /^([\\w-]+)(?::(\\d+))?$/\n\n/**\n * Parse an offset key `string`.\n *\n * @param {String} string\n * @return {Object}\n */\n\nfunction parse(string) {\n  const matches = PARSER.exec(string)\n\n  if (!matches) {\n    throw new Error(`Invalid offset key string \"${string}\".`)\n  }\n\n  const [original, key, index] = matches // eslint-disable-line no-unused-vars\n  return {\n    key,\n    index: parseInt(index, 10),\n  }\n}\n\n/**\n * Stringify an offset key `object`.\n *\n * @param {Object} object\n *   @property {String} key\n *   @property {Number} index\n * @return {String}\n */\n\nfunction stringify(object) {\n  return `${object.key}:${object.index}`\n}\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport default {\n  parse,\n  stringify,\n}\n","import React from 'react'\nimport Types from 'prop-types'\nimport SlateTypes from 'slate-prop-types'\nimport ImmutableTypes from 'react-immutable-proptypes'\n\nimport OffsetKey from '../utils/offset-key'\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Leaf strings with text in them.\n *\n * @type {Component}\n */\n\nconst TextString = ({ text = '', isTrailing = false }) => {\n  return (\n    <span\n      {...{\n        [DATA_ATTRS.STRING]: true,\n      }}\n    >\n      {text}\n      {isTrailing ? '\\n' : null}\n    </span>\n  )\n}\n\n/**\n * Leaf strings without text, render as zero-width strings.\n *\n * @type {Component}\n */\n\nconst ZeroWidthString = ({ length = 0, isLineBreak = false }) => {\n  return (\n    <span\n      {...{\n        [DATA_ATTRS.ZERO_WIDTH]: isLineBreak ? 'n' : 'z',\n        [DATA_ATTRS.LENGTH]: length,\n      }}\n    >\n      {'\\uFEFF'}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\n/**\n * Individual leaves in a text node with unique formatting.\n *\n * @type {Component}\n */\n\nconst Leaf = props => {\n  const {\n    marks,\n    annotations,\n    decorations,\n    node,\n    index,\n    offset,\n    text,\n    editor,\n    parent,\n    block,\n    leaves,\n  } = props\n\n  const offsetKey = OffsetKey.stringify({\n    key: node.key,\n    index,\n  })\n\n  let children\n\n  if (editor.query('isVoid', parent)) {\n    // COMPAT: Render text inside void nodes with a zero-width space.\n    // So the node can contain selection but the text is not visible.\n    children = <ZeroWidthString length={parent.text.length} />\n  } else if (\n    text === '' &&\n    parent.object === 'block' &&\n    parent.text === '' &&\n    parent.nodes.last() === node\n  ) {\n    // COMPAT: If this is the last text node in an empty block, render a zero-\n    // width space that will convert into a line break when copying and pasting\n    // to support expected plain text.\n    children = <ZeroWidthString isLineBreak />\n  } else if (text === '') {\n    // COMPAT: If the text is empty, it's because it's on the edge of an inline\n    // node, so we render a zero-width space so that the selection can be\n    // inserted next to it still.\n    children = <ZeroWidthString />\n  } else {\n    // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n    // so we need to add an extra trailing new lines to prevent that.\n    const lastText = block.getLastText()\n    const lastChar = text.charAt(text.length - 1)\n    const isLastText = node === lastText\n    const isLastLeaf = index === leaves.size - 1\n\n    if (isLastText && isLastLeaf && lastChar === '\\n') {\n      children = <TextString isTrailing text={text} />\n    } else {\n      children = <TextString text={text} />\n    }\n  }\n\n  const renderProps = {\n    editor,\n    marks,\n    annotations,\n    decorations,\n    node,\n    offset,\n    text,\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  for (const mark of marks) {\n    const ret = editor.run('renderMark', {\n      ...renderProps,\n      mark,\n      children,\n      attributes: {\n        [DATA_ATTRS.OBJECT]: 'mark',\n      },\n    })\n\n    if (ret) {\n      children = ret\n    }\n  }\n\n  for (const decoration of decorations) {\n    const ret = editor.run('renderDecoration', {\n      ...renderProps,\n      decoration,\n      children,\n      attributes: {\n        [DATA_ATTRS.OBJECT]: 'decoration',\n      },\n    })\n\n    if (ret) {\n      children = ret\n    }\n  }\n\n  for (const annotation of annotations) {\n    const ret = editor.run('renderAnnotation', {\n      ...renderProps,\n      annotation,\n      children,\n      attributes: {\n        [DATA_ATTRS.OBJECT]: 'annotation',\n      },\n    })\n\n    if (ret) {\n      children = ret\n    }\n  }\n\n  const attrs = {\n    [DATA_ATTRS.LEAF]: true,\n    [DATA_ATTRS.OFFSET_KEY]: offsetKey,\n  }\n\n  return <span {...attrs}>{children}</span>\n}\n\n/**\n * Prop types.\n *\n * @type {Object}\n */\n\nLeaf.propTypes = {\n  annotations: ImmutableTypes.list.isRequired,\n  block: SlateTypes.block.isRequired,\n  decorations: ImmutableTypes.list.isRequired,\n  editor: Types.object.isRequired,\n  index: Types.number.isRequired,\n  leaves: Types.object.isRequired,\n  marks: SlateTypes.marks.isRequired,\n  node: SlateTypes.node.isRequired,\n  offset: Types.number.isRequired,\n  parent: SlateTypes.node.isRequired,\n  text: Types.string.isRequired,\n}\n\n/**\n * A memoized version of `Leaf` that updates less frequently.\n *\n * @type {Component}\n */\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.block === prev.block &&\n    next.index === prev.index &&\n    next.marks === prev.marks &&\n    next.parent === prev.parent &&\n    next.text === prev.text &&\n    next.annotations.equals(prev.annotations) &&\n    next.decorations.equals(prev.decorations)\n  )\n})\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default MemoizedLeaf\n","import ImmutableTypes from 'react-immutable-proptypes'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\n\nimport Leaf from './leaf'\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Text node.\n *\n * @type {Component}\n */\n\nconst Text = React.forwardRef((props, ref) => {\n  const { annotations, block, decorations, node, parent, editor, style } = props\n  const { key } = node\n  const leaves = node.getLeaves(annotations, decorations)\n  let at = 0\n\n  return (\n    <span\n      ref={ref}\n      style={style}\n      {...{\n        [DATA_ATTRS.OBJECT]: node.object,\n        [DATA_ATTRS.KEY]: key,\n      }}\n    >\n      {leaves.map((leaf, index) => {\n        const { text } = leaf\n        const offset = at\n        at += text.length\n\n        return (\n          <Leaf\n            key={`${node.key}-${index}`}\n            block={block}\n            editor={editor}\n            index={index}\n            annotations={leaf.annotations}\n            decorations={leaf.decorations}\n            marks={leaf.marks}\n            node={node}\n            offset={offset}\n            parent={parent}\n            leaves={leaves}\n            text={text}\n          />\n        )\n      })}\n    </span>\n  )\n})\n\n/**\n * Prop types.\n *\n * @type {Object}\n */\n\nText.propTypes = {\n  annotations: ImmutableTypes.map.isRequired,\n  block: SlateTypes.block,\n  decorations: ImmutableTypes.list.isRequired,\n  editor: Types.object.isRequired,\n  node: SlateTypes.node.isRequired,\n  parent: SlateTypes.node.isRequired,\n  style: Types.object,\n}\n\n/**\n * A memoized version of `Text` that updates less frequently.\n *\n * @type {Component}\n */\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    // PERF: There are cases where it will have\n    // changed, but it's properties will be exactly the same (eg. copy-paste)\n    // which this won't catch. But that's rare and not a drag on performance, so\n    // for simplicity we just let them through.\n    next.node === prev.node &&\n    // If the node parent is a block node, and it was the last child of the\n    // block, re-render to cleanup extra `\\n`.\n    (next.parent.object === 'block' &&\n      prev.parent.nodes.last() === prev.node &&\n      next.parent.nodes.last() !== next.node) &&\n    // The formatting hasn't changed.\n    next.annotations.equals(prev.annotations) &&\n    next.decorations.equals(prev.decorations)\n  )\n})\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default MemoizedText\n","import Debug from 'debug'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\n\nimport Text from './text'\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:void')\n\n/**\n * Void.\n *\n * @type {Component}\n */\n\nclass Void extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    block: SlateTypes.block,\n    children: Types.any.isRequired,\n    editor: Types.object.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node.isRequired,\n    readOnly: Types.bool.isRequired,\n  }\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key, type } = node\n    const id = `${key} (${type})`\n    debug(message, `${id}`, ...args)\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props } = this\n    const { children, node, readOnly } = props\n    const Tag = node.object === 'block' ? 'div' : 'span'\n    const style = {\n      height: '0',\n      color: 'transparent',\n      outline: 'none',\n      position: 'absolute',\n    }\n\n    const spacerAttrs = {\n      [DATA_ATTRS.SPACER]: true,\n    }\n\n    const spacer = (\n      <Tag style={style} {...spacerAttrs}>\n        {this.renderText()}\n      </Tag>\n    )\n\n    const content = (\n      <Tag contentEditable={readOnly ? null : false}>{children}</Tag>\n    )\n\n    this.debug('render', { props })\n\n    const attrs = {\n      [DATA_ATTRS.VOID]: true,\n      [DATA_ATTRS.KEY]: node.key,\n    }\n\n    return (\n      <Tag\n        contentEditable={readOnly || node.object === 'block' ? null : false}\n        {...attrs}\n      >\n        {readOnly ? null : spacer}\n        {content}\n      </Tag>\n    )\n  }\n\n  /**\n   * Render the void node's text node, which will catch the cursor when it the\n   * void node is navigated to with the arrow keys.\n   *\n   * Having this text node there means the browser continues to manage the\n   * selection natively, so it keeps track of the right offset when moving\n   * across the block.\n   *\n   * @return {Element}\n   */\n\n  renderText = () => {\n    const {\n      annotations,\n      block,\n      decorations,\n      node,\n      readOnly,\n      editor,\n      textRef,\n    } = this.props\n    const child = node.getFirstText()\n    return (\n      <Text\n        ref={textRef}\n        annotations={annotations}\n        block={node.object === 'block' ? node : block}\n        decorations={decorations}\n        editor={editor}\n        key={child.key}\n        node={child}\n        parent={node}\n        readOnly={readOnly}\n      />\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Void\n","import Debug from 'debug'\nimport ImmutableTypes from 'react-immutable-proptypes'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport warning from 'tiny-warning'\nimport Types from 'prop-types'\nimport { PathUtils } from 'slate'\n\nimport Void from './void'\nimport Text from './text'\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:node')\n\n/**\n * Node.\n *\n * @type {Component}\n */\n\nclass Node extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    annotations: ImmutableTypes.map.isRequired,\n    block: SlateTypes.block,\n    decorations: ImmutableTypes.list.isRequired,\n    editor: Types.object.isRequired,\n    node: SlateTypes.node.isRequired,\n    parent: SlateTypes.node,\n    readOnly: Types.bool.isRequired,\n    selection: SlateTypes.selection,\n  }\n\n  /**\n   * Temporary values.\n   *\n   * @type {Object}\n   */\n\n  tmp = {\n    nodeRefs: {},\n  }\n\n  /**\n   * A ref for the contenteditable DOM node.\n   *\n   * @type {Object}\n   */\n\n  ref = React.createRef()\n\n  /**\n   * Debug.\n   *\n   * @param {String} message\n   * @param {Mixed} ...args\n   */\n\n  debug = (message, ...args) => {\n    const { node } = this.props\n    const { key, type } = node\n    debug(message, `${key} (${type})`, ...args)\n  }\n\n  /**\n   * Should the node update?\n   *\n   * @param {Object} nextProps\n   * @param {Object} value\n   * @return {Boolean}\n   */\n\n  shouldComponentUpdate(nextProps) {\n    const { props } = this\n    const { editor } = props\n    const shouldUpdate = editor.run(\n      'shouldNodeComponentUpdate',\n      props,\n      nextProps\n    )\n    const n = nextProps\n    const p = props\n\n    // If the `Component` has a custom logic to determine whether the component\n    // needs to be updated or not, return true if it returns true. If it returns\n    // false, we need to ignore it, because it shouldn't be allowed it.\n    if (shouldUpdate != null) {\n      warning(\n        false,\n        'As of slate-react@0.22 the `shouldNodeComponentUpdate` middleware is deprecated. You can pass specific values down the tree using React\\'s built-in \"context\" construct instead.'\n      )\n\n      if (shouldUpdate) {\n        return true\n      }\n\n      warning(\n        shouldUpdate !== false,\n        \"Returning false in `shouldNodeComponentUpdate` does not disable Slate's internal `shouldComponentUpdate` logic. If you want to prevent updates, use React's `shouldComponentUpdate` instead.\"\n      )\n    }\n\n    // If the `readOnly` status has changed, re-render in case there is any\n    // user-land logic that depends on it, like nested editable contents.\n    if (n.readOnly !== p.readOnly) {\n      return true\n    }\n\n    // If the node has changed, update. PERF: There are cases where it will have\n    // changed, but it's properties will be exactly the same (eg. copy-paste)\n    // which this won't catch. But that's rare and not a drag on performance, so\n    // for simplicity we just let them through.\n    if (n.node !== p.node) {\n      return true\n    }\n\n    // If the selection value of the node or of some of its children has changed,\n    // re-render in case there is any user-land logic depends on it to render.\n    // if the node is selected update it, even if it was already selected: the\n    // selection value of some of its children could have been changed and they\n    // need to be rendered again.\n    if (\n      (!n.selection && p.selection) ||\n      (n.selection && !p.selection) ||\n      (n.selection && p.selection && !n.selection.equals(p.selection))\n    ) {\n      return true\n    }\n\n    // If the annotations have changed, update.\n    if (!n.annotations.equals(p.annotations)) {\n      return true\n    }\n\n    // If the decorations have changed, update.\n    if (!n.decorations.equals(p.decorations)) {\n      return true\n    }\n\n    // Otherwise, don't update.\n    return false\n  }\n\n  /**\n   * Render.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    this.debug('render', this)\n    const {\n      annotations,\n      block,\n      decorations,\n      editor,\n      node,\n      parent,\n      readOnly,\n      selection,\n    } = this.props\n\n    const newDecorations = node.getDecorations(editor)\n    const children = node.nodes.toArray().map((child, i) => {\n      const Component = child.object === 'text' ? Text : Node\n      const sel = selection && getRelativeRange(node, i, selection)\n\n      const decs = newDecorations\n        .concat(decorations)\n        .map(d => getRelativeRange(node, i, d))\n        .filter(d => d)\n\n      const anns = annotations\n        .map(a => getRelativeRange(node, i, a))\n        .filter(a => a)\n\n      return (\n        <Component\n          block={node.object === 'block' ? node : block}\n          editor={editor}\n          annotations={anns}\n          decorations={decs}\n          selection={sel}\n          key={child.key}\n          node={child}\n          parent={node}\n          readOnly={readOnly}\n          // COMPAT: We use this map of refs to lookup a DOM node down the\n          // tree of components by path.\n          ref={ref => {\n            if (ref) {\n              this.tmp.nodeRefs[i] = ref\n            } else {\n              delete this.tmp.nodeRefs[i]\n            }\n          }}\n        />\n      )\n    })\n\n    // Attributes that the developer must mix into the element in their\n    // custom node renderer component.\n    const attributes = {\n      [DATA_ATTRS.OBJECT]: node.object,\n      [DATA_ATTRS.KEY]: node.key,\n      ref: this.ref,\n    }\n\n    // If it's a block node with inline children, add the proper `dir` attribute\n    // for text direction.\n    if (node.isLeafBlock()) {\n      const direction = node.getTextDirection()\n      if (direction === 'rtl') attributes.dir = 'rtl'\n    }\n\n    let render\n\n    if (node.object === 'block') {\n      render = 'renderBlock'\n    } else if (node.object === 'document') {\n      render = 'renderDocument'\n    } else if (node.object === 'inline') {\n      render = 'renderInline'\n    }\n\n    const element = editor.run(render, {\n      attributes,\n      children,\n      editor,\n      isFocused: !!selection && selection.isFocused,\n      isSelected: !!selection,\n      node,\n      parent,\n      readOnly,\n    })\n\n    return editor.isVoid(node) ? (\n      <Void\n        {...this.props}\n        textRef={ref => {\n          if (ref) {\n            this.tmp.nodeRefs[0] = ref\n          } else {\n            delete this.tmp.nodeRefs[0]\n          }\n        }}\n      >\n        {element}\n      </Void>\n    ) : (\n      element\n    )\n  }\n}\n\n/**\n * Return a `range` relative to a child at `index`.\n *\n * @param {Range} range\n * @param {Number} index\n * @return {Range}\n */\n\nfunction getRelativeRange(node, index, range) {\n  if (range.isUnset) {\n    return null\n  }\n\n  const child = node.nodes.get(index)\n  let { start, end } = range\n  const { path: startPath } = start\n  const { path: endPath } = end\n  const startIndex = startPath.first()\n  const endIndex = endPath.first()\n\n  if (startIndex === index) {\n    start = start.setPath(startPath.rest())\n  } else if (startIndex < index && index <= endIndex) {\n    if (child.object === 'text') {\n      start = start.moveTo(PathUtils.create([index]), 0).setKey(child.key)\n    } else {\n      const [first] = child.texts()\n      const [firstNode, firstPath] = first\n      start = start.moveTo(firstPath, 0).setKey(firstNode.key)\n    }\n  } else {\n    start = null\n  }\n\n  if (endIndex === index) {\n    end = end.setPath(endPath.rest())\n  } else if (startIndex <= index && index < endIndex) {\n    if (child.object === 'text') {\n      const length = child.text.length\n      end = end.moveTo(PathUtils.create([index]), length).setKey(child.key)\n    } else {\n      const [last] = child.texts({ direction: 'backward' })\n      const [lastNode, lastPath] = last\n      end = end.moveTo(lastPath, lastNode.text.length).setKey(lastNode.key)\n    }\n  } else {\n    end = null\n  }\n\n  if (!start || !end) {\n    return null\n  }\n\n  range = range.setAnchor(start)\n  range = range.setFocus(end)\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Node\n","import getWindow from 'get-window'\nimport isBackward from 'selection-is-backward'\nimport { IS_SAFARI, IS_IOS } from 'slate-dev-environment'\n\n/**\n * CSS overflow values that would cause scrolling.\n *\n * @type {Array}\n */\n\nconst OVERFLOWS = ['auto', 'overlay', 'scroll']\n\n/**\n * Detect whether we are running IOS version 11\n */\n\nconst IS_IOS_11 = IS_IOS && !!window.navigator.userAgent.match(/os 11_/i)\n\n/**\n * Find the nearest parent with scrolling, or window.\n *\n * @param {el} Element\n */\n\nfunction findScrollContainer(el, window) {\n  let parent = el.parentNode\n  let scroller\n\n  while (!scroller) {\n    if (!parent.parentNode) break\n\n    const style = window.getComputedStyle(parent)\n    const { overflowY } = style\n\n    if (OVERFLOWS.includes(overflowY)) {\n      scroller = parent\n      break\n    }\n\n    parent = parent.parentNode\n  }\n\n  // COMPAT: Because Chrome does not allow doucment.body.scrollTop, we're\n  // assuming that window.scrollTo() should be used if the scrollable element\n  // turns out to be document.body or document.documentElement. This will work\n  // unless body is intentionally set to scrollable by restricting its height\n  // (e.g. height: 100vh).\n  if (!scroller) {\n    return window.document.body\n  }\n\n  return scroller\n}\n\n/**\n * Scroll the current selection's focus point into view if needed.\n *\n * @param {Selection} selection\n */\n\nfunction scrollToSelection(selection) {\n  if (IS_IOS_11) return\n  if (!selection.anchorNode) return\n\n  const window = getWindow(selection.anchorNode)\n  const scroller = findScrollContainer(selection.anchorNode, window)\n  const isWindow =\n    scroller === window.document.body ||\n    scroller === window.document.documentElement\n  const backward = isBackward(selection)\n\n  const range = selection.getRangeAt(0).cloneRange()\n  range.collapse(backward)\n  let cursorRect = range.getBoundingClientRect()\n\n  // COMPAT: range.getBoundingClientRect() returns 0s in Safari when range is\n  // collapsed. Expanding the range by 1 is a relatively effective workaround\n  // for vertical scroll, although horizontal may be off by 1 character.\n  // https://bugs.webkit.org/show_bug.cgi?id=138949\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=435438\n  if (IS_SAFARI) {\n    if (range.collapsed && cursorRect.top === 0 && cursorRect.height === 0) {\n      if (range.startOffset === 0) {\n        range.setEnd(range.endContainer, 1)\n      } else {\n        range.setStart(range.startContainer, range.startOffset - 1)\n      }\n\n      cursorRect = range.getBoundingClientRect()\n\n      if (cursorRect.top === 0 && cursorRect.height === 0) {\n        if (range.getClientRects().length) {\n          cursorRect = range.getClientRects()[0]\n        }\n      }\n    }\n  }\n\n  let width\n  let height\n  let yOffset\n  let xOffset\n  let scrollerTop = 0\n  let scrollerLeft = 0\n  let scrollerBordersY = 0\n  let scrollerBordersX = 0\n  let scrollerPaddingTop = 0\n  let scrollerPaddingBottom = 0\n  let scrollerPaddingLeft = 0\n  let scrollerPaddingRight = 0\n\n  if (isWindow) {\n    const { innerWidth, innerHeight, pageYOffset, pageXOffset } = window\n    width = innerWidth\n    height = innerHeight\n    yOffset = pageYOffset\n    xOffset = pageXOffset\n  } else {\n    const { offsetWidth, offsetHeight, scrollTop, scrollLeft } = scroller\n    const {\n      borderTopWidth,\n      borderBottomWidth,\n      borderLeftWidth,\n      borderRightWidth,\n      paddingTop,\n      paddingBottom,\n      paddingLeft,\n      paddingRight,\n    } = window.getComputedStyle(scroller)\n\n    const scrollerRect = scroller.getBoundingClientRect()\n    width = offsetWidth\n    height = offsetHeight\n    scrollerTop = scrollerRect.top + parseInt(borderTopWidth, 10)\n    scrollerLeft = scrollerRect.left + parseInt(borderLeftWidth, 10)\n\n    scrollerBordersY =\n      parseInt(borderTopWidth, 10) + parseInt(borderBottomWidth, 10)\n\n    scrollerBordersX =\n      parseInt(borderLeftWidth, 10) + parseInt(borderRightWidth, 10)\n\n    scrollerPaddingTop = parseInt(paddingTop, 10)\n    scrollerPaddingBottom = parseInt(paddingBottom, 10)\n    scrollerPaddingLeft = parseInt(paddingLeft, 10)\n    scrollerPaddingRight = parseInt(paddingRight, 10)\n    yOffset = scrollTop\n    xOffset = scrollLeft\n  }\n\n  const cursorTop = cursorRect.top + yOffset - scrollerTop\n  const cursorLeft = cursorRect.left + xOffset - scrollerLeft\n\n  let x = xOffset\n  let y = yOffset\n\n  if (cursorLeft < xOffset) {\n    // selection to the left of viewport\n    x = cursorLeft - scrollerPaddingLeft\n  } else if (\n    cursorLeft + cursorRect.width + scrollerBordersX >\n    xOffset + width\n  ) {\n    // selection to the right of viewport\n    x = cursorLeft + scrollerBordersX + scrollerPaddingRight - width\n  }\n\n  if (cursorTop < yOffset) {\n    // selection above viewport\n    y = cursorTop - scrollerPaddingTop\n  } else if (\n    cursorTop + cursorRect.height + scrollerBordersY >\n    yOffset + height\n  ) {\n    // selection below viewport\n    y =\n      cursorTop +\n      scrollerBordersY +\n      scrollerPaddingBottom +\n      cursorRect.height -\n      height\n  }\n\n  if (isWindow) {\n    window.scrollTo(x, y)\n  } else {\n    scroller.scrollTop = y\n    scroller.scrollLeft = x\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default scrollToSelection\n","import { IS_IE } from 'slate-dev-environment'\n\n/**\n * Cross-browser remove all ranges from a `domSelection`.\n *\n * @param {Selection} domSelection\n */\n\nfunction removeAllRanges(domSelection) {\n  // COMPAT: In IE 11, if the selection contains nested tables, then\n  // `removeAllRanges` will throw an error.\n  if (IS_IE) {\n    const range = window.document.body.createTextRange()\n    range.collapse()\n    range.select()\n  } else {\n    domSelection.removeAllRanges()\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default removeAllRanges\n","import Debug from 'debug'\nimport React from 'react'\nimport Types from 'prop-types'\nimport getWindow from 'get-window'\nimport warning from 'tiny-warning'\nimport throttle from 'lodash/throttle'\nimport omit from 'lodash/omit'\nimport { List } from 'immutable'\nimport {\n  IS_ANDROID,\n  IS_FIREFOX,\n  HAS_INPUT_EVENTS_LEVEL_2,\n} from 'slate-dev-environment'\nimport Hotkeys from 'slate-hotkeys'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\nimport Node from './node'\nimport scrollToSelection from '../utils/scroll-to-selection'\nimport removeAllRanges from '../utils/remove-all-ranges'\n\nconst FIREFOX_NODE_TYPE_ACCESS_ERROR = /Permission denied to access property \"nodeType\"/\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:content')\n\n/**\n * Separate debug to easily see when the DOM has updated either by render or\n * changing selection.\n *\n * @type {Function}\n */\n\ndebug.update = Debug('slate:update')\n\n/**\n * Content.\n *\n * @type {Component}\n */\n\nclass Content extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    autoCorrect: Types.bool.isRequired,\n    className: Types.string,\n    contentKey: Types.number,\n    editor: Types.object.isRequired,\n    id: Types.string,\n    onEvent: Types.func.isRequired,\n    readOnly: Types.bool.isRequired,\n    role: Types.string,\n    spellCheck: Types.bool.isRequired,\n    style: Types.object,\n    tabIndex: Types.number,\n    tagName: Types.string,\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    style: {},\n    tagName: 'div',\n  }\n\n  /**\n   * An error boundary. If there is a render error, we increment `errorKey`\n   * which is part of the container `key` which forces a re-render from\n   * scratch.\n   *\n   * @param {Error} error\n   * @param {String} info\n   */\n\n  componentDidCatch(error, info) {\n    debug('componentDidCatch', { error, info })\n    // The call to `setState` is required despite not setting a value.\n    // Without this call, React will not try to recreate the component tree.\n    this.setState({})\n  }\n\n  /**\n   * Temporary values.\n   *\n   * @type {Object}\n   */\n\n  tmp = {\n    isUpdatingSelection: false,\n    nodeRef: React.createRef(),\n    nodeRefs: {},\n    contentKey: 0,\n    nativeSelection: {}, // Native selection object stored to check if `onNativeSelectionChange` has triggered yet\n  }\n\n  /**\n   * A ref for the contenteditable DOM node.\n   *\n   * @type {Object}\n   */\n\n  ref = React.createRef()\n\n  /**\n   * Set both `this.ref` and `editor.el`\n   *\n   * @type {DOMElement}\n   */\n\n  setRef = el => {\n    this.ref.current = el\n    this.props.editor.el = el\n  }\n\n  /**\n   * Create a set of bound event handlers.\n   *\n   * @type {Object}\n   */\n\n  handlers = EVENT_HANDLERS.reduce((obj, handler) => {\n    obj[handler] = event => this.onEvent(handler, event)\n    return obj\n  }, {})\n\n  /**\n   * When the editor first mounts in the DOM we need to:\n   *\n   *   - Add native DOM event listeners.\n   *   - Update the selection, in case it starts focused.\n   */\n\n  componentDidMount() {\n    const window = getWindow(this.ref.current)\n\n    window.document.addEventListener(\n      'selectionchange',\n      this.onNativeSelectionChange\n    )\n\n    // COMPAT: Restrict scope of `beforeinput` to clients that support the\n    // Input Events Level 2 spec, since they are preventable events.\n    if (HAS_INPUT_EVENTS_LEVEL_2) {\n      this.ref.current.addEventListener(\n        'beforeinput',\n        this.handlers.onBeforeInput\n      )\n    }\n\n    this.updateSelection()\n\n    this.props.onEvent('onComponentDidMount')\n  }\n\n  /**\n   * When unmounting, remove DOM event listeners.\n   */\n\n  componentWillUnmount() {\n    const window = getWindow(this.ref.current)\n\n    if (window) {\n      window.document.removeEventListener(\n        'selectionchange',\n        this.onNativeSelectionChange\n      )\n    }\n\n    if (HAS_INPUT_EVENTS_LEVEL_2) {\n      this.ref.current.removeEventListener(\n        'beforeinput',\n        this.handlers.onBeforeInput\n      )\n    }\n\n    this.props.onEvent('onComponentWillUnmount')\n  }\n\n  /**\n   * On update, update the selection.\n   */\n\n  componentDidUpdate() {\n    debug.update('componentDidUpdate')\n\n    this.updateSelection()\n    this.props.editor.clearUserActionPerformed()\n\n    this.props.onEvent('onComponentDidUpdate')\n  }\n\n  /**\n   * Update the native DOM selection to reflect the internal model.\n   */\n\n  updateSelection = () => {\n    const { editor } = this.props\n    const { value } = editor\n    const { selection } = value\n    const { isBackward } = selection\n    const window = getWindow(this.ref.current)\n    const native = window.getSelection()\n    const { activeElement } = window.document\n\n    if (debug.update.enabled) {\n      debug.update('updateSelection', { selection: selection.toJSON() })\n    }\n\n    // COMPAT: In Firefox, there's a but where `getSelection` can return `null`.\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=827585 (2018/11/07)\n    if (!native) {\n      return\n    }\n\n    const { rangeCount, anchorNode } = native\n    let updated = false\n\n    // If the Slate selection is blurred, but the DOM's active element is still\n    // the editor, we need to blur it.\n    if (selection.isBlurred && activeElement === this.ref.current) {\n      this.ref.current.blur()\n      updated = true\n    }\n\n    // If the Slate selection is unset, but the DOM selection has a range\n    // selected in the editor, we need to remove the range.\n    // However we should _not_ remove the range if the selection as\n    // reported by `getSelection` is not equal to `this.tmp.nativeSelection`\n    // as this suggests `onNativeSelectionChange` has not triggered yet (which can occur in Firefox)\n    // See: https://github.com/ianstormtaylor/slate/pull/2995\n\n    const propsToCompare = [\n      'anchorNode',\n      'anchorOffset',\n      'focusNode',\n      'focusOffset',\n      'isCollapsed',\n      'rangeCount',\n      'type',\n    ]\n\n    let selectionsEqual = true\n\n    for (const prop of propsToCompare) {\n      if (this.tmp.nativeSelection[prop] !== native[prop]) {\n        selectionsEqual = false\n      }\n    }\n\n    if (\n      selection.isUnset &&\n      rangeCount &&\n      this.isInEditor(anchorNode) &&\n      selectionsEqual\n    ) {\n      removeAllRanges(native)\n      updated = true\n    }\n\n    // If the Slate selection is focused, but the DOM's active element is not\n    // the editor, we need to focus it. We prevent scrolling because we handle\n    // scrolling to the correct selection.\n    if (selection.isFocused && activeElement !== this.ref.current) {\n      this.ref.current.focus({ preventScroll: true })\n      updated = true\n    }\n\n    // Otherwise, figure out which DOM nodes should be selected...\n    if (selection.isFocused && selection.isSet) {\n      const current = !!native.rangeCount && native.getRangeAt(0)\n      const range = editor.findDOMRange(selection)\n\n      if (!range) {\n        warning(\n          false,\n          'Unable to find a native DOM range from the current selection.'\n        )\n\n        return\n      }\n\n      const { startContainer, startOffset, endContainer, endOffset } = range\n\n      // If the new range matches the current selection, there is nothing to fix.\n      // COMPAT: The native `Range` object always has it's \"start\" first and \"end\"\n      // last in the DOM. It has no concept of \"backwards/forwards\", so we have\n      // to check both orientations here. (2017/10/31)\n      if (current) {\n        if (\n          (startContainer === current.startContainer &&\n            startOffset === current.startOffset &&\n            endContainer === current.endContainer &&\n            endOffset === current.endOffset) ||\n          (startContainer === current.endContainer &&\n            startOffset === current.endOffset &&\n            endContainer === current.startContainer &&\n            endOffset === current.startOffset)\n        ) {\n          return\n        }\n      }\n\n      // Otherwise, set the `isUpdatingSelection` flag and update the selection.\n      updated = true\n      this.tmp.isUpdatingSelection = true\n      removeAllRanges(native)\n\n      // COMPAT: IE 11 does not support `setBaseAndExtent`. (2018/11/07)\n      if (native.setBaseAndExtent) {\n        // COMPAT: Since the DOM range has no concept of backwards/forwards\n        // we need to check and do the right thing here.\n        if (isBackward) {\n          native.setBaseAndExtent(\n            range.endContainer,\n            range.endOffset,\n            range.startContainer,\n            range.startOffset\n          )\n        } else {\n          native.setBaseAndExtent(\n            range.startContainer,\n            range.startOffset,\n            range.endContainer,\n            range.endOffset\n          )\n        }\n      } else {\n        native.addRange(range)\n      }\n\n      // Only scroll to selection when a user action is performed\n      if (editor.userActionPerformed() === true) {\n        // Scroll to the selection, in case it's out of view.\n        scrollToSelection(native)\n      }\n\n      // Then unset the `isUpdatingSelection` flag after a delay, to ensure that\n      // it is still set when selection-related events from updating it fire.\n      setTimeout(() => {\n        // COMPAT: In Firefox, it's not enough to create a range, you also need\n        // to focus the contenteditable element too. (2016/11/16)\n        if (IS_FIREFOX && this.ref.current) {\n          this.ref.current.focus()\n        }\n\n        this.tmp.isUpdatingSelection = false\n\n        debug.update('updateSelection:setTimeout', {\n          anchorOffset: window.getSelection().anchorOffset,\n        })\n      })\n    }\n\n    if (updated && (debug.enabled || debug.update.enabled)) {\n      debug('updateSelection', { selection, native, activeElement })\n\n      debug.update('updateSelection:applied', {\n        selection: selection.toJSON(),\n        native: {\n          anchorOffset: native.anchorOffset,\n          focusOffset: native.focusOffset,\n        },\n      })\n    }\n  }\n\n  /**\n   * Check if an event `target` is fired from within the contenteditable\n   * element. This should be false for edits happening in non-contenteditable\n   * children, such as void nodes and other nested Slate editors.\n   *\n   * @param {Element} target\n   * @return {Boolean}\n   */\n\n  isInEditor = target => {\n    let el\n\n    try {\n      // COMPAT: In Firefox, sometimes the node can be comment which doesn't\n      // have .closest and it crashes.\n      if (target.nodeType === 8) {\n        return false\n      }\n\n      // COMPAT: Text nodes don't have `isContentEditable` property. So, when\n      // `target` is a text node use its parent node for check.\n      el = target.nodeType === 3 ? target.parentNode : target\n    } catch (err) {\n      // COMPAT: In Firefox, `target.nodeType` will throw an error if target is\n      // originating from an internal \"restricted\" element (e.g. a stepper\n      // arrow on a number input)\n      // see github.com/ianstormtaylor/slate/issues/1819\n      if (IS_FIREFOX && FIREFOX_NODE_TYPE_ACCESS_ERROR.test(err.message)) {\n        return false\n      }\n\n      throw err\n    }\n\n    return (\n      el.isContentEditable &&\n      (el === this.ref.current ||\n        el.closest(SELECTORS.EDITOR) === this.ref.current)\n    )\n  }\n\n  /**\n   * On `event` with `handler`.\n   *\n   * @param {String} handler\n   * @param {Event} event\n   */\n\n  onEvent(handler, event) {\n    debug('onEvent', handler)\n\n    const nativeEvent = event.nativeEvent || event\n    const isUndoRedo =\n      event.type === 'keydown' &&\n      (Hotkeys.isUndo(nativeEvent) || Hotkeys.isRedo(nativeEvent))\n\n    // Ignore `onBlur`, `onFocus` and `onSelect` events generated\n    // programmatically while updating selection.\n    if (\n      (this.tmp.isUpdatingSelection || isUndoRedo) &&\n      (handler === 'onSelect' || handler === 'onBlur' || handler === 'onFocus')\n    ) {\n      return\n    }\n\n    // COMPAT: There are situations where a select event will fire with a new\n    // native selection that resolves to the same internal position. In those\n    // cases we don't need to trigger any changes, since our internal model is\n    // already up to date, but we do want to update the native selection again\n    // to make sure it is in sync. (2017/10/16)\n    //\n    // ANDROID: The updateSelection causes issues in Android when you are\n    // at the end of a block. The selection ends up to the left of the inserted\n    // character instead of to the right. This behavior continues even if\n    // you enter more than one character. (2019/01/03)\n    if (!IS_ANDROID && handler === 'onSelect') {\n      const { editor } = this.props\n      const { value } = editor\n      const { selection } = value\n      const window = getWindow(event.target)\n      const domSelection = window.getSelection()\n      const range = editor.findRange(domSelection)\n\n      if (range && range.equals(selection.toRange())) {\n        this.updateSelection()\n        return\n      }\n    }\n\n    // Don't handle drag and drop events coming from embedded editors.\n    if (\n      handler === 'onDragEnd' ||\n      handler === 'onDragEnter' ||\n      handler === 'onDragExit' ||\n      handler === 'onDragLeave' ||\n      handler === 'onDragOver' ||\n      handler === 'onDragStart' ||\n      handler === 'onDrop'\n    ) {\n      const closest = event.target.closest(SELECTORS.EDITOR)\n\n      if (closest !== this.ref.current) {\n        return\n      }\n    }\n\n    // Some events require being in editable in the editor, so if the event\n    // target isn't, ignore them.\n    if (\n      handler === 'onBeforeInput' ||\n      handler === 'onBlur' ||\n      handler === 'onCompositionEnd' ||\n      handler === 'onCompositionStart' ||\n      handler === 'onCopy' ||\n      handler === 'onCut' ||\n      handler === 'onFocus' ||\n      handler === 'onInput' ||\n      handler === 'onKeyDown' ||\n      handler === 'onKeyUp' ||\n      handler === 'onPaste' ||\n      handler === 'onSelect'\n    ) {\n      if (!this.isInEditor(event.target)) {\n        return\n      }\n    }\n\n    this.props.onEvent(handler, event)\n  }\n\n  /**\n   * On native `selectionchange` event, trigger the `onSelect` handler. This is\n   * needed to account for React's `onSelect` being non-standard and not firing\n   * until after a selection has been released. This causes issues in situations\n   * where another change happens while a selection is being made.\n   *\n   * @param {Event} event\n   */\n\n  onNativeSelectionChange = throttle(event => {\n    if (this.props.readOnly) return\n\n    const window = getWindow(event.target)\n    const { activeElement } = window.document\n\n    const native = window.getSelection()\n\n    debug.update('onNativeSelectionChange', {\n      anchorOffset: native.anchorOffset,\n    })\n\n    if (activeElement !== this.ref.current) return\n\n    this.tmp.nativeSelection = {\n      anchorNode: native.anchorNode,\n      anchorOffset: native.anchorOffset,\n      focusNode: native.focusNode,\n      focusOffset: native.focusOffset,\n      isCollapsed: native.isCollapsed,\n      rangeCount: native.rangeCount,\n      type: native.type,\n    }\n\n    this.props.onEvent('onSelect', event)\n  }, 100)\n\n  /**\n   * Render the editor content.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    const { props, handlers } = this\n    const {\n      id,\n      className,\n      readOnly,\n      editor,\n      tabIndex,\n      role,\n      tagName,\n      spellCheck,\n    } = props\n    const { value } = editor\n    const Container = tagName\n    const { document, selection } = value\n\n    const style = {\n      // Prevent the default outline styles.\n      outline: 'none',\n      // Preserve adjacent whitespace and new lines.\n      whiteSpace: 'pre-wrap',\n      // Allow words to break if they are too long.\n      wordWrap: 'break-word',\n      // COMPAT: In iOS, a formatting menu with bold, italic and underline\n      // buttons is shown which causes our internal value to get out of sync in\n      // weird ways. This hides that. (2016/06/21)\n      ...(readOnly ? {} : { WebkitUserModify: 'read-write-plaintext-only' }),\n      // Allow for passed-in styles to override anything.\n      ...props.style,\n    }\n\n    // console.log('rerender content', this.tmp.contentKey, document.text)\n\n    debug('render', { props })\n    debug.update('render', this.tmp.contentKey, document.text)\n\n    this.props.onEvent('onRender')\n\n    const data = {\n      [DATA_ATTRS.EDITOR]: true,\n      [DATA_ATTRS.KEY]: document.key,\n    }\n\n    const domProps = omit(this.props, Object.keys(Content.propTypes))\n\n    return (\n      <Container\n        {...domProps}\n        key={this.tmp.contentKey}\n        {...handlers}\n        {...data}\n        ref={this.setRef}\n        contentEditable={readOnly ? null : true}\n        suppressContentEditableWarning\n        id={id}\n        className={className}\n        autoCorrect={props.autoCorrect ? 'on' : 'off'}\n        spellCheck={spellCheck}\n        style={style}\n        role={readOnly ? null : role || 'textbox'}\n        tabIndex={tabIndex}\n        // COMPAT: The Grammarly Chrome extension works by changing the DOM out\n        // from under `contenteditable` elements, which leads to weird behaviors\n        // so we have to disable it like this. (2017/04/24)\n\n        // just the existence of the flag is disabling the extension irrespective of its value\n        data-gramm={domProps['data-gramm'] ? undefined : false}\n      >\n        <Node\n          annotations={value.annotations}\n          block={null}\n          decorations={List()}\n          editor={editor}\n          node={document}\n          parent={null}\n          readOnly={readOnly}\n          selection={selection}\n          ref={this.tmp.nodeRef}\n        />\n      </Container>\n    )\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Content\n","import EVENT_HANDLERS from '../../constants/event-handlers'\n\n/**\n * Props that can be defined by plugins.\n *\n * @type {Array}\n */\n\nconst PROPS = [\n  ...EVENT_HANDLERS,\n  'commands',\n  'decorateNode',\n  'queries',\n  'renderAnnotation',\n  'renderBlock',\n  'renderDecoration',\n  'renderDocument',\n  'renderEditor',\n  'renderInline',\n  'renderMark',\n  'schema',\n]\n\n/**\n * The top-level editor props in a plugin.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nfunction EditorPropsPlugin(options = {}) {\n  const plugin = PROPS.reduce((memo, prop) => {\n    if (prop in options) memo[prop] = options[prop]\n    return memo\n  }, {})\n\n  return plugin\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default EditorPropsPlugin\n","import React from 'react'\n\n/**\n * The default rendering behavior for the React plugin.\n *\n * @return {Object}\n */\n\nfunction Rendering() {\n  return {\n    decorateNode() {\n      return []\n    },\n\n    renderAnnotation({ attributes, children }) {\n      return <span {...attributes}>{children}</span>\n    },\n\n    renderBlock({ attributes, children }) {\n      return (\n        <div {...attributes} style={{ position: 'relative' }}>\n          {children}\n        </div>\n      )\n    },\n\n    renderDecoration({ attributes, children }) {\n      return <span {...attributes}>{children}</span>\n    },\n\n    renderDocument({ children }) {\n      return children\n    },\n\n    renderEditor({ children }) {\n      return children\n    },\n\n    renderInline({ attributes, children }) {\n      return (\n        <span {...attributes} style={{ position: 'relative' }}>\n          {children}\n        </span>\n      )\n    },\n\n    renderMark({ attributes, children }) {\n      return <span {...attributes}>{children}</span>\n    },\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default Rendering\n","/**\n * A set of commands for the React plugin.\n *\n * @return {Object}\n */\n\nfunction CommandsPlugin() {\n  /**\n   * Takes a `node`, find the matching `domNode` and uses it to set the text\n   * in the `node`.\n   *\n   * @param {Editor} editor\n   * @param {Node} node\n   */\n\n  function reconcileNode(editor, node) {\n    const { value } = editor\n    const { document, selection } = value\n    const path = document.getPath(node.key)\n\n    const domElement = editor.findDOMNode(path)\n    const block = document.getClosestBlock(path)\n\n    // Get text information\n    const { text } = node\n    let { textContent: domText } = domElement\n\n    const isLastNode = block.nodes.last() === node\n    const lastChar = domText.charAt(domText.length - 1)\n\n    // COMPAT: If this is the last leaf, and the DOM text ends in a new line,\n    // we will have added another new line in <Leaf>'s render method to account\n    // for browsers collapsing a single trailing new lines, so remove it.\n    if (isLastNode && lastChar === '\\n') {\n      domText = domText.slice(0, -1)\n    }\n\n    // If the text is no different, abort.\n    if (text === domText) return\n\n    let entire = selection.moveAnchorTo(path, 0).moveFocusTo(path, text.length)\n\n    entire = document.resolveRange(entire)\n\n    // Change the current value to have the leaf's text replaced.\n    editor.insertTextAtRange(entire, domText, node.marks)\n    return\n  }\n\n  /**\n   * Takes text from the `domNode` and uses it to set the text in the matching\n   * `node` in Slate.\n   *\n   * @param {Editor} editor\n   * @param {DOMNode} domNode\n   */\n\n  function reconcileDOMNode(editor, domNode) {\n    const domElement = domNode.parentElement.closest('[data-key]')\n    const node = editor.findNode(domElement)\n    editor.reconcileNode(node)\n  }\n\n  return {\n    commands: {\n      reconcileNode,\n      reconcileDOMNode,\n    },\n  }\n}\n\nexport default CommandsPlugin\n","import getWindow from 'get-window'\nimport { PathUtils } from 'slate'\n\nimport DATA_ATTRS from '../../constants/data-attributes'\nimport SELECTORS from '../../constants/selectors'\n\n/**\n * A set of queries for the React plugin.\n *\n * @return {Object}\n */\n\nfunction QueriesPlugin() {\n  /**\n   * Find the native DOM element for a node at `path`.\n   *\n   * @param {Editor} editor\n   * @param {Array|List} path\n   * @return {DOMNode|Null}\n   */\n\n  function findDOMNode(editor, path) {\n    path = PathUtils.create(path)\n    const content = editor.tmp.contentRef.current\n\n    if (!content) {\n      return null\n    }\n\n    if (!path.size) {\n      return content.ref.current || null\n    }\n\n    const search = (instance, p) => {\n      if (!instance) {\n        return null\n      }\n\n      if (!p.size) {\n        if (instance.ref) {\n          return instance.ref.current || null\n        } else {\n          return instance || null\n        }\n      }\n\n      const index = p.first()\n      const rest = p.rest()\n      const ref = instance.tmp.nodeRefs[index]\n      return search(ref, rest)\n    }\n\n    const document = content.tmp.nodeRef.current\n    const el = search(document, path)\n    return el\n  }\n\n  /**\n   * Find a native DOM selection point from a Slate `point`.\n   *\n   * @param {Editor} editor\n   * @param {Point} point\n   * @return {Object|Null}\n   */\n\n  function findDOMPoint(editor, point) {\n    const el = editor.findDOMNode(point.path)\n    let start = 0\n\n    if (!el) {\n      return null\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering to its\n    // direct text and zero-width spans. (We have to filter out any other siblings\n    // that may have been rendered alongside them.)\n    const texts = Array.from(\n      el.querySelectorAll(`${SELECTORS.STRING}, ${SELECTORS.ZERO_WIDTH}`)\n    )\n\n    for (const text of texts) {\n      const node = text.childNodes[0]\n      const domLength = node.textContent.length\n      let slateLength = domLength\n\n      if (text.hasAttribute(DATA_ATTRS.LENGTH)) {\n        slateLength = parseInt(text.getAttribute(DATA_ATTRS.LENGTH), 10)\n      }\n\n      const end = start + slateLength\n\n      if (point.offset <= end) {\n        const offset = Math.min(domLength, Math.max(0, point.offset - start))\n        return { node, offset }\n      }\n\n      start = end\n    }\n\n    return null\n  }\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * @param {Editor} editor\n   * @param {Range} range\n   * @return {DOMRange|Null}\n   */\n\n  function findDOMRange(editor, range) {\n    const { anchor, focus, isBackward, isCollapsed } = range\n    const domAnchor = editor.findDOMPoint(anchor)\n    const domFocus = isCollapsed ? domAnchor : editor.findDOMPoint(focus)\n\n    if (!domAnchor || !domFocus) {\n      return null\n    }\n\n    const window = getWindow(domAnchor.node)\n    const r = window.document.createRange()\n    const start = isBackward ? domFocus : domAnchor\n    const end = isBackward ? domAnchor : domFocus\n    r.setStart(start.node, start.offset)\n    r.setEnd(end.node, end.offset)\n    return r\n  }\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   *\n   * @param {Editor} editor\n   * @param {Element} element\n   * @return {List|Null}\n   */\n\n  function findNode(editor, element) {\n    const path = editor.findPath(element)\n\n    if (!path) {\n      return null\n    }\n\n    const { value } = editor\n    const { document } = value\n    const node = document.getNode(path)\n    return node\n  }\n\n  /**\n   * Get the target range from a DOM `event`.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @return {Range}\n   */\n\n  function findEventRange(editor, event) {\n    if (event.nativeEvent) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n    if (x == null || y == null) return null\n\n    const { value } = editor\n    const { document } = value\n    const path = editor.findPath(event.target)\n    if (!path) return null\n\n    const node = document.getNode(path)\n\n    // If the drop target is inside a void node, move it into either the next or\n    // previous node, depending on which side the `x` and `y` coordinates are\n    // closest to.\n    if (editor.isVoid(node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrevious =\n        node.object === 'inline'\n          ? x - rect.left < rect.left + rect.width - x\n          : y - rect.top < rect.top + rect.height - y\n\n      const range = document.createRange()\n      const move = isPrevious ? 'moveToEndOfNode' : 'moveToStartOfNode'\n      const entry = document[isPrevious ? 'getPreviousText' : 'getNextText'](\n        path\n      )\n\n      if (entry) {\n        return range[move](entry)\n      }\n\n      return null\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    const window = getWindow(target)\n    let native\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (window.document.caretRangeFromPoint) {\n      native = window.document.caretRangeFromPoint(x, y)\n    } else if (window.document.caretPositionFromPoint) {\n      const position = window.document.caretPositionFromPoint(x, y)\n      native = window.document.createRange()\n      native.setStart(position.offsetNode, position.offset)\n      native.setEnd(position.offsetNode, position.offset)\n    } else if (window.document.body.createTextRange) {\n      // COMPAT: In IE, `caretRangeFromPoint` and\n      // `caretPositionFromPoint` don't exist. (2018/07/11)\n      native = window.document.body.createTextRange()\n\n      try {\n        native.moveToPoint(x, y)\n      } catch (error) {\n        // IE11 will raise an `unspecified error` if `moveToPoint` is\n        // called during a dropEvent.\n        return null\n      }\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = editor.findRange(native)\n    return range\n  }\n\n  /**\n   * Find the path of a native DOM `element` by searching React refs.\n   *\n   * @param {Editor} editor\n   * @param {Element} element\n   * @return {List|Null}\n   */\n\n  function findPath(editor, element) {\n    const content = editor.tmp.contentRef.current\n    let nodeElement = element\n\n    // If element does not have a key, it is likely a string or\n    // mark, return the closest parent Node that can be looked up.\n    if (!nodeElement.hasAttribute(DATA_ATTRS.KEY)) {\n      nodeElement = nodeElement.closest(SELECTORS.KEY)\n    }\n\n    if (!nodeElement || !nodeElement.getAttribute(DATA_ATTRS.KEY)) {\n      return null\n    }\n\n    if (nodeElement === content.ref.current) {\n      return PathUtils.create([])\n    }\n\n    const search = (instance, p) => {\n      if (nodeElement === instance) {\n        return p\n      }\n\n      if (!instance.ref) {\n        return null\n      }\n\n      if (nodeElement === instance.ref.current) {\n        return p\n      }\n\n      // If there's no `tmp` then we're at a leaf node without success.\n      if (!instance.tmp) {\n        return null\n      }\n\n      const { nodeRefs } = instance.tmp\n      const keys = Object.keys(nodeRefs)\n\n      for (const i of keys) {\n        const ref = nodeRefs[i]\n        const n = parseInt(i, 10)\n        const path = search(ref, [...p, n])\n\n        if (path) {\n          return path\n        }\n      }\n\n      return null\n    }\n\n    const document = content.tmp.nodeRef.current\n    const path = search(document, [])\n\n    if (!path) {\n      return null\n    }\n\n    return PathUtils.create(path)\n  }\n\n  /**\n   * Find a Slate point from a DOM selection's `nativeNode` and `nativeOffset`.\n   *\n   * @param {Editor} editor\n   * @param {Element} nativeNode\n   * @param {Number} nativeOffset\n   * @return {Point}\n   */\n\n  function findPoint(editor, nativeNode, nativeOffset) {\n    const { node: nearestNode, offset: nearestOffset } = normalizeNodeAndOffset(\n      nativeNode,\n      nativeOffset\n    )\n\n    const window = getWindow(nativeNode)\n    const { parentNode } = nearestNode\n    let leafNode = parentNode.closest(SELECTORS.LEAF)\n    let textNode\n    let offset\n    let node\n\n    // Calculate how far into the text node the `nearestNode` is, so that we can\n    // determine what the offset relative to the text node is.\n    if (leafNode) {\n      textNode = leafNode.closest(SELECTORS.TEXT)\n      const range = window.document.createRange()\n      range.setStart(textNode, 0)\n      range.setEnd(nearestNode, nearestOffset)\n      const contents = range.cloneContents()\n      const zeroWidths = contents.querySelectorAll(SELECTORS.ZERO_WIDTH)\n\n      Array.from(zeroWidths).forEach(el => {\n        el.parentNode.removeChild(el)\n      })\n\n      // COMPAT: Edge has a bug where Range.prototype.toString() will convert \\n\n      // into \\r\\n. The bug causes a loop when slate-react attempts to reposition\n      // its cursor to match the native position. Use textContent.length instead.\n      // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n      offset = contents.textContent.length\n      node = textNode\n    } else {\n      // For void nodes, the element with the offset key will be a cousin, not an\n      // ancestor, so find it by going down from the nearest void parent.\n      const voidNode = parentNode.closest(SELECTORS.VOID)\n\n      if (!voidNode) {\n        return null\n      }\n\n      leafNode = voidNode.querySelector(SELECTORS.LEAF)\n\n      if (!leafNode) {\n        return null\n      }\n\n      textNode = leafNode.closest(SELECTORS.TEXT)\n      node = leafNode\n      offset = node.textContent.length\n    }\n\n    // COMPAT: If the parent node is a Slate zero-width space, this is because the\n    // text node should have no characters. However, during IME composition the\n    // ASCII characters will be prepended to the zero-width space, so subtract 1\n    // from the offset to account for the zero-width space character.\n    if (\n      offset === node.textContent.length &&\n      parentNode.hasAttribute(DATA_ATTRS.ZERO_WIDTH)\n    ) {\n      offset--\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another, the\n    // select event fires twice, once for the old editor's `element` first, and\n    // then afterwards for the correct `element`. (2017/03/03)\n    const path = editor.findPath(textNode)\n\n    if (!path) {\n      return null\n    }\n\n    const { value } = editor\n    const { document } = value\n    const point = document.createPoint({ path, offset })\n    return point\n  }\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   *\n   * @param {Editor} editor\n   * @param {Selection} domRange\n   * @return {Range}\n   */\n\n  function findRange(editor, domRange) {\n    const el = domRange.anchorNode || domRange.startContainer\n\n    if (!el) {\n      return null\n    }\n\n    const window = getWindow(el)\n\n    // If the `domRange` object is a DOM `Range` or `StaticRange` object, change it\n    // into something that looks like a DOM `Selection` instead.\n    if (\n      domRange instanceof window.Range ||\n      (window.StaticRange && domRange instanceof window.StaticRange)\n    ) {\n      domRange = {\n        anchorNode: domRange.startContainer,\n        anchorOffset: domRange.startOffset,\n        focusNode: domRange.endContainer,\n        focusOffset: domRange.endOffset,\n      }\n    }\n\n    const {\n      anchorNode,\n      anchorOffset,\n      focusNode,\n      focusOffset,\n      isCollapsed,\n    } = domRange\n    const { value } = editor\n    const anchor = editor.findPoint(anchorNode, anchorOffset)\n    const focus = isCollapsed\n      ? anchor\n      : editor.findPoint(focusNode, focusOffset)\n\n    if (!anchor || !focus) {\n      return null\n    }\n\n    const { document } = value\n    const range = document.createRange({\n      anchor,\n      focus,\n    })\n\n    return range\n  }\n\n  /**\n   * Find a Slate selection from a DOM selection.\n   *\n   * @param {Editor} editor\n   * @param {Selection} domSelection\n   * @return {Range}\n   */\n\n  function findSelection(editor, domSelection) {\n    const { value } = editor\n    const { document } = value\n\n    // If there are no ranges, the editor was blurred natively.\n    if (!domSelection.rangeCount) {\n      return null\n    }\n\n    // Otherwise, determine the Slate selection from the native one.\n    let range = editor.findRange(domSelection)\n\n    if (!range) {\n      return null\n    }\n\n    const { anchor, focus } = range\n    const anchorText = document.getNode(anchor.path)\n    const focusText = document.getNode(focus.path)\n    const anchorInline = document.getClosestInline(anchor.path)\n    const focusInline = document.getClosestInline(focus.path)\n    const focusBlock = document.getClosestBlock(focus.path)\n    const anchorBlock = document.getClosestBlock(anchor.path)\n\n    // COMPAT: If the anchor point is at the start of a non-void, and the\n    // focus point is inside a void node with an offset that isn't `0`, set\n    // the focus offset to `0`. This is due to void nodes <span>'s being\n    // positioned off screen, resulting in the offset always being greater\n    // than `0`. Since we can't know what it really should be, and since an\n    // offset of `0` is less destructive because it creates a hanging\n    // selection, go with `0`. (2017/09/07)\n    if (\n      anchorBlock &&\n      !editor.isVoid(anchorBlock) &&\n      anchor.offset === 0 &&\n      focusBlock &&\n      editor.isVoid(focusBlock) &&\n      focus.offset !== 0\n    ) {\n      range = range.setFocus(focus.setOffset(0))\n    }\n\n    // COMPAT: If the selection is at the end of a non-void inline node, and\n    // there is a node after it, put it in the node after instead. This\n    // standardizes the behavior, since it's indistinguishable to the user.\n    if (\n      anchorInline &&\n      !editor.isVoid(anchorInline) &&\n      anchor.offset === anchorText.text.length\n    ) {\n      const block = document.getClosestBlock(anchor.path)\n      const depth = document.getDepth(block.key)\n      const relativePath = PathUtils.drop(anchor.path, depth)\n      const [next] = block.texts({ path: relativePath })\n\n      if (next) {\n        const [, nextPath] = next\n        const absolutePath = anchor.path.slice(0, depth).concat(nextPath)\n        range = range.moveAnchorTo(absolutePath, 0)\n      }\n    }\n\n    if (\n      focusInline &&\n      !editor.isVoid(focusInline) &&\n      focus.offset === focusText.text.length\n    ) {\n      const block = document.getClosestBlock(focus.path)\n      const depth = document.getDepth(block.key)\n      const relativePath = PathUtils.drop(focus.path, depth)\n      const [next] = block.texts({ path: relativePath })\n\n      if (next) {\n        const [, nextPath] = next\n        const absolutePath = focus.path.slice(0, depth).concat(nextPath)\n        range = range.moveFocusTo(absolutePath, 0)\n      }\n    }\n\n    let selection = document.createSelection(range)\n\n    // COMPAT: Ensure that the `isFocused` argument is set.\n    selection = selection.setIsFocused(true)\n\n    // COMPAT: Preserve the marks, since we have no way of knowing what the DOM\n    // selection's marks were. They will be cleared automatically by the\n    // `select` command if the selection moves.\n    selection = selection.set('marks', value.selection.marks)\n\n    return selection\n  }\n\n  return {\n    queries: {\n      findDOMNode,\n      findDOMPoint,\n      findDOMRange,\n      findEventRange,\n      findNode,\n      findPath,\n      findPoint,\n      findRange,\n      findSelection,\n    },\n  }\n}\n\n/**\n * From a DOM selection's `node` and `offset`, normalize so that it always\n * refers to a text node.\n *\n * @param {Element} node\n * @param {Number} offset\n * @return {Object}\n */\n\nfunction normalizeNodeAndOffset(node, offset) {\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (node.nodeType === 1 && node.childNodes.length) {\n    const isLast = offset === node.childNodes.length\n    const direction = isLast ? 'backward' : 'forward'\n    const index = isLast ? offset - 1 : offset\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (node.nodeType === 1 && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return { node, offset }\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n *\n * @param {Element} parent\n * @param {Number} index\n * @param {String} direction ('forward' or 'backward')\n * @return {Element|Null}\n */\n\nfunction getEditableChild(parent, index, direction) {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    child.nodeType === 8 ||\n    (child.nodeType === 1 && child.childNodes.length === 0) ||\n    (child.nodeType === 1 && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) break\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    if (direction === 'forward') i++\n    if (direction === 'backward') i--\n  }\n\n  return child || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default QueriesPlugin\n","/**\n * Returns the number of characters that are the same at the beginning of the\n * String.\n *\n * @param {String} prev\n * @param {String} next\n */\n\nfunction getDiffStart(prev, next) {\n  const length = Math.min(prev.length, next.length)\n\n  for (let i = 0; i < length; i++) {\n    if (prev.charAt(i) !== next.charAt(i)) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Returns the number of characters that are the same at the end of the String\n * up to `max`. Max prevents double-counting characters when there are\n * multiple duplicate characters around the diff area.\n *\n * @param {String} prev\n * @param {String} next\n * @param {Number} max\n */\n\nfunction getDiffEnd(prev, next, max) {\n  const prevLength = prev.length\n  const nextLength = next.length\n  const length = Math.min(prevLength, nextLength, max)\n\n  for (let i = 0; i < length; i++) {\n    const prevChar = prev.charAt(prevLength - i - 1)\n    const nextChar = next.charAt(nextLength - i - 1)\n    if (prevChar !== nextChar) return i\n  }\n\n  if (prev.length !== next.length) return length\n  return null\n}\n\n/**\n * Takes two strings and returns an object representing two offsets. The\n * first, `start` represents the number of characters that are the same at\n * the front of the String. The `end` represents the number of characters\n * that are the same at the end of the String.\n *\n * Returns null if they are identical.\n *\n * @param {String} prev\n * @param {String} next\n */\n\nfunction getDiffOffsets(prev, next) {\n  if (prev === next) return null\n  const start = getDiffStart(prev, next)\n  const maxEnd = Math.min(prev.length - start, next.length - start)\n  const end = getDiffEnd(prev, next, maxEnd)\n  return { start, end, total: start + end }\n}\n\n/**\n * Takes a text string and returns a slice from the string at the given offses\n *\n * @param {String} text\n * @param {Object} offsets\n */\n\nfunction sliceText(text, offsets) {\n  return text.slice(offsets.start, text.length - offsets.end)\n}\n\n/**\n * Takes two strings and returns a smart diff that can be used to describe the\n * change in a way that can be used as operations like inserting, removing or\n * replacing text.\n *\n * @param {String} prev\n * @param {String} next\n */\n\nexport default function diff(prev, next) {\n  const offsets = getDiffOffsets(prev, next)\n  if (offsets == null) return null\n  const insertText = sliceText(next, offsets)\n  const removeText = sliceText(prev, offsets)\n  return {\n    start: offsets.start,\n    end: prev.length - offsets.end,\n    cursor: offsets.start + insertText.length,\n    insertText,\n    removeText,\n  }\n}\n","import Debug from 'debug'\nimport getWindow from 'get-window'\nimport ReactDOM from 'react-dom'\nimport diffText from './diff-text'\n\n/**\n * @type {Debug}\n */\n\nconst debug = Debug('slate:composition-manager')\n\n/**\n * Unicode String for a ZERO_WIDTH_SPACE\n *\n * @type {String}\n */\n\nconst ZERO_WIDTH_SPACE = String.fromCharCode(65279)\n\n/**\n * https://github.com/facebook/draft-js/commit/cda13cb8ff9c896cdb9ff832d1edeaa470d3b871\n */\n\nconst flushControlled = ReactDOM.unstable_flushControlled\n\nfunction renderSync(editor, fn) {\n  flushControlled(() => {\n    fn()\n    editor.controller.flush()\n  })\n}\n\n/**\n * Takes text from a dom node and an offset within that text and returns an\n * object with fixed text and fixed offset which removes zero width spaces\n * and adjusts the offset.\n *\n * Optionally, if an `isLastNode` argument is passed in, it will also remove\n * a trailing newline.\n *\n * @param {String} text\n * @param {Number} offset\n * @param {Boolean} isLastNode\n */\n\nfunction fixTextAndOffset(prevText, prevOffset = 0, isLastNode = false) {\n  let nextOffset = prevOffset\n  let nextText = prevText\n  let index = 0\n\n  while (index !== -1) {\n    index = nextText.indexOf(ZERO_WIDTH_SPACE, index)\n    if (index === -1) break\n    if (nextOffset > index) nextOffset--\n    nextText = `${nextText.slice(0, index)}${nextText.slice(index + 1)}`\n  }\n\n  // remove the last newline if we are in the last node of a block\n  const lastChar = nextText.charAt(nextText.length - 1)\n\n  if (isLastNode && lastChar === '\\n') {\n    nextText = nextText.slice(0, -1)\n  }\n\n  const maxOffset = nextText.length\n\n  if (nextOffset > maxOffset) nextOffset = maxOffset\n  return { text: nextText, offset: nextOffset }\n}\n\n/**\n * Based loosely on:\n *\n * https://github.com/facebook/draft-js/blob/master/src/component/handlers/composition/DOMObserver.js\n * https://github.com/ProseMirror/prosemirror-view/blob/master/src/domobserver.js\n *\n * But is an analysis mainly for `backspace` and `enter` as we handle\n * compositions as a single operation.\n *\n * @param {} element\n */\n\nfunction CompositionManager(editor) {\n  /**\n   * A MutationObserver that flushes to the method `flush`\n   *\n   * @type {MutationObserver}\n   */\n\n  const observer = new window.MutationObserver(flush)\n\n  let win = null\n\n  /**\n   * Object that keeps track of the most recent state\n   *\n   * @type {Range}\n   */\n\n  const last = {\n    rootEl: null, // root element that MutationObserver is attached to\n    diff: null, // last text node diff between Slate and DOM\n    range: null, // last range selected\n    domNode: null, // last DOM node the cursor was in\n  }\n\n  /**\n   * Connect the MutationObserver to a specific editor root element\n   */\n\n  function connect() {\n    debug('connect', { rootEl })\n\n    const rootEl = editor.findDOMNode([])\n\n    if (last.rootEl === rootEl) return\n\n    debug('connect:run')\n\n    win = getWindow(rootEl)\n\n    observer.observe(rootEl, {\n      childList: true,\n      characterData: true,\n      attributes: true,\n      subtree: true,\n      characterDataOldValue: true,\n    })\n  }\n\n  function disconnect() {\n    debug('disconnect')\n    observer.disconnect()\n    last.rootEl = null\n  }\n\n  function clearDiff() {\n    debug('clearDIff')\n    last.diff = null\n  }\n\n  /**\n   * Clear the `last` properties related to an action only\n   */\n\n  function clearAction() {\n    debug('clearAction')\n    last.diff = null\n    last.domNode = null\n  }\n\n  /**\n   * Apply the last `diff`\n   *\n   * We don't want to apply the `diff` at the time it is created because we\n   * may be in a composition. There are a few things that trigger the applying\n   * of the saved diff. Sometimeson its own and sometimes immediately before\n   * doing something else with the Editor.\n   *\n   * - `onCompositionEnd` event\n   * - `onSelect` event only when the user has moved into a different node\n   * - The user hits `enter`\n   * - The user hits `backspace` and removes an inline node\n   * - The user hits `backspace` and merges two blocks\n   */\n\n  function applyDiff() {\n    debug('applyDiff')\n    const { diff } = last\n    if (diff == null) return\n    debug('applyDiff:run')\n    const { document } = editor.value\n\n    let entire = editor.value.selection\n      .moveAnchorTo(diff.path, diff.start)\n      .moveFocusTo(diff.path, diff.end)\n\n    entire = document.resolveRange(entire)\n\n    editor.insertTextAtRange(entire, diff.insertText)\n  }\n\n  /**\n   * Handle `enter` that splits block\n   */\n\n  function splitBlock() {\n    debug('splitBlock')\n\n    renderSync(editor, () => {\n      applyDiff()\n\n      if (last.range) {\n        editor.select(last.range)\n      } else {\n        debug('splitBlock:NO-SELECTION')\n      }\n\n      editor\n        .splitBlock()\n        .focus()\n        .restoreDOM()\n\n      clearAction()\n    })\n  }\n\n  /**\n   * Handle `backspace` that merges blocks\n   */\n\n  function mergeBlock() {\n    debug('mergeBlock')\n\n    /**\n     * The delay is required because hitting `enter`, `enter` then `backspace`\n     * in a word results in the cursor being one position to the right in\n     * Android 9.\n     *\n     * Slate sets the position to `0` and we even check it immediately after\n     * setting it and it is correct, but somewhere Android moves it to the right.\n     *\n     * This happens only when using the virtual keyboard. Hitting enter on a\n     * hardware keyboard does not trigger this bug.\n     *\n     * The call to `focus` is required because when we switch examples then\n     * merge a block, we lose focus in Android 9 (possibly others).\n     */\n\n    win.requestAnimationFrame(() => {\n      renderSync(editor, () => {\n        applyDiff()\n\n        editor\n          .select(last.range)\n          .deleteBackward()\n          .focus()\n          .restoreDOM()\n\n        clearAction()\n      })\n    })\n  }\n\n  /**\n   * The requestId used to the save selection\n   *\n   * @type {Any}\n   */\n\n  let onSelectTimeoutId = null\n\n  let bufferedMutations = []\n  let startActionFrameId = null\n  let isFlushing = false\n\n  /**\n   * Mark the beginning of an action. The action happens when the\n   * `requestAnimationFrame` expires.\n   *\n   * If `startAction` is called again, it pushes the `action` to a new\n   * `requestAnimationFrame` and cancels the old one.\n   */\n\n  function startAction() {\n    if (onSelectTimeoutId) {\n      window.cancelAnimationFrame(onSelectTimeoutId)\n      onSelectTimeoutId = null\n    }\n\n    isFlushing = true\n\n    if (startActionFrameId) window.cancelAnimationFrame(startActionFrameId)\n\n    startActionFrameId = window.requestAnimationFrame(() => {\n      if (bufferedMutations.length > 0) {\n        flushAction(bufferedMutations)\n      }\n\n      startActionFrameId = null\n      bufferedMutations = []\n      isFlushing = false\n    })\n  }\n\n  /**\n   * Handle MutationObserver flush\n   *\n   * @param {MutationList} mutations\n   */\n\n  function flush(mutations) {\n    debug('flush')\n    bufferedMutations.push(...mutations)\n    startAction()\n  }\n\n  /**\n   * Handle a `requestAnimationFrame` long batch of mutations.\n   *\n   * @param {Array} mutations\n   */\n\n  function flushAction(mutations) {\n    debug('flushAction', mutations.length, mutations)\n\n    // If there is an expanded collection, delete it\n    if (last.range && !last.range.isCollapsed) {\n      renderSync(editor, () => {\n        editor\n          .select(last.range)\n          .deleteBackward()\n          .focus()\n          .restoreDOM()\n      })\n      return\n    }\n\n    if (mutations.length > 1) {\n      // check if one of the mutations matches the signature of an `enter`\n      // which we use to signify a `splitBlock`\n      const splitBlockMutation = mutations.find(m => {\n        if (m.type !== 'childList') return false\n        if (m.addedNodes.length === 0) return false\n        const addedNode = m.addedNodes[0]\n\n        // If a text node is created anywhere with a newline in it, it's an\n        // enter\n        if (\n          addedNode.nodeType === window.Node.TEXT_NODE &&\n          addedNode.textContent === '\\n'\n        )\n          return true\n\n        // If an element is created with a key that matches a block in our\n        // document, that means the mutation is splitting an existing block\n        // by creating a new element with the same key.\n        if (addedNode.nodeType !== window.Node.ELEMENT_NODE) return false\n        const dataset = addedNode.dataset\n        const key = dataset.key\n        if (key == null) return false\n        const block = editor.value.document.getClosestBlock(key)\n        return !!block\n      })\n\n      if (splitBlockMutation) {\n        splitBlock()\n        return\n      }\n    }\n\n    // If we haven't matched a more specific mutation already, these general\n    // mutation catchers will try and determine what the user was trying to\n    // do.\n\n    const firstMutation = mutations[0]\n\n    if (firstMutation.type === 'characterData') {\n      resolveDOMNode(firstMutation.target.parentNode)\n    } else if (firstMutation.type === 'childList') {\n      if (firstMutation.removedNodes.length > 0) {\n        if (mutations.length === 1) {\n          removeNode(firstMutation.removedNodes[0])\n        } else {\n          mergeBlock()\n        }\n      } else if (firstMutation.addedNodes.length > 0) {\n        splitBlock()\n      }\n    }\n  }\n\n  /**\n   * Takes a DOM Node and resolves it against Slate's Document.\n   *\n   * Saves the changes to `last.diff` which can be applied later using\n   * `applyDiff()`\n   *\n   * @param {DOMNode} domNode\n   */\n\n  function resolveDOMNode(domNode) {\n    debug('resolveDOMNode')\n\n    const { value } = editor\n    const { document } = value\n\n    const dataElement = domNode.closest(`[data-key]`)\n    const key = dataElement.dataset.key\n    const path = document.getPath(key)\n    const block = document.getClosestBlock(key)\n    const node = document.getDescendant(key)\n    const prevText = node.text\n\n    // COMPAT: If this is the last leaf, and the DOM text ends in a new line,\n    // we will have added another new line in <Leaf>'s render method to account\n    // for browsers collapsing a single trailing new lines, so remove it.\n    const isLastNode = block.nodes.last() === node\n\n    const fix = fixTextAndOffset(domNode.textContent, 0, isLastNode)\n\n    const nextText = fix.text\n\n    // If the text is no different, there is no diff.\n    if (nextText === prevText) {\n      last.diff = null\n      return\n    }\n\n    const diff = diffText(prevText, nextText)\n\n    last.diff = {\n      path,\n      start: diff.start,\n      end: diff.end,\n      insertText: diff.insertText,\n    }\n\n    debug('resolveDOMNode:diff', last.diff)\n  }\n\n  /**\n   * Remove an Inline DOM Node.\n   *\n   * Happens when you delete the last character in an Inline DOM Node\n   */\n\n  function removeNode(domNode) {\n    debug('removeNode')\n    if (domNode.nodeType !== window.Node.ELEMENT_NODE) return\n    const { value } = editor\n    const { document, selection } = value\n    const node = editor.findNode(domNode)\n    const nodeSelection = document.resolveRange(\n      selection.moveToRangeOfNode(node)\n    )\n\n    renderSync(editor, () => {\n      editor\n        .select(nodeSelection)\n        .delete()\n        .restoreDOM()\n    })\n  }\n\n  /**\n   * handle `onCompositionStart`\n   */\n\n  function onCompositionStart() {\n    debug('onCompositionStart')\n  }\n\n  /**\n   * handle `onCompositionEnd`\n   */\n\n  function onCompositionEnd() {\n    debug('onCompositionEnd')\n\n    /**\n     * The timing on the `setTimeout` with `20` ms is sensitive.\n     *\n     * It cannot use `requestAnimationFrame` because it is too short.\n     *\n     * Android 9, for example, when you type `it ` the space will first trigger\n     * a `compositionEnd` for the `it` part before the mutation for the ` `.\n     * This means that we end up with `it` if we trigger too soon because it\n     * is on the wrong value.\n     */\n\n    window.setTimeout(() => {\n      if (last.diff) {\n        debug('onCompositionEnd:applyDiff')\n\n        renderSync(editor, () => {\n          applyDiff()\n\n          const domRange = win.getSelection().getRangeAt(0)\n          const domText = domRange.startContainer.textContent\n          const offset = domRange.startOffset\n\n          const fix = fixTextAndOffset(domText, offset)\n\n          const range = editor\n            .findRange({\n              anchorNode: domRange.startContainer,\n              anchorOffset: 0,\n              focusNode: domRange.startContainer,\n              focusOffset: 0,\n              isCollapsed: true,\n            })\n            .moveTo(fix.offset)\n\n          /**\n           * We must call `restoreDOM` even though this is applying a `diff` which\n           * should not require it. But if you type `it me. no.` on a blank line\n           * with a block following it, the next line will merge with the this\n           * line. A mysterious `keydown` with `input` of backspace appears in the\n           * event stream which the user not React caused.\n           *\n           * `focus` is required as well because otherwise we lose focus on hitting\n           * `enter` in such a scenario.\n           */\n\n          editor\n            .select(range)\n            .focus()\n            .restoreDOM()\n        })\n      }\n\n      clearAction()\n    }, 20)\n  }\n\n  /**\n   * Handle `onSelect` event\n   *\n   * Save the selection after a `requestAnimationFrame`\n   *\n   * - If we're not in the middle of flushing mutations\n   * - and cancel save if a mutation runs before the `requestAnimationFrame`\n   */\n\n  function onSelect(event) {\n    debug('onSelect:try')\n\n    // Event can be Synthetic React or native. Grab only the native one so\n    // that we don't have to call `event.perist` for performance.\n    event = event.nativeEvent ? event.nativeEvent : event\n\n    window.cancelAnimationFrame(onSelectTimeoutId)\n    onSelectTimeoutId = null\n\n    // Don't capture the last selection if the selection was made during the\n    // flushing of DOM mutations. This means it is all part of one user action.\n    if (isFlushing) return\n\n    onSelectTimeoutId = window.requestAnimationFrame(() => {\n      debug('onSelect:save-selection')\n\n      const domSelection = getWindow(event.target).getSelection()\n      let range = editor.findRange(domSelection)\n\n      const anchorFix = fixTextAndOffset(\n        domSelection.anchorNode.textContent,\n        domSelection.anchorOffset\n      )\n\n      const focusFix = fixTextAndOffset(\n        domSelection.focusNode.textContent,\n        domSelection.focusOffset\n      )\n\n      if (range.anchor.offset !== anchorFix.offset) {\n        range = range.set(\n          'anchor',\n          range.anchor.set('offset', anchorFix.offset)\n        )\n      }\n\n      if (range.focus.offset !== focusFix.offset) {\n        range = range.set('focus', range.focus.set('offset', focusFix.offset))\n      }\n\n      debug('onSelect:save-data', {\n        domSelection: normalizeDOMSelection(domSelection),\n        range: range.toJS(),\n      })\n\n      // If the `domSelection` has moved into a new node, then reconcile with\n      // `applyDiff`\n      if (\n        domSelection.isCollapsed &&\n        last.node !== domSelection.anchorNode &&\n        last.diff != null\n      ) {\n        debug('onSelect:applyDiff', last.diff)\n        applyDiff()\n        editor.select(range)\n        clearAction()\n      }\n\n      last.range = range\n      last.node = domSelection.anchorNode\n    })\n  }\n\n  return {\n    clearDiff,\n    connect,\n    disconnect,\n    onKeyDown: startAction,\n    onCompositionStart,\n    onCompositionEnd,\n    onSelect,\n  }\n}\n\nfunction normalizeDOMSelection(selection) {\n  return {\n    anchorNode: selection.anchorNode,\n    anchorOffset: selection.anchorOffset,\n    focusNode: selection.focusNode,\n    focusOffset: selection.focusOffset,\n  }\n}\n\nexport default CompositionManager\n","import getWindow from 'get-window'\nimport CompositionManager from './composition-manager'\n\n/**\n * Fixes a selection within the DOM when the cursor is in Slate's special\n * zero-width block. Slate handles empty blocks in a special manner and the\n * cursor can end up either before or after the non-breaking space. This\n * causes different behavior in Android and so we make sure the seleciton is\n * always before the zero-width space.\n *\n * @param {Window} window\n */\n\nfunction fixSelectionInZeroWidthBlock(window) {\n  const domSelection = window.getSelection()\n  const { anchorNode } = domSelection\n  if (anchorNode == null) return\n  const { dataset } = anchorNode.parentElement\n  const isZeroWidth = dataset ? dataset.slateZeroWidth === 'n' : false\n\n  if (\n    isZeroWidth &&\n    anchorNode.textContent.length === 1 &&\n    domSelection.anchorOffset !== 0\n  ) {\n    const range = window.document.createRange()\n    range.setStart(anchorNode, 0)\n    range.setEnd(anchorNode, 0)\n    domSelection.removeAllRanges()\n    domSelection.addRange(range)\n  }\n}\n\n/**\n * Android Plugin\n *\n * @param {Editor} options.editor\n */\n\nfunction AndroidPlugin({ editor }) {\n  const observer = new CompositionManager(editor)\n\n  /**\n   * handle `onCompositionStart`\n   */\n\n  function onCompositionStart() {\n    observer.onCompositionStart()\n  }\n\n  /**\n   * handle `onCompositionEnd`\n   */\n\n  function onCompositionEnd() {\n    observer.onCompositionEnd()\n  }\n\n  /**\n   * handle `onSelect`\n   *\n   * @param {Event} event\n   */\n\n  function onSelect(event) {\n    const window = getWindow(event.target)\n    fixSelectionInZeroWidthBlock(window)\n    observer.onSelect(event)\n  }\n\n  /**\n   * handle `onComponentDidMount`\n   */\n\n  function onComponentDidMount() {\n    observer.connect()\n  }\n\n  /**\n   * handle `onComponentDidUpdate`\n   */\n\n  function onComponentDidUpdate() {\n    observer.connect()\n  }\n\n  /**\n   * handle `onComponentWillUnmount`\n   *\n   * @param {Event} event\n   */\n\n  function onComponentWillUnmount() {\n    observer.disconnect()\n  }\n\n  /**\n   * handle `onRender`\n   *\n   * @param {Event} event\n   */\n\n  function onRender() {\n    observer.disconnect()\n\n    // We don't want the `diff` from a previous render to apply to a\n    // potentially different value (e.g. when we switch examples)\n    observer.clearDiff()\n  }\n\n  return {\n    onComponentDidMount,\n    onComponentDidUpdate,\n    onComponentWillUnmount,\n    onCompositionEnd,\n    onCompositionStart,\n    onRender,\n    onSelect,\n  }\n}\n\nexport default AndroidPlugin\n","import EVENT_HANDLERS from '../../constants/event-handlers'\n\n/**\n * This plugin prevents events from going any further and is useful in dev.\n *\n * The purpose is to see how the editor events and mutations behave without\n * the noise of the editor also adding its own events and mutations.\n *\n * IMPORTANT:\n *\n * This plugin is detached (i.e. there is no way to turn it on in Slate).\n * You must hard code it into `plugins/react/index`.\n *\n * @return {Object}\n */\n\nfunction NoopPlugin() {\n  /**\n   * Plugin Object\n   *\n   * @type {Object}\n   */\n\n  const plugin = {}\n\n  for (const eventName of EVENT_HANDLERS) {\n    plugin[eventName] = function(event, editor, next) {}\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return plugin\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default NoopPlugin\n","/**\n * The transfer types that Slate recognizes.\n *\n * @type {Object}\n */\n\nexport default {\n  FRAGMENT: 'application/x-slate-fragment',\n  HTML: 'text/html',\n  NODE: 'application/x-slate-node',\n  RICH: 'text/rtf',\n  TEXT: 'text/plain',\n}\n","import Base64 from 'slate-base64-serializer'\nimport Plain from 'slate-plain-serializer'\nimport getWindow from 'get-window'\nimport invariant from 'tiny-invariant'\nimport { IS_IE } from 'slate-dev-environment'\nimport { Value } from 'slate'\n\nimport TRANSFER_TYPES from '../constants/transfer-types'\nimport removeAllRanges from './remove-all-ranges'\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\n\nconst { FRAGMENT, HTML, TEXT } = TRANSFER_TYPES\n\n/**\n * Prepares a Slate document fragment to be copied to the clipboard.\n *\n * @param {Event} event\n * @param {Editor} editor\n */\n\nfunction cloneFragment(event, editor, callback = () => undefined) {\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `cloneFragment` utility takes an `editor` instead of a `value`.'\n  )\n\n  const window = getWindow(event.target)\n  const native = window.getSelection()\n  const { value } = editor\n  const { document, fragment, selection } = value\n  const { start, end } = selection\n  const startVoid = document.getClosestVoid(start.path, editor)\n  const endVoid = document.getClosestVoid(end.path, editor)\n\n  // If the selection is collapsed, and it isn't inside a void node, abort.\n  if (native.isCollapsed && !startVoid) return\n\n  // Create a fake selection so that we can add a Base64-encoded copy of the\n  // fragment to the HTML, to decode on future pastes.\n  const encoded = Base64.serializeNode(fragment)\n  const range = native.getRangeAt(0)\n  let contents = range.cloneContents()\n  let attach = contents.childNodes[0]\n\n  // Make sure attach is a non-empty node, since empty nodes will not get copied\n  contents.childNodes.forEach(node => {\n    if (node.textContent && node.textContent.trim() !== '') {\n      attach = node\n    }\n  })\n\n  // COMPAT: If the end node is a void node, we need to move the end of the\n  // range from the void node's spacer span, to the end of the void node's\n  // content, since the spacer is before void's content in the DOM.\n  if (endVoid) {\n    const r = range.cloneRange()\n    const path = document.getPath(endVoid.key)\n\n    if (path) {\n      const node = editor.findDOMNode(path)\n      r.setEndAfter(node)\n      contents = r.cloneContents()\n    }\n  }\n\n  // COMPAT: If the start node is a void node, we need to attach the encoded\n  // fragment to the void node's content node instead of the spacer, because\n  // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n  // most browsers. (2018/04/27)\n  if (startVoid) {\n    attach = contents.childNodes[0].childNodes[1].firstChild\n  }\n\n  // Remove any zero-width space spans from the cloned DOM so that they don't\n  // show up elsewhere when pasted.\n  ;[].slice\n    .call(contents.querySelectorAll(SELECTORS.ZERO_WIDTH))\n    .forEach(zw => {\n      const isNewline = zw.getAttribute(DATA_ATTRS.ZERO_WIDTH) === 'n'\n      zw.textContent = isNewline ? '\\n' : ''\n    })\n\n  // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n  // in the HTML, and can be used for intra-Slate pasting. If it's a text\n  // node, wrap it in a `<span>` so we have something to set an attribute on.\n  if (attach.nodeType === 3) {\n    const span = window.document.createElement('span')\n\n    // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n    // then leading and trailing spaces will be ignored. (2017/09/21)\n    span.style.whiteSpace = 'pre'\n\n    span.appendChild(attach)\n    contents.appendChild(span)\n    attach = span\n  }\n\n  attach.setAttribute(DATA_ATTRS.FRAGMENT, encoded)\n\n  //  Creates value from only the selected blocks\n  //  Then gets plaintext for clipboard with proper linebreaks for BLOCK elements\n  //  Via Plain serializer\n  const valFromSelection = Value.create({ document: fragment })\n  const plainText = Plain.serialize(valFromSelection)\n\n  // Add the phony content to a div element. This is needed to copy the\n  // contents into the html clipboard register.\n  const div = window.document.createElement('div')\n  div.appendChild(contents)\n\n  // For browsers supporting it, we set the clipboard registers manually,\n  // since the result is more predictable.\n  // COMPAT: IE supports the setData method, but only in restricted sense.\n  // IE doesn't support arbitrary MIME types or common ones like 'text/plain';\n  // it only accepts \"Text\" (which gets mapped to 'text/plain') and \"Url\"\n  // (mapped to 'text/url-list'); so, we should only enter block if !IS_IE\n  if (event.clipboardData && event.clipboardData.setData && !IS_IE) {\n    event.preventDefault()\n    event.clipboardData.setData(TEXT, plainText)\n    event.clipboardData.setData(FRAGMENT, encoded)\n    event.clipboardData.setData(HTML, div.innerHTML)\n    callback()\n    return\n  }\n\n  // COMPAT: For browser that don't support the Clipboard API's setData method,\n  // we must rely on the browser to natively copy what's selected.\n  // So we add the div (containing our content) to the DOM, and select it.\n  const editorEl = event.target.closest(SELECTORS.EDITOR)\n  div.setAttribute('contenteditable', true)\n  div.style.position = 'absolute'\n  div.style.left = '-9999px'\n  editorEl.appendChild(div)\n  native.selectAllChildren(div)\n\n  // Revert to the previous selection right after copying.\n  window.requestAnimationFrame(() => {\n    editorEl.removeChild(div)\n    removeAllRanges(native)\n    native.addRange(range)\n    callback()\n  })\n}\n\nexport default cloneFragment\n","import Base64 from 'slate-base64-serializer'\nimport { IS_IE } from 'slate-dev-environment'\n\nimport TRANSFER_TYPES from '../constants/transfer-types'\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Transfer types.\n *\n * @type {String}\n */\n\nconst { FRAGMENT, HTML, NODE, RICH, TEXT } = TRANSFER_TYPES\n\n/**\n * Fragment matching regexp for HTML nodes.\n *\n * @type {RegExp}\n */\n\nconst FRAGMENT_MATCHER = / data-slate-fragment=\"([^\\s\"]+)\"/\n\n/**\n * Get the transfer data from an `event`.\n *\n * @param {Event} event\n * @return {Object}\n */\n\nfunction getEventTransfer(event) {\n  // COMPAT: IE 11 doesn't populate nativeEvent with either\n  // dataTransfer or clipboardData. We'll need to use the base event\n  // object (2018/14/6)\n  if (!IS_IE && event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n  let fragment = getType(transfer, FRAGMENT)\n  let node = getType(transfer, NODE)\n  const html = getType(transfer, HTML)\n  const rich = getType(transfer, RICH)\n  let text = getType(transfer, TEXT)\n  let files\n\n  // If there isn't a fragment, but there is HTML, check to see if the HTML is\n  // actually an encoded fragment.\n  if (!fragment && html && ~html.indexOf(` ${DATA_ATTRS.FRAGMENT}=\"`)) {\n    const matches = FRAGMENT_MATCHER.exec(html)\n    const [full, encoded] = matches // eslint-disable-line no-unused-vars\n    if (encoded) fragment = encoded\n  }\n\n  // COMPAT: Edge doesn't handle custom data types\n  // These will be embedded in text/plain in this case (2017/7/12)\n  if (text) {\n    const embeddedTypes = getEmbeddedTypes(text)\n\n    if (embeddedTypes[FRAGMENT]) fragment = embeddedTypes[FRAGMENT]\n    if (embeddedTypes[NODE]) node = embeddedTypes[NODE]\n    if (embeddedTypes[TEXT]) text = embeddedTypes[TEXT]\n  }\n\n  // Decode a fragment or node if they exist.\n  if (fragment) fragment = Base64.deserializeNode(fragment)\n  if (node) node = Base64.deserializeNode(node)\n\n  // COMPAT: Edge sometimes throws 'NotSupportedError'\n  // when accessing `transfer.items` (2017/7/12)\n  try {\n    // Get and normalize files if they exist.\n    if (transfer.items && transfer.items.length) {\n      files = Array.from(transfer.items)\n        .map(item => (item.kind === 'file' ? item.getAsFile() : null))\n        .filter(exists => exists)\n    } else if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  } catch (err) {\n    if (transfer.files && transfer.files.length) {\n      files = Array.from(transfer.files)\n    }\n  }\n\n  // Determine the type of the data.\n  const data = { files, fragment, html, node, rich, text }\n  data.type = getTransferType(data)\n  return data\n}\n\n/**\n * Takes text input, checks whether contains embedded data\n * and returns object with original text +/- additional data\n *\n * @param {String} text\n * @return {Object}\n */\n\nfunction getEmbeddedTypes(text) {\n  const prefix = 'SLATE-DATA-EMBED::'\n\n  if (text.substring(0, prefix.length) !== prefix) {\n    return { TEXT: text }\n  }\n\n  // Attempt to parse, if fails then just standard text/plain\n  // Otherwise, already had data embedded\n  try {\n    return JSON.parse(text.substring(prefix.length))\n  } catch (err) {\n    throw new Error('Unable to parse custom Slate drag event data.')\n  }\n}\n\n/**\n * Get the type of a transfer from its `data`.\n *\n * @param {Object} data\n * @return {String}\n */\n\nfunction getTransferType(data) {\n  if (data.fragment) return 'fragment'\n  if (data.node) return 'node'\n\n  // COMPAT: Microsoft Word adds an image of the selected text to the data.\n  // Since files are preferred over HTML or text, this would cause the type to\n  // be considered `files`. But it also adds rich text data so we can check\n  // for that and properly set the type to `html` or `text`. (2016/11/21)\n  if (data.rich && data.html) return 'html'\n  if (data.rich && data.text) return 'text'\n\n  if (data.files && data.files.length) return 'files'\n  if (data.html) return 'html'\n  if (data.text) return 'text'\n  return 'unknown'\n}\n\n/**\n * Get one of types `TYPES.FRAGMENT`, `TYPES.NODE`, `text/html`, `text/rtf` or\n * `text/plain` from transfers's `data` if possible, otherwise return null.\n *\n * @param {Object} transfer\n * @param {String} type\n * @return {String}\n */\n\nfunction getType(transfer, type) {\n  if (!transfer.types || !transfer.types.length) {\n    // COMPAT: In IE 11, there is no `types` field but `getData('Text')`\n    // is supported`. (2017/06/23)\n    return type === TEXT ? transfer.getData('Text') || null : null\n  }\n\n  // COMPAT: In Edge, transfer.types doesn't respond to `indexOf`. (2017/10/25)\n  const types = Array.from(transfer.types)\n\n  return types.indexOf(type) !== -1 ? transfer.getData(type) || null : null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventTransfer\n","import TRANSFER_TYPES from '../constants/transfer-types'\n\n/**\n * The default plain text transfer type.\n *\n * @type {String}\n */\n\nconst { TEXT } = TRANSFER_TYPES\n\n/**\n * Set data with `type` and `content` on an `event`.\n *\n * COMPAT: In Edge, custom types throw errors, so embed all non-standard\n * types in text/plain compound object. (2017/7/12)\n *\n * @param {Event} event\n * @param {String} type\n * @param {String} content\n */\n\nfunction setEventTransfer(event, type, content) {\n  const mime = TRANSFER_TYPES[type.toUpperCase()]\n\n  if (!mime) {\n    throw new Error(`Cannot set unknown transfer type \"${mime}\".`)\n  }\n\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const transfer = event.dataTransfer || event.clipboardData\n\n  try {\n    transfer.setData(mime, content)\n    // COMPAT: Safari needs to have the 'text' (and not 'text/plain') value in dataTransfer\n    // to display the cursor while dragging internally.\n    transfer.setData('text', transfer.getData('text'))\n  } catch (err) {\n    const prefix = 'SLATE-DATA-EMBED::'\n    const text = transfer.getData(TEXT)\n    let obj = {}\n\n    // If the existing plain text data is prefixed, it's Slate JSON data.\n    if (text.substring(0, prefix.length) === prefix) {\n      try {\n        obj = JSON.parse(text.substring(prefix.length))\n      } catch (e) {\n        throw new Error(\n          'Failed to parse Slate data from `DataTransfer` object.'\n        )\n      }\n    } else {\n      // Otherwise, it's just set it as is.\n      obj[TEXT] = text\n    }\n\n    obj[mime] = content\n    const string = `${prefix}${JSON.stringify(obj)}`\n    transfer.setData(TEXT, string)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default setEventTransfer\n","import Base64 from 'slate-base64-serializer'\nimport Debug from 'debug'\nimport Hotkeys from 'slate-hotkeys'\nimport Plain from 'slate-plain-serializer'\nimport getWindow from 'get-window'\nimport { IS_IOS, IS_IE, IS_EDGE } from 'slate-dev-environment'\n\nimport cloneFragment from '../../utils/clone-fragment'\nimport getEventTransfer from '../../utils/get-event-transfer'\nimport setEventTransfer from '../../utils/set-event-transfer'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:after')\n\n/**\n * A plugin that adds the \"after\" browser-specific logic to the editor.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nfunction AfterPlugin(options = {}) {\n  let isDraggingInternally = null\n  let isMouseDown = false\n\n  /**\n   * On before input.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onBeforeInput(event, editor, next) {\n    const { value } = editor\n    const isSynthetic = !!event.nativeEvent\n\n    // If the event is synthetic, it's React's polyfill of `beforeinput` that\n    // isn't a true `beforeinput` event with meaningful information. It only\n    // gets triggered for character insertions, so we can just insert directly.\n    if (isSynthetic) {\n      event.preventDefault()\n      editor.insertText(event.data)\n      return next()\n    }\n\n    // Otherwise, we can use the information in the `beforeinput` event to\n    // figure out the exact change that will occur, and prevent it.\n    const [targetRange] = event.getTargetRanges()\n    if (!targetRange) return next()\n\n    debug('onBeforeInput', { event })\n\n    event.preventDefault()\n\n    const { document, selection } = value\n    const range = editor.findRange(targetRange)\n\n    switch (event.inputType) {\n      case 'deleteByDrag':\n      case 'deleteByCut':\n      case 'deleteContent':\n      case 'deleteContentBackward':\n      case 'deleteContentForward': {\n        editor.deleteAtRange(range)\n        break\n      }\n\n      case 'deleteWordBackward': {\n        editor.deleteWordBackwardAtRange(range)\n        break\n      }\n\n      case 'deleteWordForward': {\n        editor.deleteWordForwardAtRange(range)\n        break\n      }\n\n      case 'deleteSoftLineBackward':\n      case 'deleteHardLineBackward': {\n        editor.deleteLineBackwardAtRange(range)\n        break\n      }\n\n      case 'deleteSoftLineForward':\n      case 'deleteHardLineForward': {\n        editor.deleteLineForwardAtRange(range)\n        break\n      }\n\n      case 'insertLineBreak':\n      case 'insertParagraph': {\n        const hasVoidParent = document.hasVoidParent(\n          selection.start.path,\n          editor\n        )\n\n        if (hasVoidParent) {\n          editor.moveToStartOfNextText()\n        } else {\n          editor.splitBlockAtRange(range)\n        }\n\n        break\n      }\n\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        // COMPAT: `data` should have the text for the `insertText` input type\n        // and `dataTransfer` should have the text for the\n        // `insertReplacementText` input type, but Safari uses `insertText` for\n        // spell check replacements and sets `data` to `null`. (2018/08/09)\n        const text =\n          event.data == null\n            ? event.dataTransfer.getData('text/plain')\n            : event.data\n\n        if (text == null) break\n\n        editor.insertTextAtRange(range, text, selection.marks)\n\n        // If the text was successfully inserted, and the selection had marks\n        // on it, unset the selection's marks.\n        if (selection.marks && value.document !== editor.value.document) {\n          editor.select({ marks: null })\n        }\n\n        break\n      }\n    }\n\n    next()\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onBlur(event, editor, next) {\n    debug('onBlur', { event })\n    editor.blur()\n    next()\n  }\n\n  /**\n   * On click.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onClick(event, editor, next) {\n    if (editor.readOnly) return next()\n\n    const { value } = editor\n    const { document } = value\n    const path = editor.findPath(event.target)\n    if (!path) return next()\n\n    debug('onClick', { event })\n\n    const node = document.getNode(path)\n    const ancestors = document.getAncestors(path)\n    const isVoid =\n      node && (editor.isVoid(node) || ancestors.some(a => editor.isVoid(a)))\n\n    if (isVoid) {\n      // COMPAT: In Chrome & Safari, selections that are at the zero offset of\n      // an inline node will be automatically replaced to be at the last offset\n      // of a previous inline node, which screws us up, so we always want to set\n      // it to the end of the node. (2016/11/29)\n      editor.focus().moveToEndOfNode(node)\n    }\n\n    next()\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCopy(event, editor, next) {\n    debug('onCopy', { event })\n    cloneFragment(event, editor)\n    next()\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCut(event, editor, next) {\n    debug('onCut', { event })\n\n    // Once the fake cut content has successfully been added to the clipboard,\n    // delete the content in the current selection.\n    cloneFragment(event, editor, () => {\n      // If user cuts a void block node or a void inline node,\n      // manually removes it since selection is collapsed in this case.\n      const { value } = editor\n      const { document, selection } = value\n      const { end, isCollapsed } = selection\n      let voidPath\n\n      if (isCollapsed) {\n        for (const [node, path] of document.ancestors(end.path)) {\n          if (editor.isVoid(node)) {\n            voidPath = path\n            break\n          }\n        }\n      }\n\n      if (voidPath) {\n        editor.removeNodeByKey(voidPath)\n      } else {\n        editor.delete()\n      }\n    })\n\n    next()\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragEnd(event, editor, next) {\n    debug('onDragEnd', { event })\n    isDraggingInternally = null\n    next()\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragStart(event, editor, next) {\n    debug('onDragStart', { event })\n\n    isDraggingInternally = true\n\n    const { value } = editor\n    const { document } = value\n    const path = editor.findPath(event.target)\n    const node = document.getNode(path)\n    const ancestors = document.getAncestors(path)\n    const isVoid =\n      node && (editor.isVoid(node) || ancestors.some(a => editor.isVoid(a)))\n    const selectionIncludesNode = value.blocks.some(block => block === node)\n\n    // If a void block is dragged and is not selected, select it (necessary for local drags).\n    if (isVoid && !selectionIncludesNode) {\n      editor.moveToRangeOfNode(node)\n    }\n\n    const fragment = editor.value.fragment\n    const encoded = Base64.serializeNode(fragment)\n    setEventTransfer(event, 'fragment', encoded)\n    next()\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDrop(event, editor, next) {\n    const { value } = editor\n    const { document, selection } = value\n    const window = getWindow(event.target)\n    const target = editor.findEventRange(event)\n\n    if (!target) {\n      return next()\n    }\n\n    debug('onDrop', { event })\n\n    const transfer = getEventTransfer(event)\n    const { type, fragment, text } = transfer\n\n    editor.focus()\n\n    // COMPAT: React's onSelect event breaks after an onDrop event\n    // has fired in a node: https://github.com/facebook/react/issues/11379.\n    // Until this is fixed in React, we dispatch a mouseup event on that\n    // DOM node, since that will make it go back to normal.\n    const el = editor.findDOMNode(target.focus.path)\n\n    if (el) {\n      el.dispatchEvent(\n        new MouseEvent('mouseup', {\n          view: window,\n          bubbles: true,\n          cancelable: true,\n        })\n      )\n    }\n\n    const draggedRange = selection\n\n    editor.select(target)\n\n    if (isDraggingInternally) {\n      editor.deleteAtRange(draggedRange)\n    }\n\n    if (type === 'text' || type === 'html') {\n      const { anchor } = target\n      let hasVoidParent = document.hasVoidParent(anchor.path, editor)\n\n      if (hasVoidParent) {\n        let p = anchor.path\n        let n = document.getNode(anchor.path)\n\n        while (hasVoidParent) {\n          const [nxt] = document.texts({ path: p })\n\n          if (!nxt) {\n            break\n          }\n\n          ;[n, p] = nxt\n          hasVoidParent = document.hasVoidParent(p, editor)\n        }\n\n        if (n) editor.moveToStartOfNode(n)\n      }\n\n      if (text) {\n        text.split('\\n').forEach((line, i) => {\n          if (i > 0) editor.splitBlock()\n          editor.insertText(line)\n        })\n      }\n    }\n\n    if (type === 'fragment') {\n      editor.insertFragment(fragment)\n    }\n\n    next()\n  }\n\n  /**\n   * On focus.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onFocus(event, editor, next) {\n    debug('onFocus', { event })\n\n    // COMPAT: If the focus event is a mouse-based one, it will be shortly\n    // followed by a `selectionchange`, so we need to deselect here to prevent\n    // the old selection from being set by the `updateSelection` of `<Content>`,\n    // preventing the `selectionchange` from firing. (2018/11/07)\n    if (isMouseDown && !IS_IE && !IS_EDGE) {\n      editor.deselect().focus()\n    } else {\n      editor.focus()\n    }\n\n    next()\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onInput(event, editor, next) {\n    debug('onInput')\n\n    const window = getWindow(event.target)\n    const domSelection = window.getSelection()\n    const selection = editor.findSelection(domSelection)\n\n    if (selection) {\n      editor.select(selection)\n    } else {\n      editor.blur()\n    }\n\n    const { anchorNode } = domSelection\n    editor.reconcileDOMNode(anchorNode)\n\n    next()\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onKeyDown(event, editor, next) {\n    debug('onKeyDown', { event })\n\n    const { value } = editor\n    const { document, selection } = value\n    const { start } = selection\n    const hasVoidParent = document.hasVoidParent(start.path, editor)\n\n    // COMPAT: In iOS, some of these hotkeys are handled in the\n    // `onNativeBeforeInput` handler of the `<Content>` component in order to\n    // preserve native autocorrect behavior, so they shouldn't be handled here.\n    if (Hotkeys.isSplitBlock(event) && !IS_IOS) {\n      return hasVoidParent\n        ? editor.moveToStartOfNextText()\n        : editor.splitBlock()\n    }\n\n    if (Hotkeys.isDeleteBackward(event) && !IS_IOS) {\n      return editor.deleteCharBackward()\n    }\n\n    if (Hotkeys.isDeleteForward(event) && !IS_IOS) {\n      return editor.deleteCharForward()\n    }\n\n    if (Hotkeys.isDeleteLineBackward(event)) {\n      return editor.deleteLineBackward()\n    }\n\n    if (Hotkeys.isDeleteLineForward(event)) {\n      return editor.deleteLineForward()\n    }\n\n    if (Hotkeys.isDeleteWordBackward(event)) {\n      return editor.deleteWordBackward()\n    }\n\n    if (Hotkeys.isDeleteWordForward(event)) {\n      return editor.deleteWordForward()\n    }\n\n    if (Hotkeys.isRedo(event)) {\n      return editor.redo()\n    }\n\n    if (Hotkeys.isUndo(event)) {\n      return editor.undo()\n    }\n\n    // COMPAT: Certain browsers don't handle the selection updates properly. In\n    // Chrome, the selection isn't properly extended. And in Firefox, the\n    // selection isn't properly collapsed. (2017/10/17)\n    if (Hotkeys.isMoveLineBackward(event)) {\n      event.preventDefault()\n      return editor.moveToStartOfBlock()\n    }\n\n    if (Hotkeys.isMoveLineForward(event)) {\n      event.preventDefault()\n      return editor.moveToEndOfBlock()\n    }\n\n    if (Hotkeys.isExtendLineBackward(event)) {\n      event.preventDefault()\n      return editor.moveFocusToStartOfBlock()\n    }\n\n    if (Hotkeys.isExtendLineForward(event)) {\n      event.preventDefault()\n      return editor.moveFocusToEndOfBlock()\n    }\n\n    // COMPAT: If a void node is selected, or a zero-width text node adjacent to\n    // an inline is selected, we need to handle these hotkeys manually because\n    // browsers won't know what to do.\n    if (Hotkeys.isMoveBackward(event)) {\n      event.preventDefault()\n\n      if (!selection.isCollapsed) {\n        return editor.moveToStart()\n      }\n\n      return editor.moveBackward()\n    }\n\n    if (Hotkeys.isMoveForward(event)) {\n      event.preventDefault()\n\n      if (!selection.isCollapsed) {\n        return editor.moveToEnd()\n      }\n\n      return editor.moveForward()\n    }\n\n    if (Hotkeys.isMoveWordBackward(event)) {\n      event.preventDefault()\n      return editor.moveWordBackward()\n    }\n\n    if (Hotkeys.isMoveWordForward(event)) {\n      event.preventDefault()\n      return editor.moveWordForward()\n    }\n\n    if (Hotkeys.isExtendBackward(event)) {\n      const startText = document.getNode(start.path)\n      const [prevEntry] = document.texts({\n        path: start.path,\n        direction: 'backward',\n      })\n\n      let isPrevInVoid = false\n\n      if (prevEntry) {\n        const [, prevPath] = prevEntry\n        isPrevInVoid = document.hasVoidParent(prevPath, editor)\n      }\n\n      if (hasVoidParent || isPrevInVoid || startText.text === '') {\n        event.preventDefault()\n        return editor.moveFocusBackward()\n      }\n    }\n\n    if (Hotkeys.isExtendForward(event)) {\n      const startText = document.getNode(start.path)\n      const [nextEntry] = document.texts({ path: start.path })\n      let isNextInVoid = false\n\n      if (nextEntry) {\n        const [, nextPath] = nextEntry\n        isNextInVoid = document.hasVoidParent(nextPath, editor)\n      }\n\n      if (hasVoidParent || isNextInVoid || startText.text === '') {\n        event.preventDefault()\n        return editor.moveFocusForward()\n      }\n    }\n\n    next()\n  }\n\n  /**\n   * On mouse down.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onMouseDown(event, editor, next) {\n    debug('onMouseDown', { event })\n    isMouseDown = true\n    next()\n  }\n\n  /**\n   * On mouse up.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onMouseUp(event, editor, next) {\n    debug('onMouseUp', { event })\n    isMouseDown = false\n    next()\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onPaste(event, editor, next) {\n    debug('onPaste', { event })\n\n    const { value } = editor\n    const transfer = getEventTransfer(event)\n    const { type, fragment, text } = transfer\n\n    if (type === 'fragment') {\n      editor.insertFragment(fragment)\n    }\n\n    if (type === 'text' || type === 'html') {\n      if (!text) return next()\n      const { document, selection, startBlock } = value\n      if (editor.isVoid(startBlock)) return next()\n\n      const defaultBlock = startBlock\n      const defaultMarks = document.getInsertMarksAtRange(selection)\n      const frag = Plain.deserialize(text, { defaultBlock, defaultMarks })\n        .document\n      editor.insertFragment(frag)\n    }\n\n    next()\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onSelect(event, editor, next) {\n    debug('onSelect', { event })\n    const window = getWindow(event.target)\n    const domSelection = window.getSelection()\n    const selection = editor.findSelection(domSelection)\n\n    if (selection) {\n      editor.select(selection)\n    } else {\n      editor.blur()\n    }\n\n    // COMPAT: reset the `isMouseDown` state here in case a `mouseup` event\n    // happens outside the editor. This is needed for `onFocus` handling.\n    isMouseDown = false\n\n    next()\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onClick,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragStart,\n    onDrop,\n    onFocus,\n    onInput,\n    onKeyDown,\n    onMouseDown,\n    onMouseUp,\n    onPaste,\n    onSelect,\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default AfterPlugin\n","import Debug from 'debug'\nimport Hotkeys from 'slate-hotkeys'\nimport getWindow from 'get-window'\nimport {\n  IS_FIREFOX,\n  IS_IE,\n  IS_IOS,\n  HAS_INPUT_EVENTS_LEVEL_2,\n} from 'slate-dev-environment'\n\nimport DATA_ATTRS from '../../constants/data-attributes'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:before')\n\n/**\n * A plugin that adds the \"before\" browser-specific logic to the editor.\n *\n * @return {Object}\n */\n\nfunction BeforePlugin() {\n  let activeElement = null\n  let compositionCount = 0\n  let isComposing = false\n  let isCopying = false\n  let isDragging = false\n  let isUserActionPerformed = false\n\n  /**\n   * On before input.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onBeforeInput(event, editor, next) {\n    const isSynthetic = !!event.nativeEvent\n    if (editor.readOnly) return\n    isUserActionPerformed = true\n\n    // COMPAT: If the browser supports Input Events Level 2, we will have\n    // attached a custom handler for the real `beforeinput` events, instead of\n    // allowing React's synthetic polyfill, so we need to ignore synthetics.\n    if (isSynthetic && HAS_INPUT_EVENTS_LEVEL_2) return\n\n    debug('onBeforeInput', { event })\n    next()\n  }\n\n  /**\n   * On blur.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onBlur(event, editor, next) {\n    if (isCopying) return\n    if (editor.readOnly) return\n\n    const { relatedTarget, target } = event\n    const window = getWindow(target)\n\n    // COMPAT: If the current `activeElement` is still the previous one, this is\n    // due to the window being blurred when the tab itself becomes unfocused, so\n    // we want to abort early to allow to editor to stay focused when the tab\n    // becomes focused again.\n    if (activeElement === window.document.activeElement) return\n\n    // COMPAT: The `relatedTarget` can be null when the new focus target is not\n    // a \"focusable\" element (eg. a `<div>` without `tabindex` set).\n    if (relatedTarget) {\n      const el = editor.findDOMNode([])\n\n      // COMPAT: The event should be ignored if the focus is returning to the\n      // editor from an embedded editable element (eg. an <input> element inside\n      // a void node).\n      if (relatedTarget === el) return\n\n      // COMPAT: The event should be ignored if the focus is moving from the\n      // editor to inside a void node's spacer element.\n      if (relatedTarget.hasAttribute(DATA_ATTRS.SPACER)) return\n\n      // COMPAT: The event should be ignored if the focus is moving to a non-\n      // editable section of an element that isn't a void node (eg. a list item\n      // of the check list example).\n      const node = editor.findNode(relatedTarget)\n\n      if (el.contains(relatedTarget) && node && !editor.isVoid(node)) {\n        return\n      }\n    }\n\n    debug('onBlur', { event })\n    next()\n  }\n\n  /**\n   * On composition end.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCompositionEnd(event, editor, next) {\n    const n = compositionCount\n    isUserActionPerformed = true\n\n    // The `count` check here ensures that if another composition starts\n    // before the timeout has closed out this one, we will abort unsetting the\n    // `isComposing` flag, since a composition is still in affect.\n    window.requestAnimationFrame(() => {\n      if (compositionCount > n) return\n      isComposing = false\n    })\n\n    debug('onCompositionEnd', { event })\n    next()\n  }\n\n  /**\n   * On click.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onClick(event, editor, next) {\n    debug('onClick', { event })\n    isUserActionPerformed = true\n    next()\n  }\n\n  /**\n   * On composition start.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCompositionStart(event, editor, next) {\n    isComposing = true\n    compositionCount++\n\n    const { value } = editor\n    const { selection } = value\n    isUserActionPerformed = true\n\n    if (!selection.isCollapsed) {\n      // https://github.com/ianstormtaylor/slate/issues/1879\n      // When composition starts and the current selection is not collapsed, the\n      // second composition key-down would drop the text wrapping <spans> which\n      // resulted on crash in content.updateSelection after composition ends\n      // (because it cannot find <span> nodes in DOM). This is a workaround that\n      // erases selection as soon as composition starts and preventing <spans>\n      // to be dropped.\n      editor.delete()\n    }\n\n    debug('onCompositionStart', { event })\n    next()\n  }\n\n  /**\n   * On copy.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCopy(event, editor, next) {\n    const window = getWindow(event.target)\n    isCopying = true\n    window.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCopy', { event })\n    next()\n  }\n\n  /**\n   * On cut.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onCut(event, editor, next) {\n    if (editor.readOnly) return\n\n    const window = getWindow(event.target)\n    isCopying = true\n    window.requestAnimationFrame(() => (isCopying = false))\n\n    debug('onCut', { event })\n    next()\n  }\n\n  /**\n   * On drag end.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragEnd(event, editor, next) {\n    isDragging = false\n    debug('onDragEnd', { event })\n    next()\n  }\n\n  /**\n   * On drag enter.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragEnter(event, editor, next) {\n    debug('onDragEnter', { event })\n    next()\n  }\n\n  /**\n   * On drag exit.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragExit(event, editor, next) {\n    debug('onDragExit', { event })\n    next()\n  }\n\n  /**\n   * On drag leave.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragLeave(event, editor, next) {\n    debug('onDragLeave', { event })\n    next()\n  }\n\n  /**\n   * On drag over.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragOver(event, editor, next) {\n    // If the target is inside a void node, and only in this case,\n    // call `preventDefault` to signal that drops are allowed.\n    // When the target is editable, dropping is already allowed by\n    // default, and calling `preventDefault` hides the cursor.\n    const node = editor.findNode(event.target)\n\n    if (!node || editor.isVoid(node)) {\n      event.preventDefault()\n    }\n\n    // COMPAT: IE won't call onDrop on contentEditables unless the\n    // default dragOver is prevented:\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/913982/\n    // (2018/07/11)\n    if (IS_IE) {\n      event.preventDefault()\n    }\n\n    // If a drag is already in progress, don't do this again.\n    if (!isDragging) {\n      isDragging = true\n\n      // COMPAT: IE will raise an `unspecified error` if dropEffect is\n      // set. (2018/07/11)\n      if (!IS_IE) {\n        event.nativeEvent.dataTransfer.dropEffect = 'move'\n      }\n    }\n\n    debug('onDragOver', { event })\n    next()\n  }\n\n  /**\n   * On drag start.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDragStart(event, editor, next) {\n    isDragging = true\n    debug('onDragStart', { event })\n    next()\n  }\n\n  /**\n   * On drop.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onDrop(event, editor, next) {\n    if (editor.readOnly) return\n    isUserActionPerformed = true\n\n    // Prevent default so the DOM's value isn't corrupted.\n    event.preventDefault()\n\n    debug('onDrop', { event })\n    next()\n  }\n\n  /**\n   * On focus.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onFocus(event, editor, next) {\n    if (isCopying) return\n    if (editor.readOnly) return\n\n    const el = editor.findDOMNode([])\n\n    // Save the new `activeElement`.\n    const window = getWindow(event.target)\n    activeElement = window.document.activeElement\n\n    // COMPAT: If the editor has nested editable elements, the focus can go to\n    // those elements. In Firefox, this must be prevented because it results in\n    // issues with keyboard navigation. (2017/03/30)\n    if (IS_FIREFOX && event.target !== el) {\n      el.focus()\n      return\n    }\n\n    debug('onFocus', { event })\n    next()\n  }\n\n  /**\n   * On input.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onInput(event, editor, next) {\n    if (isComposing) return\n    if (editor.value.selection.isBlurred) return\n    isUserActionPerformed = true\n    debug('onInput', { event })\n    next()\n  }\n\n  /**\n   * On key down.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onKeyDown(event, editor, next) {\n    if (editor.readOnly) return\n\n    // When composing, we need to prevent all hotkeys from executing while\n    // typing. However, certain characters also move the selection before\n    // we're able to handle it, so prevent their default behavior.\n    if (isComposing) {\n      if (Hotkeys.isCompose(event)) event.preventDefault()\n      return\n    }\n\n    // Certain hotkeys have native editing behaviors in `contenteditable`\n    // elements which will editor the DOM and cause our value to be out of sync,\n    // so they need to always be prevented.\n    if (\n      !IS_IOS &&\n      (Hotkeys.isBold(event) ||\n        Hotkeys.isDeleteBackward(event) ||\n        Hotkeys.isDeleteForward(event) ||\n        Hotkeys.isDeleteLineBackward(event) ||\n        Hotkeys.isDeleteLineForward(event) ||\n        Hotkeys.isDeleteWordBackward(event) ||\n        Hotkeys.isDeleteWordForward(event) ||\n        Hotkeys.isItalic(event) ||\n        Hotkeys.isRedo(event) ||\n        Hotkeys.isSplitBlock(event) ||\n        Hotkeys.isTransposeCharacter(event) ||\n        Hotkeys.isUndo(event))\n    ) {\n      event.preventDefault()\n    }\n\n    isUserActionPerformed = true\n    debug('onKeyDown', { event })\n    next()\n  }\n\n  /**\n   * On paste.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onPaste(event, editor, next) {\n    if (editor.readOnly) return\n    isUserActionPerformed = true\n\n    // Prevent defaults so the DOM state isn't corrupted.\n    event.preventDefault()\n\n    debug('onPaste', { event })\n    next()\n  }\n\n  /**\n   * On select.\n   *\n   * @param {Event} event\n   * @param {Editor} editor\n   * @param {Function} next\n   */\n\n  function onSelect(event, editor, next) {\n    if (isCopying) return\n    if (isComposing) return\n\n    if (editor.readOnly) return\n\n    // Save the new `activeElement`.\n    const window = getWindow(event.target)\n    activeElement = window.document.activeElement\n    isUserActionPerformed = true\n\n    debug('onSelect', { event })\n    next()\n  }\n\n  function userActionPerformed() {\n    return isUserActionPerformed\n  }\n\n  function clearUserActionPerformed() {\n    isUserActionPerformed = false\n    return null\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return {\n    onBeforeInput,\n    onBlur,\n    onClick,\n    onCompositionEnd,\n    onCompositionStart,\n    onCopy,\n    onCut,\n    onDragEnd,\n    onDragEnter,\n    onDragExit,\n    onDragLeave,\n    onDragOver,\n    onDragStart,\n    onDrop,\n    onFocus,\n    onInput,\n    onKeyDown,\n    onPaste,\n    onSelect,\n    queries: { userActionPerformed },\n    commands: { clearUserActionPerformed },\n  }\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default BeforePlugin\n","import { IS_ANDROID } from 'slate-dev-environment'\n\nimport AndroidPlugin from '../android'\nimport NoopPlugin from '../debug/noop'\n\nimport AfterPlugin from './after'\nimport BeforePlugin from './before'\n\n/**\n * A plugin that adds the browser-specific logic to the editor.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nfunction DOMPlugin(options = {}) {\n  const { plugins = [] } = options\n  const beforePlugin = BeforePlugin()\n  const afterPlugin = AfterPlugin()\n\n  // COMPAT: Add Android specific handling separately before it gets to the\n  // other plugins because it is specific (other browser don't need it) and\n  // finicky (it has to come before other plugins to work).\n  const androidPlugins = IS_ANDROID\n    ? [AndroidPlugin(options), NoopPlugin(options)]\n    : []\n\n  return [...androidPlugins, beforePlugin, ...plugins, afterPlugin]\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default DOMPlugin\n","function RestoreDOMPlugin() {\n  /**\n   * Makes sure that on the next Content `render` the DOM is restored.\n   * This gets us around issues where the DOM is in a different state than\n   * React's virtual DOM and would crash.\n   *\n   * @param {Editor} editor\n   */\n\n  function restoreDOM(editor) {\n    const tmp = editor.tmp.contentRef.current.tmp\n    tmp.contentKey = tmp.contentKey + 1\n  }\n\n  return {\n    commands: {\n      restoreDOM,\n    },\n  }\n}\n\nexport default RestoreDOMPlugin\n","/**\n * Takes a React Synthetic Event or a DOM Event and turns it into a String that\n * is easy to log. It's succinct and keeps info to a bare minimum.\n *\n * @param {Event} event\n */\n\nexport default function stringifyEvent(event) {\n  const e = event.nativeEvent || event\n\n  switch (e.type) {\n    case 'keydown':\n      return `${e.type} ${JSON.stringify(e.key)}`\n    case 'input':\n    case 'beforeinput':\n    case 'textInput':\n      return `${e.type}:${e.inputType} ${JSON.stringify(e.data)}`\n    default:\n      return e.type\n  }\n}\n","import Debug from 'debug'\nimport EVENT_HANDLERS from '../../constants/event-handlers'\nimport stringifyEvent from './stringify-event'\n\n/**\n * Debug events function.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:events')\n\n/**\n * A plugin that sends short easy to digest debug info about each event to\n * browser.\n *\n * @return {Object}\n */\n\nfunction DebugEventsPlugin() {\n  /**\n   * Plugin Object\n   *\n   * @type {Object}\n   */\n\n  const plugin = {}\n\n  for (const eventName of EVENT_HANDLERS) {\n    plugin[eventName] = function(event, editor, next) {\n      const s = stringifyEvent(event)\n      debug(s)\n      next()\n    }\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return plugin\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default DebugEventsPlugin\n","import Debug from 'debug'\nimport EVENT_HANDLERS from '../../constants/event-handlers'\nimport stringifyEvent from './stringify-event'\n\n/**\n * Constants\n */\n\nconst INTERVAL = 2000\n\n/**\n * Debug events function.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:batch-events')\n\n/**\n * A plugin that sends short easy to digest debug info about each event to\n * browser.\n *\n * @return {Object}\n */\n\nfunction DebugBatchEventsPlugin() {\n  /**\n   * When the batch started\n   *\n   * @type {Date}\n   */\n\n  let startDate = null\n\n  /**\n   * The timeoutId used to cancel the timeout\n   *\n   * @type {Any}\n   */\n\n  let timeoutId = null\n\n  /**\n   * An array of events not yet dumped with `debug`\n   *\n   * @type {Array}\n   */\n\n  const events = []\n\n  /**\n   * Send all events to debug\n   *\n   * Note: Formatted so it can easily be cut and pasted as text for analysis or\n   * documentation.\n   */\n\n  function dumpEvents() {\n    debug(`\\n${events.join('\\n')}`)\n    events.length = 0\n  }\n\n  /**\n   * Push an event on to the Array of events for debugging in a batch\n   *\n   * @param {Event} event\n   */\n\n  function pushEvent(event) {\n    if (events.length === 0) {\n      startDate = new Date()\n    }\n\n    const s = stringifyEvent(event)\n    const now = new Date()\n    events.push(`- ${now - startDate} - ${s}`)\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(dumpEvents, INTERVAL)\n  }\n\n  /**\n   * Plugin Object\n   *\n   * @type {Object}\n   */\n\n  const plugin = {}\n\n  for (const eventName of EVENT_HANDLERS) {\n    plugin[eventName] = function(event, editor, next) {\n      pushEvent(event)\n      next()\n    }\n  }\n\n  /**\n   * Return the plugin.\n   *\n   * @type {Object}\n   */\n\n  return plugin\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default DebugBatchEventsPlugin\n","import Debug from 'debug'\n\n/**\n * Debug mutations function.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:mutations')\n\n/**\n * Properties on a MutationRecord\n *\n * @type {Object}\n */\n\nconst MUTATION_PROPERTIES = [\n  'type',\n  'oldValue',\n  'target',\n  'addedNodes',\n  'removedNodes',\n  'attributeName',\n  'attributeNamespace',\n  'nextSibling',\n  'previousSibling',\n]\n\n/**\n * Takes a DOM node and returns an easily readable version of it.\n *\n * @param {DOMNode} node\n */\n\nfunction normalizeNode(node) {\n  if (node.nodeType === window.Node.TEXT_NODE) {\n    return node.textContent\n  } else if (node.nodeType === window.Node.ELEMENT_NODE) {\n    const { outerHTML, innerHTML } = node\n    if (outerHTML == null) return JSON.stringify(node.textContent)\n    return outerHTML.slice(0, outerHTML.indexOf(innerHTML))\n  } else {\n    return `Node(type=${node.nodeType}`\n  }\n}\n\n/**\n * A plugin that sends short easy to digest debug info about each dom mutation\n * to browser.\n *\n * More information about mutations here:\n *\n * <https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver>\n * <https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord>\n *\n * @param {Object} options\n */\n\nfunction DebugMutationsPlugin() {\n  const observer = new window.MutationObserver(mutations => {\n    const array = Array.from(mutations).map(mutationRecord => {\n      const object = {}\n\n      // Only add properties that provide meaningful values to the object\n      // to make the debug info easier to read\n      MUTATION_PROPERTIES.forEach(key => {\n        let value = mutationRecord[key]\n        if (value == null) return\n\n        // Make NodeList easier to read\n        if (value instanceof window.NodeList) {\n          if (value.length === 0) return\n\n          object[key] = Array.from(value)\n            .map(normalizeNode)\n            .join(', ')\n          return\n        }\n\n        // Make Node easier to read\n        if (value instanceof window.Node) {\n          value = normalizeNode(value)\n        }\n\n        object[key] = value\n      })\n\n      return object\n    })\n\n    // The first argument must not be the array as `debug` renders the first\n    // argument in a different way than the rest\n    debug(`${array.length} Mutations`, ...array)\n  })\n\n  /**\n   * The previously observed DOM node\n   *\n   * @type {DOMNode}\n   */\n\n  let prevRootEl = null\n\n  /**\n   * Start observing the DOM node for mutations if it isn't being observed\n   */\n\n  function start(event, editor, next) {\n    const rootEl = editor.findDOMNode([])\n\n    if (rootEl === prevRootEl) return next()\n\n    debug('start')\n\n    observer.observe(rootEl, {\n      childList: true,\n      characterData: true,\n      attributes: true,\n      subtree: true,\n      characterDataOldValue: true,\n    })\n\n    prevRootEl = rootEl\n\n    next()\n  }\n\n  /**\n   * Stop observing the DOM node for mutations\n   */\n\n  function stop(event, editor, next) {\n    debug('stop')\n\n    observer.disconnect()\n    prevRootEl = null\n    next()\n  }\n\n  return {\n    onComponentDidMount: start,\n    onComponentDidUpdate: start,\n    onComponentWillUnmount: stop,\n  }\n}\n\nexport default DebugMutationsPlugin\n","import Debug from 'debug'\n\nimport { IS_ANDROID } from 'slate-dev-environment'\nimport PlaceholderPlugin from 'slate-react-placeholder'\nimport EditorPropsPlugin from './editor-props'\nimport RenderingPlugin from './rendering'\nimport CommandsPlugin from './commands'\nimport QueriesPlugin from './queries'\nimport DOMPlugin from '../dom'\nimport RestoreDOMPlugin from './restore-dom'\nimport DebugEventsPlugin from '../debug/debug-events'\nimport DebugBatchEventsPlugin from '../debug/debug-batch-events'\nimport DebugMutationsPlugin from '../debug/debug-mutations'\n\n/**\n * A plugin that adds the React-specific rendering logic to the editor.\n *\n * @param {Object} options\n * @return {Object}\n */\n\nfunction ReactPlugin(options = {}) {\n  const { placeholder = '' } = options\n  const debugEventsPlugin = Debug.enabled('slate:events')\n    ? DebugEventsPlugin(options)\n    : null\n  const debugBatchEventsPlugin = Debug.enabled('slate:batch-events')\n    ? DebugBatchEventsPlugin(options)\n    : null\n  const debugMutationsPlugin = Debug.enabled('slate:mutations')\n    ? DebugMutationsPlugin(options)\n    : null\n  const renderingPlugin = RenderingPlugin(options)\n  const commandsPlugin = CommandsPlugin(options)\n  const queriesPlugin = QueriesPlugin(options)\n  const editorPropsPlugin = EditorPropsPlugin(options)\n  const domPlugin = DOMPlugin(options)\n  const restoreDomPlugin = RestoreDOMPlugin()\n\n  // Disable placeholder for Android because it messes with reconciliation\n  // and doesn't disappear until composition is complete.\n  // e.g. In empty, type \"h\" and autocomplete on Android 9 and deletes all text.\n  const placeholderPlugin = IS_ANDROID\n    ? null\n    : PlaceholderPlugin({\n        placeholder,\n        when: (editor, node) =>\n          node.object === 'document' &&\n          node.text === '' &&\n          node.nodes.size === 1 &&\n          Array.from(node.texts()).length === 1,\n      })\n\n  return [\n    debugEventsPlugin,\n    debugBatchEventsPlugin,\n    debugMutationsPlugin,\n    editorPropsPlugin,\n    domPlugin,\n    restoreDomPlugin,\n    placeholderPlugin,\n    renderingPlugin,\n    commandsPlugin,\n    queriesPlugin,\n  ]\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default ReactPlugin\n","import Debug from 'debug'\nimport React from 'react'\nimport SlateTypes from 'slate-prop-types'\nimport Types from 'prop-types'\nimport invariant from 'tiny-invariant'\nimport memoizeOne from 'memoize-one'\nimport warning from 'tiny-warning'\nimport omit from 'lodash/omit'\nimport { Editor as Controller } from 'slate'\n\nimport EVENT_HANDLERS from '../constants/event-handlers'\nimport OTHER_HANDLERS from '../constants/other-handlers'\nimport Content from './content'\nimport ReactPlugin from '../plugins/react'\n\n/**\n * Debug.\n *\n * @type {Function}\n */\n\nconst debug = Debug('slate:editor')\n\n/**\n * Editor.\n *\n * @type {Component}\n */\n\nclass Editor extends React.Component {\n  /**\n   * Property types.\n   *\n   * @type {Object}\n   */\n\n  static propTypes = {\n    autoCorrect: Types.bool,\n    autoFocus: Types.bool,\n    className: Types.string,\n    defaultValue: SlateTypes.value,\n    id: Types.string,\n    onChange: Types.func,\n    options: Types.object,\n    placeholder: Types.any,\n    plugins: Types.array,\n    readOnly: Types.bool,\n    role: Types.string,\n    schema: Types.object,\n    spellCheck: Types.bool,\n    style: Types.object,\n    tabIndex: Types.number,\n    value: SlateTypes.value,\n    ...EVENT_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = Types.func\n      return obj\n    }, {}),\n    ...OTHER_HANDLERS.reduce((obj, handler) => {\n      obj[handler] = Types.func\n      return obj\n    }, {}),\n  }\n\n  /**\n   * Default properties.\n   *\n   * @type {Object}\n   */\n\n  static defaultProps = {\n    autoFocus: false,\n    autoCorrect: true,\n    onChange: () => {},\n    options: {},\n    placeholder: '',\n    plugins: [],\n    readOnly: false,\n    schema: {},\n    spellCheck: true,\n  }\n\n  /**\n   * Initial state.\n   *\n   * @type {Object}\n   */\n\n  state = { value: this.props.defaultValue, contentKey: 0 }\n\n  /**\n   * Temporary values.\n   *\n   * @type {Object}\n   */\n\n  tmp = {\n    mounted: false,\n    change: null,\n    resolves: 0,\n    updates: 0,\n    contentRef: React.createRef(),\n  }\n\n  /**\n   * When the component first mounts, flush a queued change if one exists.\n   */\n\n  componentDidMount() {\n    this.tmp.mounted = true\n    this.tmp.updates++\n\n    if (this.props.autoFocus) {\n      this.focus()\n    }\n\n    if (this.tmp.change) {\n      this.handleChange(this.tmp.change)\n      this.tmp.change = null\n    }\n  }\n\n  /**\n   * When the component updates, flush a queued change if one exists.\n   */\n\n  componentDidUpdate() {\n    this.tmp.updates++\n\n    if (this.tmp.change) {\n      this.handleChange(this.tmp.change)\n      this.tmp.change = null\n    }\n  }\n\n  /**\n   * When the component unmounts, make sure async commands don't trigger react updates.\n   */\n\n  componentWillUnmount() {\n    this.tmp.mounted = false\n  }\n\n  /**\n   * Render the editor.\n   *\n   * @return {Element}\n   */\n\n  render() {\n    debug('render', this)\n\n    // Re-resolve the controller if needed based on memoized props.\n    const { commands, placeholder, plugins, queries, schema } = this.props\n\n    this.resolveController(\n      plugins,\n      schema,\n      commands,\n      queries,\n      placeholder,\n      ReactPlugin\n    )\n\n    // Set the current props on the controller.\n    const { options, readOnly, value: valueFromProps } = this.props\n    const { value: valueFromState } = this.state\n    const value = valueFromProps || valueFromState\n    const { contentKey } = this.state\n    this.controller.setReadOnly(readOnly)\n    this.controller.setValue(value, options)\n\n    const {\n      autoCorrect,\n      className,\n      id,\n      role,\n      spellCheck,\n      tabIndex,\n      style,\n      tagName,\n    } = this.props\n\n    const domProps = omit(this.props, Object.keys(Editor.propTypes))\n\n    const children = (\n      <Content\n        {...domProps}\n        ref={this.tmp.contentRef}\n        autoCorrect={autoCorrect}\n        className={className}\n        contentKey={contentKey}\n        editor={this}\n        id={id}\n        onEvent={(handler, event) => this.run(handler, event)}\n        readOnly={readOnly}\n        role={role}\n        spellCheck={spellCheck}\n        style={style}\n        tabIndex={tabIndex}\n        tagName={tagName}\n      />\n    )\n\n    // Render the editor's children with the controller.\n    const element = this.controller.run('renderEditor', {\n      ...this.props,\n      editor: this,\n      children,\n    })\n\n    return element\n  }\n\n  /**\n   * Resolve an editor controller from the passed-in props. This method takes\n   * all of the props as individual arguments to be able to properly memoize\n   * against anything that could change and invalidate the old editor.\n   *\n   * @param {Array} plugins\n   * @param {Object} schema\n   * @param {Object} commands\n   * @param {Object} queries\n   * @param {String} placeholder\n   * @return {Editor}\n   */\n\n  resolveController = memoizeOne(\n    (plugins = [], schema, commands, queries, placeholder, TheReactPlugin) => {\n      // If we've resolved a few times already, and it's exactly in line with\n      // the updates, then warn the user that they may be doing something wrong.\n      warning(\n        this.tmp.resolves < 5 || this.tmp.resolves !== this.tmp.updates,\n        'A Slate <Editor> component is re-resolving the `plugins`, `schema`, `commands`, `queries` or `placeholder` prop on each update, which leads to poor performance. This is often due to passing in a new references for these props with each render by declaring them inline in your render function. Do not do this! Declare them outside your render function, or memoize them instead.'\n      )\n\n      this.tmp.resolves++\n      const react = TheReactPlugin({\n        ...this.props,\n        editor: this,\n        value: this.props.value || this.state.value,\n      })\n\n      const onChange = change => {\n        if (this.tmp.mounted) {\n          this.handleChange(change)\n        } else {\n          this.tmp.change = change\n        }\n      }\n\n      this.controller = new Controller(\n        { plugins: [react], onChange },\n        { controller: this, construct: false }\n      )\n\n      this.controller.run('onConstruct')\n    }\n  )\n\n  handleChange(change) {\n    const { onChange } = this.props\n    const { value } = this.state\n\n    if (value) {\n      // Syncing value inside this component since parent does not want control of it (defaultValue was used)\n      this.setState({ value: change.value })\n    }\n\n    onChange(change)\n  }\n\n  /**\n   * Mimic the API of the `Editor` controller, so that this component instance\n   * can be passed in its place to plugins.\n   */\n\n  get operations() {\n    return this.controller.operations\n  }\n\n  get readOnly() {\n    return this.controller.readOnly\n  }\n\n  get value() {\n    return this.controller.value\n  }\n\n  applyOperation(...args) {\n    return this.controller.applyOperation(...args)\n  }\n\n  command(...args) {\n    return this.controller.command(...args)\n  }\n\n  hasCommand(...args) {\n    return this.controller.hasCommand(...args)\n  }\n\n  hasQuery(...args) {\n    return this.controller.hasQuery(...args)\n  }\n\n  normalize(...args) {\n    return this.controller.normalize(...args)\n  }\n\n  query(...args) {\n    return this.controller.query(...args)\n  }\n\n  registerCommand(...args) {\n    return this.controller.registerCommand(...args)\n  }\n\n  registerQuery(...args) {\n    return this.controller.registerQuery(...args)\n  }\n\n  run(...args) {\n    return this.controller.run(...args)\n  }\n\n  withoutNormalizing(...args) {\n    return this.controller.withoutNormalizing(...args)\n  }\n\n  /**\n   * Deprecated.\n   */\n\n  get editor() {\n    return this.controller.editor\n  }\n\n  get schema() {\n    invariant(\n      false,\n      'As of Slate 0.42, the `editor.schema` property no longer exists, and its functionality has been folded into the editor itself. Use the `editor` instead.'\n    )\n  }\n\n  get stack() {\n    invariant(\n      false,\n      'As of Slate 0.42, the `editor.stack` property no longer exists, and its functionality has been folded into the editor itself. Use the `editor` instead.'\n    )\n  }\n\n  call(...args) {\n    return this.controller.call(...args)\n  }\n\n  change(...args) {\n    return this.controller.change(...args)\n  }\n\n  onChange(...args) {\n    return this.controller.onChange(...args)\n  }\n\n  applyOperations(...args) {\n    return this.controller.applyOperations(...args)\n  }\n\n  setOperationFlag(...args) {\n    return this.controller.setOperationFlag(...args)\n  }\n\n  getFlag(...args) {\n    return this.controller.getFlag(...args)\n  }\n\n  unsetOperationFlag(...args) {\n    return this.controller.unsetOperationFlag(...args)\n  }\n\n  withoutNormalization(...args) {\n    return this.controller.withoutNormalization(...args)\n  }\n}\n\n/**\n * Export.\n *\n * @type {Component}\n */\n\nexport default Editor\n","import { Node } from 'slate'\nimport warning from 'tiny-warning'\n\nimport DATA_ATTRS from '../constants/data-attributes'\n\n/**\n * Find the DOM node for a `key`.\n *\n * @param {String|Node} key\n * @param {Window} win (optional)\n * @return {Element}\n */\n\nfunction findDOMNode(key, win = window) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findDOMNode(key)` helper is deprecated in favor of `editor.findDOMNode(path)`.'\n  )\n\n  if (Node.isNode(key)) {\n    key = key.key\n  }\n\n  const el = win.document.querySelector(`[${DATA_ATTRS.KEY}=\"${key}\"]`)\n\n  if (!el) {\n    throw new Error(\n      `Unable to find a DOM node for \"${key}\". This is often because of forgetting to add \\`props.attributes\\` to a custom component.`\n    )\n  }\n\n  return el\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMNode\n","import findDOMNode from './find-dom-node'\nimport warning from 'tiny-warning'\n\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\n\n/**\n * Find a native DOM selection point from a Slate `point`.\n *\n * @param {Point} point\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMPoint(point, win = window) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findDOMPoint(point)` helper is deprecated in favor of `editor.findDOMPoint(point)`.'\n  )\n\n  const el = findDOMNode(point.key, win)\n  let start = 0\n\n  // For each leaf, we need to isolate its content, which means filtering to its\n  // direct text and zero-width spans. (We have to filter out any other siblings\n  // that may have been rendered alongside them.)\n  const texts = Array.from(\n    el.querySelectorAll(`${SELECTORS.STRING}, ${SELECTORS.ZERO_WIDTH}`)\n  )\n\n  for (const text of texts) {\n    const node = text.childNodes[0]\n    const domLength = node.textContent.length\n    let slateLength = domLength\n\n    if (text.hasAttribute(DATA_ATTRS.LENGTH)) {\n      slateLength = parseInt(text.getAttribute(DATA_ATTRS.LENGTH), 10)\n    }\n\n    const end = start + slateLength\n\n    if (point.offset <= end) {\n      const offset = Math.min(domLength, Math.max(0, point.offset - start))\n      return { node, offset }\n    }\n\n    start = end\n  }\n\n  return null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMPoint\n","import findDOMPoint from './find-dom-point'\nimport warning from 'tiny-warning'\n\n/**\n * Find a native DOM range Slate `range`.\n *\n * @param {Range} range\n * @param {Window} win (optional)\n * @return {Object|Null}\n */\n\nfunction findDOMRange(range, win = window) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findDOMRange(range)` helper is deprecated in favor of `editor.findDOMRange(range)`.'\n  )\n\n  const { anchor, focus, isBackward, isCollapsed } = range\n  const domAnchor = findDOMPoint(anchor, win)\n  const domFocus = isCollapsed ? domAnchor : findDOMPoint(focus, win)\n\n  if (!domAnchor || !domFocus) return null\n\n  const r = win.document.createRange()\n  const start = isBackward ? domFocus : domAnchor\n  const end = isBackward ? domAnchor : domFocus\n  r.setStart(start.node, start.offset)\n  r.setEnd(end.node, end.offset)\n  return r\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findDOMRange\n","import invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { Value } from 'slate'\n\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\n\n/**\n * Find a Slate node from a DOM `element`.\n *\n * @param {Element} element\n * @param {Editor} editor\n * @return {Node|Null}\n */\n\nfunction findNode(element, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findNode(element)` helper is deprecated in favor of `editor.findNode(element)`.'\n  )\n\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `findNode` utility takes an `editor` instead of a `value`.'\n  )\n\n  const closest = element.closest(SELECTORS.KEY)\n  if (!closest) return null\n\n  const key = closest.getAttribute(DATA_ATTRS.KEY)\n  if (!key) return null\n\n  const { value } = editor\n  const { document } = value\n  const node = document.getNode(key)\n  return node || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findNode\n","import findNode from './find-node'\nimport warning from 'tiny-warning'\n\n/**\n * Find a Slate path from a DOM `element`.\n *\n * @param {Element} element\n * @param {Editor} editor\n * @return {List|Null}\n */\n\nfunction findPath(element, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findPath(element)` helper is deprecated in favor of `editor.findPath(element)`.'\n  )\n\n  const node = findNode(element, editor)\n\n  if (!node) {\n    return null\n  }\n\n  const { value } = editor\n  const { document } = value\n  const path = document.getPath(node)\n  return path\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findPath\n","import getWindow from 'get-window'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { Value } from 'slate'\n\nimport OffsetKey from './offset-key'\nimport DATA_ATTRS from '../constants/data-attributes'\nimport SELECTORS from '../constants/selectors'\n\n/**\n * Find a Slate point from a DOM selection's `nativeNode` and `nativeOffset`.\n *\n * @param {Element} nativeNode\n * @param {Number} nativeOffset\n * @param {Editor} editor\n * @return {Point}\n */\n\nfunction findPoint(nativeNode, nativeOffset, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findPoint(node, offset)` helper is deprecated in favor of `editor.findPoint(node, offset)`.'\n  )\n\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `findPoint` utility takes an `editor` instead of a `value`.'\n  )\n\n  const { node: nearestNode, offset: nearestOffset } = normalizeNodeAndOffset(\n    nativeNode,\n    nativeOffset\n  )\n\n  const window = getWindow(nativeNode)\n  const { parentNode } = nearestNode\n  let rangeNode = parentNode.closest(SELECTORS.LEAF)\n  let offset\n  let node\n\n  // Calculate how far into the text node the `nearestNode` is, so that we can\n  // determine what the offset relative to the text node is.\n  if (rangeNode) {\n    const range = window.document.createRange()\n    const textNode = rangeNode.closest(SELECTORS.TEXT)\n    range.setStart(textNode, 0)\n    range.setEnd(nearestNode, nearestOffset)\n    node = textNode\n\n    // COMPAT: Edge has a bug where Range.prototype.toString() will convert \\n\n    // into \\r\\n. The bug causes a loop when slate-react attempts to reposition\n    // its cursor to match the native position. Use textContent.length instead.\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n    const fragment = range.cloneContents()\n    const zeroWidthNodes = fragment.querySelectorAll(\n      `[${DATA_ATTRS.ZERO_WIDTH}]`\n    )\n    offset = fragment.textContent.length - zeroWidthNodes.length\n  } else {\n    // For void nodes, the element with the offset key will be a cousin, not an\n    // ancestor, so find it by going down from the nearest void parent.\n    const voidNode = parentNode.closest(SELECTORS.VOID)\n    if (!voidNode) return null\n    rangeNode = voidNode.querySelector(SELECTORS.LEAF)\n    if (!rangeNode) return null\n    node = rangeNode\n    offset = node.textContent.length\n  }\n\n  // COMPAT: If the parent node is a Slate zero-width space, this is because the\n  // text node should have no characters. However, during IME composition the\n  // ASCII characters will be prepended to the zero-width space, so subtract 1\n  // from the offset to account for the zero-width space character.\n  if (\n    offset === node.textContent.length &&\n    parentNode.hasAttribute(DATA_ATTRS.ZERO_WIDTH)\n  ) {\n    offset--\n  }\n\n  // Get the string value of the offset key attribute.\n  const offsetKey = rangeNode.getAttribute(DATA_ATTRS.OFFSET_KEY)\n  if (!offsetKey) return null\n\n  const { key } = OffsetKey.parse(offsetKey)\n\n  // COMPAT: If someone is clicking from one Slate editor into another, the\n  // select event fires twice, once for the old editor's `element` first, and\n  // then afterwards for the correct `element`. (2017/03/03)\n  const { value } = editor\n  if (!value.document.hasDescendant(key)) return null\n\n  const point = value.document.createPoint({ key, offset })\n  return point\n}\n\n/**\n * From a DOM selection's `node` and `offset`, normalize so that it always\n * refers to a text node.\n *\n * @param {Element} node\n * @param {Number} offset\n * @return {Object}\n */\n\nfunction normalizeNodeAndOffset(node, offset) {\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (node.nodeType === 1 && node.childNodes.length) {\n    const isLast = offset === node.childNodes.length\n    const direction = isLast ? 'backward' : 'forward'\n    const index = isLast ? offset - 1 : offset\n    node = getEditableChild(node, index, direction)\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (node.nodeType === 1 && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, direction)\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return { node, offset }\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n *\n * @param {Element} parent\n * @param {Number} index\n * @param {String} direction ('forward' or 'backward')\n * @return {Element|Null}\n */\n\nfunction getEditableChild(parent, index, direction) {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    child.nodeType === 8 ||\n    (child.nodeType === 1 && child.childNodes.length === 0) ||\n    (child.nodeType === 1 && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) break\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    if (direction === 'forward') i++\n    if (direction === 'backward') i--\n  }\n\n  return child || null\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findPoint\n","import getWindow from 'get-window'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { Value } from 'slate'\n\nimport findPoint from './find-point'\n\n/**\n * Find a Slate range from a DOM `native` selection.\n *\n * @param {Selection} native\n * @param {Editor} editor\n * @return {Range}\n */\n\nfunction findRange(native, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `findRange(selection)` helper is deprecated in favor of `editor.findRange(selection)`.'\n  )\n\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `findNode` utility takes an `editor` instead of a `value`.'\n  )\n\n  const el = native.anchorNode || native.startContainer\n  if (!el) return null\n\n  const window = getWindow(el)\n\n  // If the `native` object is a DOM `Range` or `StaticRange` object, change it\n  // into something that looks like a DOM `Selection` instead.\n  if (\n    native instanceof window.Range ||\n    (window.StaticRange && native instanceof window.StaticRange)\n  ) {\n    native = {\n      anchorNode: native.startContainer,\n      anchorOffset: native.startOffset,\n      focusNode: native.endContainer,\n      focusOffset: native.endOffset,\n    }\n  }\n\n  const {\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset,\n    isCollapsed,\n  } = native\n  const { value } = editor\n  const anchor = findPoint(anchorNode, anchorOffset, editor)\n  const focus = isCollapsed ? anchor : findPoint(focusNode, focusOffset, editor)\n  if (!anchor || !focus) return null\n\n  const { document } = value\n  const range = document.createRange({\n    anchor,\n    focus,\n  })\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default findRange\n","import getWindow from 'get-window'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\nimport { Value } from 'slate'\n\nimport findPath from './find-path'\nimport findRange from './find-range'\n\n/**\n * Get the target range from a DOM `event`.\n *\n * @param {Event} event\n * @param {Editor} editor\n * @return {Range}\n */\n\nfunction getEventRange(event, editor) {\n  warning(\n    false,\n    'As of slate-react@0.22 the `getEventRange(event, editor)` helper is deprecated in favor of `editor.findEventRange(event)`.'\n  )\n\n  invariant(\n    !Value.isValue(editor),\n    'As of Slate 0.42.0, the `findNode` utility takes an `editor` instead of a `value`.'\n  )\n\n  if (event.nativeEvent) {\n    event = event.nativeEvent\n  }\n\n  const { clientX: x, clientY: y, target } = event\n  if (x == null || y == null) return null\n\n  const { value } = editor\n  const { document } = value\n  const path = findPath(event.target, editor)\n  if (!path) return null\n\n  const node = document.getNode(path)\n\n  // If the drop target is inside a void node, move it into either the next or\n  // previous node, depending on which side the `x` and `y` coordinates are\n  // closest to.\n  if (editor.isVoid(node)) {\n    const rect = target.getBoundingClientRect()\n    const isPrevious =\n      node.object === 'inline'\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n    const range = document.createRange()\n    const move = isPrevious ? 'moveToEndOfNode' : 'moveToStartOfNode'\n    const entry = document[isPrevious ? 'getPreviousText' : 'getNextText'](path)\n\n    if (entry) {\n      return range[move](entry)\n    }\n\n    return null\n  }\n\n  // Else resolve a range from the caret position where the drop occured.\n  const window = getWindow(target)\n  let native\n\n  // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n  if (window.document.caretRangeFromPoint) {\n    native = window.document.caretRangeFromPoint(x, y)\n  } else if (window.document.caretPositionFromPoint) {\n    const position = window.document.caretPositionFromPoint(x, y)\n    native = window.document.createRange()\n    native.setStart(position.offsetNode, position.offset)\n    native.setEnd(position.offsetNode, position.offset)\n  } else if (window.document.body.createTextRange) {\n    // COMPAT: In IE, `caretRangeFromPoint` and\n    // `caretPositionFromPoint` don't exist. (2018/07/11)\n    native = window.document.body.createTextRange()\n\n    try {\n      native.moveToPoint(x, y)\n    } catch (error) {\n      // IE11 will raise an `unspecified error` if `moveToPoint` is\n      // called during a dropEvent.\n      return null\n    }\n  }\n\n  // Resolve a Slate range from the DOM range.\n  const range = findRange(native, editor)\n  if (!range) return null\n\n  return range\n}\n\n/**\n * Export.\n *\n * @type {Function}\n */\n\nexport default getEventRange\n","import Editor from './components/editor'\nimport cloneFragment from './utils/clone-fragment'\nimport findDOMNode from './utils/find-dom-node'\nimport findDOMPoint from './utils/find-dom-point'\nimport findDOMRange from './utils/find-dom-range'\nimport findNode from './utils/find-node'\nimport findPath from './utils/find-path'\nimport findPoint from './utils/find-point'\nimport findRange from './utils/find-range'\nimport getEventRange from './utils/get-event-range'\nimport getEventTransfer from './utils/get-event-transfer'\nimport setEventTransfer from './utils/set-event-transfer'\nimport ReactPlugin from './plugins/react'\n\n/**\n * Export.\n *\n * @type {Object}\n */\n\nexport {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMPoint,\n  findDOMRange,\n  findNode,\n  findPath,\n  findPoint,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  ReactPlugin,\n}\n\nexport default {\n  Editor,\n  cloneFragment,\n  findDOMNode,\n  findDOMPoint,\n  findDOMRange,\n  findNode,\n  findPath,\n  findPoint,\n  findRange,\n  getEventRange,\n  getEventTransfer,\n  setEventTransfer,\n  ReactPlugin,\n}\n"],"names":["EVENT_HANDLERS","OTHER_HANDLERS","DATA_ATTRS","OBJECT","EDITOR","KEY","LEAF","STRING","VOID","ZERO_WIDTH","PARSER","parse","string","matches","exec","Error","original","key","index","parseInt","stringify","object","TextString","text","isTrailing","ZeroWidthString","length","isLineBreak","LENGTH","Leaf","marks","props","annotations","decorations","node","offset","editor","parent","block","leaves","offsetKey","OffsetKey","children","query","nodes","last","lastText","getLastText","lastChar","charAt","isLastText","isLastLeaf","size","renderProps","mark","ret","run","decoration","annotation","attrs","OFFSET_KEY","propTypes","ImmutableTypes","list","isRequired","SlateTypes","Types","number","MemoizedLeaf","React","memo","prev","next","equals","Text","forwardRef","ref","style","getLeaves","at","map","leaf","MemoizedText","debug","Debug","Void","readOnly","Tag","spacerAttrs","SPACER","spacer","renderText","content","Component","any","bool","message","args","type","id","textRef","child","getFirstText","Node","nextProps","shouldUpdate","n","p","selection","newDecorations","getDecorations","toArray","i","sel","getRelativeRange","decs","concat","d","filter","anns","a","tmp","nodeRefs","attributes","isLeafBlock","direction","getTextDirection","dir","render","element","isFocused","isVoid","createRef","range","isUnset","get","start","end","startPath","path","endPath","startIndex","first","endIndex","setPath","rest","moveTo","PathUtils","create","setKey","texts","firstNode","firstPath","lastNode","lastPath","setAnchor","setFocus","OVERFLOWS","IS_IOS_11","IS_IOS","window","navigator","userAgent","match","findScrollContainer","el","parentNode","scroller","getComputedStyle","overflowY","includes","document","body","scrollToSelection","anchorNode","getWindow","isWindow","documentElement","backward","isBackward","getRangeAt","cloneRange","collapse","cursorRect","getBoundingClientRect","IS_SAFARI","collapsed","top","height","startOffset","setEnd","endContainer","setStart","startContainer","getClientRects","width","yOffset","xOffset","scrollerTop","scrollerLeft","scrollerBordersY","scrollerBordersX","scrollerPaddingTop","scrollerPaddingBottom","scrollerPaddingLeft","scrollerPaddingRight","innerWidth","innerHeight","pageYOffset","pageXOffset","offsetWidth","offsetHeight","scrollTop","scrollLeft","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","scrollerRect","left","cursorTop","cursorLeft","x","y","scrollTo","removeAllRanges","domSelection","IS_IE","createTextRange","select","FIREFOX_NODE_TYPE_ACCESS_ERROR","update","Content","setRef","current","handlers","reduce","obj","handler","onEvent","event","updateSelection","value","native","getSelection","activeElement","enabled","toJSON","rangeCount","updated","isBlurred","blur","propsToCompare","selectionsEqual","prop","nativeSelection","isInEditor","focus","preventScroll","isSet","findDOMRange","endOffset","isUpdatingSelection","setBaseAndExtent","addRange","userActionPerformed","IS_FIREFOX","anchorOffset","focusOffset","target","nodeType","err","test","isContentEditable","closest","SELECTORS","onNativeSelectionChange","throttle","focusNode","isCollapsed","error","info","setState","addEventListener","HAS_INPUT_EVENTS_LEVEL_2","onBeforeInput","removeEventListener","clearUserActionPerformed","nativeEvent","isUndoRedo","Hotkeys","isUndo","isRedo","IS_ANDROID","findRange","toRange","className","tabIndex","role","tagName","spellCheck","Container","WebkitUserModify","contentKey","data","domProps","omit","Object","keys","autoCorrect","undefined","List","nodeRef","func","defaultProps","PROPS","EditorPropsPlugin","options","plugin","Rendering","position","CommandsPlugin","reconcileNode","getPath","domElement","findDOMNode","getClosestBlock","domText","textContent","isLastNode","slice","entire","moveAnchorTo","moveFocusTo","resolveRange","insertTextAtRange","reconcileDOMNode","domNode","parentElement","findNode","QueriesPlugin","contentRef","search","instance","findDOMPoint","point","Array","from","querySelectorAll","childNodes","domLength","slateLength","hasAttribute","getAttribute","Math","min","max","anchor","domAnchor","domFocus","r","createRange","findPath","getNode","findEventRange","clientX","clientY","rect","isPrevious","move","entry","caretRangeFromPoint","caretPositionFromPoint","offsetNode","moveToPoint","nodeElement","findPoint","nativeNode","nativeOffset","normalizeNodeAndOffset","nearestNode","nearestOffset","leafNode","textNode","TEXT","contents","cloneContents","zeroWidths","forEach","removeChild","voidNode","querySelector","createPoint","domRange","Range","StaticRange","findSelection","anchorText","focusText","anchorInline","getClosestInline","focusInline","focusBlock","anchorBlock","setOffset","depth","getDepth","relativePath","drop","nextPath","absolutePath","createSelection","setIsFocused","set","isLast","getEditableChild","triedForward","triedBackward","getDiffStart","getDiffEnd","prevLength","nextLength","prevChar","nextChar","getDiffOffsets","maxEnd","total","sliceText","offsets","diff","insertText","removeText","ZERO_WIDTH_SPACE","String","fromCharCode","flushControlled","ReactDOM","unstable_flushControlled","renderSync","fn","controller","flush","fixTextAndOffset","prevText","prevOffset","nextOffset","nextText","indexOf","maxOffset","CompositionManager","observer","MutationObserver","win","connect","rootEl","observe","disconnect","clearDiff","clearAction","applyDiff","splitBlock","restoreDOM","mergeBlock","requestAnimationFrame","deleteBackward","onSelectTimeoutId","bufferedMutations","startActionFrameId","isFlushing","startAction","cancelAnimationFrame","mutations","push","flushAction","splitBlockMutation","find","m","addedNodes","addedNode","TEXT_NODE","ELEMENT_NODE","dataset","firstMutation","removedNodes","resolveDOMNode","dataElement","getDescendant","fix","diffText","removeNode","nodeSelection","moveToRangeOfNode","delete","onCompositionStart","onCompositionEnd","setTimeout","onSelect","anchorFix","focusFix","normalizeDOMSelection","toJS","fixSelectionInZeroWidthBlock","isZeroWidth","slateZeroWidth","AndroidPlugin","onComponentDidMount","onComponentDidUpdate","onComponentWillUnmount","onRender","NoopPlugin","eventName","FRAGMENT","TRANSFER_TYPES","HTML","cloneFragment","callback","Value","isValue","fragment","startVoid","getClosestVoid","endVoid","encoded","Base64","serializeNode","attach","trim","setEndAfter","firstChild","call","isNewline","zw","span","createElement","whiteSpace","appendChild","setAttribute","valFromSelection","plainText","Plain","serialize","div","clipboardData","setData","preventDefault","innerHTML","editorEl","selectAllChildren","NODE","RICH","FRAGMENT_MATCHER","getEventTransfer","transfer","dataTransfer","getType","html","rich","files","full","embeddedTypes","getEmbeddedTypes","deserializeNode","items","item","kind","getAsFile","exists","getTransferType","prefix","substring","JSON","types","getData","setEventTransfer","mime","toUpperCase","e","AfterPlugin","isDraggingInternally","isMouseDown","isSynthetic","getTargetRanges","targetRange","inputType","deleteAtRange","deleteWordBackwardAtRange","deleteWordForwardAtRange","deleteLineBackwardAtRange","deleteLineForwardAtRange","hasVoidParent","moveToStartOfNextText","splitBlockAtRange","onBlur","onClick","ancestors","getAncestors","some","moveToEndOfNode","onCopy","onCut","voidPath","removeNodeByKey","onDragEnd","onDragStart","selectionIncludesNode","blocks","onDrop","dispatchEvent","MouseEvent","draggedRange","nxt","moveToStartOfNode","split","line","insertFragment","onFocus","IS_EDGE","deselect","onInput","onKeyDown","isSplitBlock","isDeleteBackward","deleteCharBackward","isDeleteForward","deleteCharForward","isDeleteLineBackward","deleteLineBackward","isDeleteLineForward","deleteLineForward","isDeleteWordBackward","deleteWordBackward","isDeleteWordForward","deleteWordForward","redo","undo","isMoveLineBackward","moveToStartOfBlock","isMoveLineForward","moveToEndOfBlock","isExtendLineBackward","moveFocusToStartOfBlock","isExtendLineForward","moveFocusToEndOfBlock","isMoveBackward","moveToStart","moveBackward","isMoveForward","moveToEnd","moveForward","isMoveWordBackward","moveWordBackward","isMoveWordForward","moveWordForward","isExtendBackward","startText","prevEntry","isPrevInVoid","prevPath","moveFocusBackward","isExtendForward","nextEntry","isNextInVoid","moveFocusForward","onMouseDown","onMouseUp","onPaste","startBlock","defaultBlock","defaultMarks","getInsertMarksAtRange","frag","deserialize","BeforePlugin","compositionCount","isComposing","isCopying","isDragging","isUserActionPerformed","relatedTarget","contains","onDragEnter","onDragExit","onDragLeave","onDragOver","dropEffect","isCompose","isBold","isItalic","isTransposeCharacter","DOMPlugin","plugins","beforePlugin","afterPlugin","androidPlugins","RestoreDOMPlugin","stringifyEvent","DebugEventsPlugin","s","INTERVAL","DebugBatchEventsPlugin","startDate","timeoutId","events","dumpEvents","join","pushEvent","Date","now","MUTATION_PROPERTIES","normalizeNode","outerHTML","DebugMutationsPlugin","array","mutationRecord","NodeList","prevRootEl","stop","ReactPlugin","placeholder","debugEventsPlugin","debugBatchEventsPlugin","debugMutationsPlugin","renderingPlugin","RenderingPlugin","commandsPlugin","queriesPlugin","editorPropsPlugin","domPlugin","restoreDomPlugin","placeholderPlugin","PlaceholderPlugin","Editor","state","defaultValue","resolveController","memoizeOne","TheReactPlugin","resolves","updates","react","onChange","mounted","handleChange","change","Controller","construct","autoFocus","commands","queries","schema","valueFromProps","valueFromState","setReadOnly","setValue","applyOperation","command","hasCommand","hasQuery","normalize","registerCommand","registerQuery","withoutNormalizing","applyOperations","setOperationFlag","getFlag","unsetOperationFlag","withoutNormalization","operations","isNode","rangeNode","zeroWidthNodes","hasDescendant","getEventRange"],"mappings":"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"}