---
import i18next, { t, changeLanguage } from 'i18next'
import { jsonToArticle } from '@models:Article'
import BlogTemplate from 'templates:BlogTemplate'
import ArticleSummary from 'molecules:ArticleSummary'

changeLanguage('en')

export async function getStaticPaths() {
	const postsData = await Astro.glob('../**/*.md')
	const allPosts = postsData
		.filter((post) => !post.frontmatter.draft && post.frontmatter.lang === i18next.language)
		.map((post) => jsonToArticle(post))
		.sort((a, b) => new Date(b.date).valueOf() - new Date(a.date).valueOf())
	const categories = allPosts.map((post) => post.categories).flat()
	return categories.map((category) => {
		return {
			params: { category: category.toLowerCase() },
			props: { posts: allPosts.filter((post) => post.categories.includes(category)) }
		}
	})
}
const { category } = Astro.params
const { posts } = Astro.props
---

<BlogTemplate title={`${t('blog')} | ${category}`} description={`${t('seo.blog-description')} ${category}`}>
	<div class='container mx-auto'>
		{
			posts.map((post) => (
				<article class='mx-2 mb-20 border-b border-gray-400 md:mx-24'>
					<ArticleSummary article={post} />
				</article>
			))
		}
		{
			posts.length === 0 && (
				<div class='container-inner mx-auto py-16 pl-10'>
					<div class='text-center'>
						<h1 class='text-3xl font-bold'>{t('no-articles-found')}</h1>
						<p class='text-gray-600'>{t('try-again')}</p>
					</div>
				</div>
			)
		}
	</div>
</BlogTemplate>
