---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import { type Article, jsonToArticle } from '@models:Article';
import { getLangFromUrl, useTranslations } from '@i18n:utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const publishedBlogEntries = await getCollection('blog', ({ data }) => {
	return !data.draft && data.lang === lang;
});

const postsPromises: Promise<Article>[] = publishedBlogEntries.map((post) => jsonToArticle(post));

const posts: Article[] = await Promise.all(postsPromises);

posts.sort((a, b) => {
	const aDate = new Date(a.date);
	const bDate = new Date(b.date);
	return bDate.getTime() - aDate.getTime();
});

const maxNumberOfPosts = 3;
const lastPosts = posts.slice(0, maxNumberOfPosts);
---

<section id="last3articles" class="flex flex-col content-center items-center justify-center">
	<h2 class="numbered-heading">{t('menus.lastArticles')}</h2>
	<div
		class="mx-4 my-2 flex flex-col content-center justify-center justify-items-center gap-4 md:mx-auto md:flex-row"
	>
		{
			lastPosts.map((post) => {
				const url = `/posts/${post.url}`;
				const imageTransitionName = `article-image-${post.id}`;
				const titleTransitionName = `article-title-${post.id}`;
				const descriptionTransitionName = `article-description-${post.id}`;
				const buttonTransitionName = `article-read-button-${post.id}`;

				return (
					<article class="w-full max-w-sm transform rounded-lg border border-lightest-navy bg-light-navy shadow-md hover:-translate-y-2">
						<a href={url}>
							<Image
								class="h-48 w-96 rounded-t-lg object-fill"
								src={post.cover}
								alt={post.title}
								height={400}
								width={1000}
								transition:name={imageTransitionName}
							/>
							<div class="absolute left-1 right-1 top-1 flex items-center justify-between rounded-lg rounded-b-none px-4">
								<span class="" />
								<div class="font-regular flex flex-col items-center justify-start rounded bg-light-navy/25 text-center text-lightest-slate">
									<span class="leading-0 text-3xl font-semibold">{post.timeToRead}</span>
									<span class="-mt-3 text-xl">Min</span>
								</div>
							</div>
						</a>
						<div class="relative h-64 p-5">
							<a href={url}>
								<h3
									class="mb-1 text-2xl font-bold tracking-tight text-lightest-slate line-clamp-3"
									transition:name={titleTransitionName}
								>
									{post.title}
								</h3>
							</a>
							<p
								class="mb-3 font-normal line-clamp-4 md:line-clamp-3 [text-wrap:balance]"
								transition:name={descriptionTransitionName}
							>
								{post.description}
							</p>
							<footer class="absolute bottom-1">
								<a
									href={url}
									class="inline-flex items-center px-3 py-1 text-sm font-medium"
									transition:name={buttonTransitionName}
								>
									{t('read')}
								</a>
							</footer>
						</div>
					</article>
				);
			})
		}
	</div>
</section>
