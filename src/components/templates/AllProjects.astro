---
import { Project, ProjectJson } from '@models:Project'
import { Tech } from '@models:Tech'
import i18next, { t, changeLanguage } from 'i18next'
import BaseTemplate from 'templates:BaseTemplate'
import ProjectTechList from 'molecules:ProjectTechList'
import ProjectLinks from 'molecules:ProjectLinks'
import { urlize } from '@utils:utilities'
const projectData = await Astro.glob<ProjectJson>('../../data/projects/**/*.json')
const techData = await Astro.glob<Tech>('../../data/technologies/**/*.json')
const tech: {
	[key: string]: Tech
} = {}
techData.forEach((t) => (tech[t.id] = t))
const jsonToProject = (json: ProjectJson): Project => {
	const project: Project = {
		id: json.id,
		title: json.title,
		lang: json.lang,
		date: json.date,
		cover: json.cover,
		repository: json.repository,
		url: json.url,
		company: json.company,
		tech: json.tech.map((t) => tech[urlize(t.toLowerCase())]),
		showInProjects: json.showInProjects,
		featured: json.featured,
		published: json.published,
		content: json.content
	}
	return project
}
const projects: Project[] = projectData
	.filter((project) => project.published && project.lang === i18next.language)
	.sort((a, b) => {
		if (a.date > b.date) return -1
		if (a.date < b.date) return 1
		return 0
	})
	.map((json) => jsonToProject(json))
---

<BaseTemplate
	title={t('projects.title')}
	description={t('projects.description')}
	image='https://images.unsplash.com/photo-1572177812156-58036aae439c?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80'
	ogImageAlt={t('projects.ogImageAlt')}
>
	<div class='container-inner mx-auto py-16 2xl:container'>
		<div>
			<h1 class='big-heading'>{t('all-projects')}</h1>
			<p class='my-5 font-sans text-xl text-green-500 md:text-2xl'>
				{t('big-list')}
			</p>
		</div>

		<div class='relative overflow-x-auto shadow-md sm:rounded-lg'>
			<table class='w-full border-2 border-light-navy text-left text-sm'>
				<thead class='bg-light-navy text-xs uppercase md:text-xl'>
					<tr>
						<th scope='col' class='px-6 py-3'>
							{t('year')}
						</th>
						<th scope='col' class='px-6 py-3'>
							{t('title')}
						</th>
						<th scope='col' class='hidden px-6 py-3 md:table-cell'>
							{t('made-at')}
						</th>
						<th scope='col' class='hidden px-6 py-3 md:table-cell'>
							{t('built-at')}
						</th>
						<th scope='col' class='flex justify-center px-6 py-3'>
							{t('link')}
						</th>
					</tr>
				</thead>
				<tbody>
					{
						projects.map((project) => (
							<tr class='border-b border-lightest-navy bg-navy text-xs hover:bg-lightest-navy dark:border-light-navy dark:hover:bg-lightest-navy md:text-xl'>
								<th scope='row' class='whitespace-nowrap px-6 py-4  font-medium'>
									{typeof project.date === 'string'
										? new Date(project.date).getFullYear()
										: project.date.getFullYear()}
								</th>
								<td class='px-6 py-4'>{project.title}</td>
								<td class='hidden px-6 py-4 md:table-cell'>
									{project.company ? project.company : t('personal-projects')}
								</td>
								<td class='hidden px-6 py-4 md:table-cell'>
									<ProjectTechList project={project} position='start' showIcon={true} />
								</td>
								<td class='px-6 py-4'>
									<ProjectLinks project={project} position='center' />
								</td>
							</tr>
						))
					}
				</tbody>
			</table>
		</div>
	</div>
</BaseTemplate>
