---
import { allLanguages, emojiFlags } from '@i18n:languages';
import { getLangFromUrl, useTranslatedPath } from '@i18n:utils';
const url = Astro.url;
const currentLanguage = getLangFromUrl(url);
const translatePath = useTranslatedPath(currentLanguage);
const supportedLanguages = Object.entries(allLanguages);

export interface Props extends astroHTML.JSX.SelectHTMLAttributes {
	showFlag?: boolean;
	showLabel?: boolean;
}
// replace in the pathname the current language. e.g. /en/about -> /about
// const regex = new RegExp(`^/${currentLanguage}`)
// const pathname = currentLanguage !== 'en' ? url.pathname.replace(regex, '') : url.pathname
// console.log(pathname)
const { showFlag = false, showLabel = true, ...attributes } = Astro.props;
---

<select onchange="location = this.value;" {...attributes}>
	{
		supportedLanguages.map(([lang, label]) => {
			const value = translatePath('/', lang);
			const flag = showFlag ? emojiFlags[lang as keyof typeof emojiFlags] : '';
			const langLabel = showLabel ? label : showFlag ? '' : lang;

			return (
				<option value={value} selected={lang === currentLanguage} lang={lang}>
					{flag} {langLabel}
				</option>
			);
		})
	}
</select>
