---
import WidgetCard from 'molecules:WidgetCard'
import { t } from 'i18next'
import { localizeUrl } from '@utils:utilities'

export interface Props {
	tags: { [key: string]: number }
}
const { tags } = Astro.props

const allTags = Object.keys(tags)

const textSize = (
	tag: string,
	fontSizeClass: string[] = [
		'text-xs',
		'text-sm',
		'text-base',
		'text-lg',
		'text-xl',
		'text-2xl',
		'text-3xl',
		'text-4xl'
	]
): string => {
	const max = Math.max(...Object.values(tags))
	const min = Math.min(...Object.values(tags))
	const range = max - min
	const tagCount = tags[tag]
	const index = Math.floor(((tagCount - min) / range) * (fontSizeClass.length - 1))
	return fontSizeClass[index]
}
---

<WidgetCard title={t('tags')}>
	<div class='tag-cloud-tags'>
		{
			allTags.map((tag) => (
				<a
					href={localizeUrl(`/blog/tag/${tag}`)}
					aria-label={tag}
					class={`inline-link ${textSize(tag)}`}
				>
					<span class='capitalize'>{tag}</span>
				</a>
			))
		}
	</div>
	{allTags.length === 0 && <div class='text-center text-gray-500'>{t('noTags')}</div>}
</WidgetCard>

<style scoped lang='scss'>
	.tag-cloud-tags {
		display: block;
		margin: 0;
		list-style-type: none;
		a {
			display: inline-block;
			padding: 0.3rem;
			line-height: 1em;
			word-break: break-word;
			white-space: normal;
		}
		a:nth-child(5n + 1) {
			transform: rotate(-2deg);
		}
		a:nth-child(3n + 3) {
			transform: rotate(1deg);
		}
		a:nth-child(3n + 4) {
			transform: rotate(-3deg);
		}
		a:nth-child(5n + 5) {
			transform: rotate(3deg);
		}
	}
</style>
